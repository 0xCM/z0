<?xml version="1.0"?>
<doc>
    <assembly>
        <name>z0.lang</name>
    </assembly>
    <members>
        <member name="M:Z0.Cil.describe(dnlib.DotNet.Emit.Instruction)">
            <summary>
            Converts the dnlib-defined data structure to a Z0-defined replication of the dnlib structure
            </summary>
            <param name="src">The dnlib source value</param>
        </member>
        <member name="M:Z0.Cil.describe(dnlib.DotNet.Emit.OpCode)">
            <summary>
            Converts the dnlib-defined data structure to a Z0-defined replication of the dnlib structure
            </summary>
            <param name="src">The dnlib source value</param>
        </member>
        <member name="M:Z0.Cil.load(Z0.CilOpCodeRow@)">
            <summary>
            Populates an opcode dataset
            </summary>
            <param name="dst"></param>
            <remarks>This implementation of this method was derived from test code in the System.Reflection.Metadata .net core repo</remarks>
        </member>
        <member name="M:Z0.CilTables.type(Z0.Name,Z0.CilTableSpec)">
            <summary>
            Manufactures the type that reifies a supplied record definition
            </summary>
            <param name="spec">The record definition</param>
        </member>
        <member name="M:Z0.CilTables.types(Z0.Name,Z0.CilTableSpec[])">
            <summary>
            Manufactures the types that reifies supplied record definitions
            </summary>
            <param name="spec">The record definition</param>
        </member>
        <member name="T:Z0.ICilFunctionWriter">
            <summary>
            Defines service contract for persistent emission of cil functions that accompany asm functions
            </summary>
        </member>
        <member name="P:Z0.ICilFunctionWriter.Target">
            <summary>
            The writer's destintation path
            </summary>
        </member>
        <member name="T:Z0.CilFieldSpec">
            <summary>
            Defines a field
            </summary>
        </member>
        <member name="F:Z0.CilFieldSpec.FieldName">
            <summary>
            The field's name
            </summary>
        </member>
        <member name="F:Z0.CilFieldSpec.TypeName">
            <summary>
            The assembly-qualified name of the field data type
            </summary>
        </member>
        <member name="F:Z0.CilFieldSpec.Position">
            <summary>
            The field's declearation order within the declaring type
            </summary>
        </member>
        <member name="F:Z0.CilFieldSpec.Offset">
            <summary>
            The 0-based offset address of the field in the context of a type with explicit layout; otherwise ignored
            </summary>
        </member>
        <member name="T:Z0.CilFunction">
            <summary>
            Adheres a set of IL instructions with the source method
            </summary>
        </member>
        <member name="F:Z0.CilFunction.Encoded">
            <summary>
            The encoded cil
            </summary>
        </member>
        <member name="T:Z0.Lang.Identifier">
            <summary>
            Represents a legal identifier
            </summary>
        </member>
        <member name="T:Z0.Lang.Identifier`1">
            <summary>
            Represents a legal identifier
            </summary>
        </member>
        <member name="T:Z0.Lang.Literal`2">
            <summary>
            Represents a compile-time literal
            </summary>
        </member>
        <member name="T:Z0.Lang.Test`1">
            <summary>
            Represents a boolean evaluation
            </summary>
        </member>
        <member name="P:Z0.Lang.Test`1.Condition">
            <summary>
            The test condition
            </summary>
        </member>
        <member name="T:Z0.Lang.Test`2">
            <summary>
            Represents a parametric evaluation
            </summary>
        </member>
        <member name="P:Z0.Lang.Test`2.Condition">
            <summary>
            The test condition
            </summary>
        </member>
        <member name="P:Z0.Lang.Test`2.IfTrue">
            <summary>
            The value to return if the condition succeeds
            </summary>
        </member>
        <member name="T:Z0.Lang.Test`3">
            <summary>
            Represents a parametric evaluation
            </summary>
        </member>
        <member name="P:Z0.Lang.Test`3.Condition">
            <summary>
            The test condition
            </summary>
        </member>
        <member name="P:Z0.Lang.Test`3.WhenTrue">
            <summary>
            The value to return if the condition succeeds
            </summary>
        </member>
        <member name="P:Z0.Lang.Test`3.WhenFalse">
            <summary>
            The value to return if the condition succeeds
            </summary>
        </member>
        <member name="T:Z0.MachineFunction">
            <summary>
            Defines an executable x86 function
            </summary>
        </member>
    </members>
</doc>
