# AsmIdColInxs - Intel Vol2A, 3.1.1.3
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Identifier         | Value            | Description|
| bnd                | bnd              | A 128-bit bounds register. BND0 through|
| DST                | DST              | the destination in an instruction. This field is encoded by reg_field|
| ᛁerᛁ               | {er}             | Indicates support for embedded rounding control, which is only applicable to the register-register form of the instruction. This also implies support for SAE (Suppress All Exceptions|
| imm8               | imm8             | An immediate byte value. The imm8 symbol is a signed number between –128 and +127 inclusive. For instructions in which imm8 is combined with a word or doubleword operand, the immediate value is sign-extended to form a word or doubleword. The upper byte of the word is filled with the topmost bit of the immediate value.                                                                                                                                                                                                                                                                                                                                                                                                      |
| imm16              | imm16            | An immediate word value used for instructions whose operand-size attribute is 16 bits.This is a number between [–32,768] and [+32,767] inclusive|
| imm32              | imm32            | An immediate doubleword value used for instructions whose operand-size attribute is 32 bits. It allows the use of a number between [+2147483647, –2147483648] inclusive|
| imm64              | imm64            | An immediate quadword value used for instructions whose operand-size attribute is 64 bits. The value allows the use of a number between +9,223,372,036,854,775,807 and –9,223,372,036,854,775,808 inclusive|
| k1                 | k1               | A mask register used as a regular operand (either destination or source). The 64-bit k registers are: k0 through k|
| m                  | m                | A 16- 32- or 64-bit operand in memory|
| m8                 | m8               | A byte operand in memory ( usually expressed as a variable or array name) but pointed to by the DS:(E)SI or ES:(E)DI registers. In 64-bit mode, it is pointed to by the RSI or RDI registers|
| m16                | m16              | A word operand in memory (usually expressed as a variable or array name) but pointed to by the DS:(E)SI or ES:(E)DI registers. This nomenclature is used only with the string instructions|
| m32                | m32              | A doubleword operand in memory (usually expressed as a variable or array name) but pointed to by the DS:(E)SI or ES:(E)DI registers. This nomenclature is used only with the string instructions|
| m64                | m64              | A memory quadword operand in memory|
| m128               | m128             | A memory double quadword operand in memory                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |
| m16ᙾ16             | m16:16           | A memory operand containing a far pointer composed of two numbers. The number to the left of the colon corresponds to the pointer's segment selector. The number to the right corresponds to its offset|
| m16ᙾ32             | m16:32           | A memory operand containing a far pointer composed of two numbers. The number to the left of the colon corresponds to the pointer's segment selector. The number to the right corresponds to its offset|
| m16ᙾ64             | m16:64           | A memory operand containing a far pointer composed of two numbers. The number to the left of the colon corresponds to the pointer's segment selector. The number to the right corresponds to its offset|
| m16Ʌ32             | m16&32           | A memory operand consisting of data item pairs whose sizes are indicated on the left and the right side of the ampersand. All memory addressing modes are allowed. The m16&16 and m32&32 operands are used by the BOUND instruction to provide an operand containing an upper and lower bounds for array indices. The m16&32 operand is used by LIDT and LGDT to provide a word with which to load the limit field, and a doubleword with which to load the base field of the corresponding GDTR and IDTR registers. The m16&64 operand is used by LIDT and LGDT in 64-bit mode to provide a word with which to load the limit field, and a quadword with which to load the base field of the corresponding GDTR and IDTR registers. |
| m16Ʌ16             | m16&16           | A memory operand consisting of data item pairs whose sizes are indicated on the left and the right side of the ampersand. All memory addressing modes are allowed. The m16&16 and m32&32 operands are used by the BOUND instruction to provide an operand containing an upper and lower bounds for array indices. The m16&32 operand is used by LIDT and LGDT to provide a word with which to load the limit field, and a doubleword with which to load the base field of the corresponding GDTR and IDTR registers. The m16&64 operand is used by LIDT and LGDT in 64-bit mode to provide a word with which to load the limit field, and a quadword with which to load the base field of the corresponding GDTR and IDTR registers. |
| m32Ʌ32             | m32&32           | A memory operand consisting of data item pairs whose sizes are indicated on the left and the right side of the ampersand. All memory addressing modes are allowed. The m16&16 and m32&32 operands are used by the BOUND instruction to provide an operand containing an upper and lower bounds for array indices. The m16&32 operand is used by LIDT and LGDT to provide a word with which to load the limit field, and a doubleword with which to load the base field of the corresponding GDTR and IDTR registers. The m16&64 operand is used by LIDT and LGDT in 64-bit mode to provide a word with which to load the limit field, and a quadword with which to load the base field of the corresponding GDTR and IDTR registers. |
| m16Ʌ64             | m16&64           | A memory operand consisting of data item pairs whose sizes are indicated on the left and the right side of the ampersand. All memory addressing modes are allowed. The m16&16 and m32&32 operands are used by the BOUND instruction to provide an operand containing an upper and lower bounds for array indices. The m16&32 operand is used by LIDT and LGDT to provide a word with which to load the limit field, and a doubleword with which to load the base field of the corresponding GDTR and IDTR registers. The m16&64 operand is used by LIDT and LGDT in 64-bit mode to provide a word with which to load the limit field, and a quadword with which to load the base field of the corresponding GDTR and IDTR registers. |
| m32fp              | m32fp            | A single-precision floating-point operand in memory. These symbols designate floating-point values that are usedas operands for x87 FPU floating-point instructions|
| m64fp              | m64fp            | A double-precision floating-point operand in memory. These symbols designate floating-point values that are used as operands for x87 FPU floating-point instructions|
| m80fp              | m80fp            | A double extended-precision floating-point operand in memory. These symbols designate floating-point values that are used as operands for x87 FPU floating-point instructions|
| m16int             | m16int           | A word integer operand in memory. These symbols designate integers that are used as operands for x87 FPU integer instructions|
| m32int             | m32int           | A doubleword integer operand in memory. These symbols designate integers that are used as operands for x87 FPU integer instructions|
| m64int             | m64int           | A quadword integer operand in memory. These symbols designate integers that are used as operands for x87 FPU integer instructions|
| mm                 | mm               | An MMX register. The 64-bit MMX registers are: MM0 through MM7. The 64-bit MMX registers are: MM0 through MM7. The contents of memory are found at the address provided by the effective address computation|
| mmノm32            | mm/m32           | The low order 32 bits of an MMX register or a 32-bit memory operand|
| mmノm64            | mm/m64           | An MMX register or a 64-bit memory operand|
| mib                | mib              | A memory operand using SIB addressing form, where the index register is not used in address calculation, Scale is ignored. Only the base and displacement are used in effective address calculation|
| moffs8             | moffs8           | A simple memory variable (memory offset) of type byte, word, or doubleword used by some variants of the MOV instruction. The actual address is given by a simple offset relative to the segment base. No ModR/M byte is used in the instruction. The number shown with moffs indicates its size, which is determined by the address-size attribute of the instruction.                                                                                                                                                                                                                                                                                                                                                               |
| moffs16            | moffs16          | A simple memory variable (memory offset) of type byte, word, or doubleword used by some variants of the MOV instruction. The actual address is given by a simple offset relative to the segment base. No ModR/M byte is used in the instruction. The number shown with moffs indicates its size, which is determined by the address-size attribute of the instruction.                                                                                                                                                                                                                                                                                                                                                               |
| moffs32            | moffs32          | A simple memory variable (memory offset) of type byte, word, or doubleword used by some variants of the MOV instruction. The actual address is given by a simple offset relative to the segment base. No ModR/M byte is used in the instruction. The number shown with moffs indicates its size, which is determined by the address-size attribute of the instruction.                                                                                                                                                                                                                                                                                                                                                               |
| moffs64            | moffs64          | A simple memory variable (memory offset) of type byte, word, or doubleword used by some variants of the MOV instruction. The actual address is given by a simple offset relative to the segment base. No ModR/M byte is used in the instruction. The number shown with moffs indicates its size, which is determined by the address-size attribute of the instruction.                                                                                                                                                                                                                                                                                                                                                               |
| ptr16ᙾ16           | ptr16:16         | A far pointer typically to a code segment different from that of the instruction. The notation 16:16 indicates that the value of the pointer has two parts. The value to the left of the colon is a 16- bit selector or value destined for the code segment register. The value to the right corresponds to the offset within the destination segment. The ptr16:16 symbol is used when the instruction's operand-size attribute is 16 bits                                                                                                                                                                                                                                                                                          |
| ptr16ᙾ32           | ptr16:32         | A far pointer typically to a code segment different from that of the instruction and similar to ptr16:16 notation; in this case the ptr16:32 symbol is used when the operand-size attribute is 32 bits|
| r8                 | r8               | One of the byte general-purpose registers: {AL CL DL BL AH CH DH BH BPL SPL DIL SIL}; or one of the byte registers (R8L-R15L) available when using REX.R and 64-bit mode|
| r16                | r16              | One of the word general-purpose registers: {AX CX DX BX SP BP SI DI}; or one of the word registers (R8-R15) available when using REX.R and 64-bit mode|
| r32                | r32              | One of the doubleword general-purpose registers: {EAX ECX EDX EBX ESP EBP ESI EDI}; or one of the doubleword registers (R8D - R15D) available when using REX.R in 64-bit mode|
| r64                | r64              | One of the quadword general-purpose registers: {RAX RBX RCX RDX RDI RSI RBP RSP R8–R15}; These are available when using REX.R and 64-bit mode|
| rel8               | rel8             | A relative address in the range from 128 bytes before the end of the instruction to 127 bytes after the end of the instruction|
| rel16              | rel16            | A relative address within the same code segment as the instruction assembled. The rel16 symbol applies to instructions with an operand-size attribute of 16 bits|
| rel32              | rel32            | A relative address within the same code segment as the instruction assembled. The rel32 symbol applies to instructions with an operand-size attribute of 32 bits|
| rノm8              | r/m8             | A byte operand that is either the contents of a byte general-purpose register: {AL CL DL BL AH CH DH BH BPL SPL DIL SIL}; or a byte from memory. Byte registers R8L - R15L are available using REX.R in 64-bit mode                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
| rノm16             | r/m16            | A word general-purpose register or memory operand used for instructions whose operand-size attribute is 16 bits. The word general-purpose registers are: AX, CX, DX, BX, SP, BP, SI, DI. The contents of memory are found at the address provided by the effective address computation. Word registers R8W - R15W are available using REX.R in 64-bit mode                                                                                                                                                                                                                                                                                                                                                                           |
| rノm32             | r/m32            | A doubleword general-purpose register or memory operand used for instructions whose operand size attribute is 32 bits. The doubleword general-purpose registers are: EAX, ECX, EDX, EBX, ESP, EBP, ESI, EDI. The contents of memory are found at the address provided by the effective address computation. Doubleword registers R8D - R15D are available when using REX.R in 64-bit mode                                                                                                                                                                                                                                                                                                                                            |
| rノm64             | r/m64            | A quadword general-purpose register or memory operand used for instructions whose operand-size attribute is 64 bits when using REX.W. Quadword general-purpose registers are: RAX, RBX, RCX, RDX, RDI, RSI, RBP, RSP, R8–R15; these are available only in 64-bit mode. The contents of memory are found at the address provided by the effective address computation                                                                                                                                                                                                                                                                                                                                                                 |
| Sreg               | Sreg             | A segment register. The segment register bit assignments are ES = 0, CS = 1, SS = 2, DS = 3, FS = 4, and|
| ᛁsaeᛁ              | {sae}            | Indicates support for SAE (Suppress All Exceptions). This is used for instructions that support SAE, but do not support embedded rounding control|
| SRC                | SRC              | The source in a single-source instruction|
| SRC1               | SRC1             | Denotes the first source operand in the instruction syntax of an instruction encoded with the VEX/EVEX prefix and having two or more source operands                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
| SRC2               | SRC2             | Denotes the second source operand in the instruction syntax of an instruction encoded with the VEX/EVEX prefix and having two or more source operands|
| SRC3               | SRC3             | Denotes the third source operand in the instruction syntax of an instruction encoded with the VEX/EVEX prefix and having three source operands|
| ST                 | ST               | The top element of the FPU register stack; a synonym for ST(0)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| STᐸ0ᐳ              | ST(0)            | The top element of the FPU register stack                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
| xmm                | xmm              | An XMM register. The 128-bit XMM registers are: XMM0 through XMM7; XMM8 through XMM15 are available using REX.R in 64-bit mode|
| xmmノ32            | xmm/m32          | An XMM register or a 32-bit memory operand. The 128-bit XMM registers are XMM0 through XMM7; XMM8 through XMM15 are available using REX.R in 64-bit mode. The contents of memory are found at the address provided by the effective address computation                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
| xmmノ64            | xmm/m64          | An XMM register or a 64-bit memory operand. The 128-bit SIMD floating-point registers are XMM0 through XMM7; XMM8 through XMM15 are available using REX.R in 64-bit mode. The contents of memory are found at the address provided by the effective address computation                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
| xmmノ128           | xmm/m128         | An XMM register or a 128-bit memory operand. The 128-bit XMM registers are XMM0 through XMM7; XMM8 through XMM15 are available using REX.R in 64-bit mode. The contents of memory are found at the address provided by the effective address computation                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |
| ᐸXMM0ᐳ             | <XMM0>           | Indicates implied use of the XMM0 register. When there is ambiguity xmm1 indicates the first source operand using an XMM register and xmm2 the second source operand using an XMM register. Some instructions use the XMM0 register as the third source operand, indicated by <XMM0>. The use of the third XMM register operand is implicit in the instruction encoding and does not affect the ModR/M encoding                                                                                                                                                                                                                                                                                                                      |
| ymm                | ymm              | A YMM register. The 256-bit YMM registers are: YMM0 through YMM7; YMM8 through YMM15 are available in 64-bit mode                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
| m256               | m256             | A 32-byte operand in memory. This nomenclature is used only with AVX instructions                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
| ymmノm256          | ymm/m256         | A YMM register or 256-bit memory operand|
| ᐸYMM0ᐳ             | <YMM0>           | Indicates use of the YMM0 register as an implicit argument|
| zmm                | zmm              | A ZMM register|
| m512               | m512             | A 64-byte operand in memory|
| zmmノm512          | zmm/m512         | A ZMM register or 512-bit memory operand|
| mV                 | mV               | A vector memory operand; the operand size is dependent on the instruction|
| m32bcst            | m32bcst          | A broadcast from a 32-bit memory location|
| m64bcst            | m64bcst          | A broadcast from a 64-bit memory location|
| zmmノm512ノm32bcst | zmm/m512/m32bcst | An operand that can be a ZMM register, a 512-bit memory location or a 512-bit vector loaded from a 32-bit memory location|
| zmmノm512ノm64bcst | zmm/m512/m64bcst | An operand that can be a ZMM register, a 512-bit memory location or a 512-bit vector loaded from a 64-bit memory location|
| ᐸZMM0ᐳ             | <ZMM0>           | Indicates use of the ZMM0 register as an implicit argument                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |