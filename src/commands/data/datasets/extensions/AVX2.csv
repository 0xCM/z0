Class               | Category      | Extension     | IsaSet        | BaseCode    | Mod       | Reg       | Pattern                                                                                             | Operands
 | VBROADCASTI128       | BROADCAST      | AVX2           |                | 5a           | mm         | rrr        | VV1 0x5A VL256 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u128  MEM0:r:dq:u128 EMX_BROADCAST_2TO4_64
 | VBROADCASTSD         | BROADCAST      | AVX2           |                | 19           | 0b11       | rrr        | VV1 0x19  VL256 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                  | REG0=YMM_R():w:qq:f64  REG1=XMM_B():r:dq:f64 EMX_BROADCAST_1TO4_64
 | VBROADCASTSS         | BROADCAST      | AVX2           |                | 18           | 0b11       | rrr        | VV1 0x18  VL128 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                  | REG0=XMM_R():w:dq:f32  REG1=XMM_B():r:dq:f32 EMX_BROADCAST_1TO4_32
 | VBROADCASTSS         | BROADCAST      | AVX2           |                | 18           | 0b11       | rrr        | VV1 0x18  VL256 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                  | REG0=YMM_R():w:qq:f32  REG1=XMM_B():r:dq:f32 EMX_BROADCAST_1TO8_32
 | VEXTRACTI128         | AVX2           | AVX2           |                | 39           | mm         | rrr        | VV1 0x39  VL256 V66 V0F3A W0  NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                  | MEM0:w:dq:u128 REG0=YMM_R():r:qq:u128  IMM0:r:b
 | VEXTRACTI128         | AVX2           | AVX2           |                | 39           | 0b11       | rrr        | VV1 0x39  VL256 V66 V0F3A W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                          | REG0=XMM_B():w:dq:u128 REG1=YMM_R():r:qq:u128  IMM0:r:b
 | VINSERTI128          | AVX2           | AVX2           |                | 38           | mm         | rrr        | VV1 0x38  VL256 V66 V0F3A W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                        | REG0=YMM_R():w:qq:u128 REG1=YMM_N():r:qq:u128 MEM0:r:dq:u128 IMM0:r:b
 | VINSERTI128          | AVX2           | AVX2           |                | 38           | 0b11       | rrr        | VV1 0x38  VL256 V66 V0F3A W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                                | REG0=YMM_R():w:qq:u128 REG1=YMM_N():r:qq:u128 REG2=XMM_B():r:dq:u128 IMM0:r:b
 | VMOVNTDQA            | DATAXFER       | AVX2           |                | 2a           | mm         | rrr        | VV1 0x2A  V66 V0F38 VL256 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                              | REG0=YMM_R():w:qq MEM0:r:qq
 | VMPSADBW             | AVX2           | AVX2           |                | 42           | mm         | rrr        | VV1 0x42  VL256 V66 V0F3A  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                           | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8 IMM0:r:b
 | VMPSADBW             | AVX2           | AVX2           |                | 42           | 0b11       | rrr        | VV1 0x42  VL256 V66 V0F3A  MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                                  | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8 IMM0:r:b
 | VPABSB               | AVX2           | AVX2           |                | 1c           | mm         | rrr        | VV1 0x1C   VL256 V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                             | REG0=YMM_R():w:qq:u8 MEM0:r:qq:i8
 | VPABSB               | AVX2           | AVX2           |                | 1c           | 0b11       | rrr        | VV1 0x1C   VL256 V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                    | REG0=YMM_R():w:qq:u8  REG1=YMM_B():r:qq:i8
 | VPABSD               | AVX2           | AVX2           |                | 1e           | mm         | rrr        | VV1 0x1E   VL256 V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                             | REG0=YMM_R():w:qq:u32 MEM0:r:qq:i32
 | VPABSD               | AVX2           | AVX2           |                | 1e           | 0b11       | rrr        | VV1 0x1E   VL256 V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                    | REG0=YMM_R():w:qq:u32  REG1=YMM_B():r:qq:i32
 | VPABSW               | AVX2           | AVX2           |                | 1d           | mm         | rrr        | VV1 0x1D   VL256 V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                             | REG0=YMM_R():w:qq:u16 MEM0:r:qq:i16
 | VPABSW               | AVX2           | AVX2           |                | 1d           | 0b11       | rrr        | VV1 0x1D   VL256 V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                    | REG0=YMM_R():w:qq:u16  REG1=YMM_B():r:qq:i16
 | VPACKSSDW            | AVX2           | AVX2           |                | 6b           | mm         | rrr        | VV1 0x6B  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPACKSSDW            | AVX2           | AVX2           |                | 6b           | 0b11       | rrr        | VV1 0x6B  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPACKSSWB            | AVX2           | AVX2           |                | 63           | mm         | rrr        | VV1 0x63  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPACKSSWB            | AVX2           | AVX2           |                | 63           | 0b11       | rrr        | VV1 0x63  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPACKUSDW            | AVX2           | AVX2           |                | 2b           | mm         | rrr        | VV1 0x2B  V66 V0F38 VL256  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPACKUSDW            | AVX2           | AVX2           |                | 2b           | 0b11       | rrr        | VV1 0x2B  V66 V0F38 VL256 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPACKUSWB            | AVX2           | AVX2           |                | 67           | mm         | rrr        | VV1 0x67  V66 V0F VL256  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPACKUSWB            | AVX2           | AVX2           |                | 67           | 0b11       | rrr        | VV1 0x67  V66 V0F VL256 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPADDB               | AVX2           | AVX2           |                | fc           | mm         | rrr        | VV1 0xFC  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPADDB               | AVX2           | AVX2           |                | fc           | 0b11       | rrr        | VV1 0xFC  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPADDD               | AVX2           | AVX2           |                | fe           | mm         | rrr        | VV1 0xFE  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPADDD               | AVX2           | AVX2           |                | fe           | 0b11       | rrr        | VV1 0xFE  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPADDQ               | AVX2           | AVX2           |                | d4           | mm         | rrr        | VV1 0xD4  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i64 MEM0:r:qq:i64
 | VPADDQ               | AVX2           | AVX2           |                | d4           | 0b11       | rrr        | VV1 0xD4  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i64 REG2=YMM_B():r:qq:i64
 | VPADDSB              | AVX2           | AVX2           |                | ec           | mm         | rrr        | VV1 0xEC  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPADDSB              | AVX2           | AVX2           |                | ec           | 0b11       | rrr        | VV1 0xEC  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPADDSW              | AVX2           | AVX2           |                | ed           | mm         | rrr        | VV1 0xED  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPADDSW              | AVX2           | AVX2           |                | ed           | 0b11       | rrr        | VV1 0xED  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPADDUSB             | AVX2           | AVX2           |                | dc           | mm         | rrr        | VV1 0xDC  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPADDUSB             | AVX2           | AVX2           |                | dc           | 0b11       | rrr        | VV1 0xDC  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPADDUSW             | AVX2           | AVX2           |                | dd           | mm         | rrr        | VV1 0xDD  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPADDUSW             | AVX2           | AVX2           |                | dd           | 0b11       | rrr        | VV1 0xDD  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPADDW               | AVX2           | AVX2           |                | fd           | mm         | rrr        | VV1 0xFD  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPADDW               | AVX2           | AVX2           |                | fd           | 0b11       | rrr        | VV1 0xFD  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPALIGNR             | AVX2           | AVX2           |                | 0f           | mm         | rrr        | VV1 0x0F  VL256 V66 V0F3A  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                           | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8 IMM0:r:b
 | VPALIGNR             | AVX2           | AVX2           |                | 0f           | 0b11       | rrr        | VV1 0x0F  VL256 V66 V0F3A  MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                                  | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8 IMM0:r:b
 | VPAND                | LOGICAL        | AVX2           |                | db           | mm         | rrr        | VV1 0xDB  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 MEM0:r:qq:u256
 | VPAND                | LOGICAL        | AVX2           |                | db           | 0b11       | rrr        | VV1 0xDB   VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                            | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 REG2=YMM_B():r:qq:u256
 | VPANDN               | LOGICAL        | AVX2           |                | df           | mm         | rrr        | VV1 0xDF  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 MEM0:r:qq:u256
 | VPANDN               | LOGICAL        | AVX2           |                | df           | 0b11       | rrr        | VV1 0xDF   VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                            | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 REG2=YMM_B():r:qq:u256
 | VPAVGB               | AVX2           | AVX2           |                | e0           | mm         | rrr        | VV1 0xE0  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPAVGB               | AVX2           | AVX2           |                | e0           | 0b11       | rrr        | VV1 0xE0  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPAVGW               | AVX2           | AVX2           |                | e3           | mm         | rrr        | VV1 0xE3  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPAVGW               | AVX2           | AVX2           |                | e3           | 0b11       | rrr        | VV1 0xE3  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPBLENDD             | AVX2           | AVX2           |                | 02           | mm         | rrr        | VV1 0x02  VL128 V66 V0F3A W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                        | REG0=XMM_R():w:dq:u32  REG1=XMM_N():r:dq:u32  MEM0:r:dq:u32         IMM0:r:b
 | VPBLENDD             | AVX2           | AVX2           |                | 02           | 0b11       | rrr        | VV1 0x02  VL128 V66 V0F3A W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                                | REG0=XMM_R():w:dq:u32  REG1=XMM_N():r:dq:u32  REG2=XMM_B():r:dq:u32 IMM0:r:b
 | VPBLENDD             | AVX2           | AVX2           |                | 02           | mm         | rrr        | VV1 0x02  VL256 V66 V0F3A W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                        | REG0=YMM_R():w:qq:u32  REG1=YMM_N():r:qq:u32  MEM0:r:qq:u32         IMM0:r:b
 | VPBLENDD             | AVX2           | AVX2           |                | 02           | 0b11       | rrr        | VV1 0x02  VL256 V66 V0F3A W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                                | REG0=YMM_R():w:qq:u32  REG1=YMM_N():r:qq:u32  REG2=YMM_B():r:qq:u32 IMM0:r:b
 | VPBLENDVB            | AVX2           | AVX2           |                | 4c           | mm         | rrr        | VV1 0x4C   VL256 V66 V0F3A norexw_prefix MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() SE_IMM8()           | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8 REG2=YMM_SE():r:qq:u8
 | VPBLENDVB            | AVX2           | AVX2           |                | 4c           | 0b11       | rrr        | VV1 0x4C   VL256 V66 V0F3A norexw_prefix MOD[0b11] MOD=3 REG[rrr] RM[nnn] SE_IMM8()                  | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8 REG3=YMM_SE():r:qq:u8
 | VPBLENDW             | AVX2           | AVX2           |                | 0e           | mm         | rrr        | VV1 0x0E  VL256 V66 V0F3A  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                           | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16 IMM0:r:b
 | VPBLENDW             | AVX2           | AVX2           |                | 0e           | 0b11       | rrr        | VV1 0x0E  VL256 V66 V0F3A  MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                                  | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16 IMM0:r:b
 | VPBROADCASTB         | BROADCAST      | AVX2           |                | 78           | mm         | rrr        | VV1 0x78 VL128 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=XMM_R():w:dq:u8 MEM0:r:b:u8 EMX_BROADCAST_1TO16_8
 | VPBROADCASTB         | BROADCAST      | AVX2           |                | 78           | 0b11       | rrr        | VV1 0x78 VL128 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=XMM_R():w:dq:u8  REG1=XMM_B():r:b:u8 EMX_BROADCAST_1TO16_8
 | VPBROADCASTB         | BROADCAST      | AVX2           |                | 78           | mm         | rrr        | VV1 0x78 VL256 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u8 MEM0:r:b:u8 EMX_BROADCAST_1TO32_8
 | VPBROADCASTB         | BROADCAST      | AVX2           |                | 78           | 0b11       | rrr        | VV1 0x78 VL256 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u8  REG1=XMM_B():r:b:u8 EMX_BROADCAST_1TO32_8
 | VPBROADCASTD         | BROADCAST      | AVX2           |                | 58           | mm         | rrr        | VV1 0x58 VL128 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=XMM_R():w:dq:u32 MEM0:r:d:u32 EMX_BROADCAST_1TO4_32
 | VPBROADCASTD         | BROADCAST      | AVX2           |                | 58           | 0b11       | rrr        | VV1 0x58 VL128 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=XMM_R():w:dq:u32  REG1=XMM_B():r:d:u32  EMX_BROADCAST_1TO4_32
 | VPBROADCASTD         | BROADCAST      | AVX2           |                | 58           | mm         | rrr        | VV1 0x58 VL256 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u32 MEM0:r:d:u32  EMX_BROADCAST_1TO8_32
 | VPBROADCASTD         | BROADCAST      | AVX2           |                | 58           | 0b11       | rrr        | VV1 0x58 VL256 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u32  REG1=XMM_B():r:d:u32 EMX_BROADCAST_1TO8_32
 | VPBROADCASTQ         | BROADCAST      | AVX2           |                | 59           | mm         | rrr        | VV1 0x59 VL128 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=XMM_R():w:dq:u64 MEM0:r:q:u64 EMX_BROADCAST_1TO2_64
 | VPBROADCASTQ         | BROADCAST      | AVX2           |                | 59           | 0b11       | rrr        | VV1 0x59 VL128 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=XMM_R():w:dq:u64  REG1=XMM_B():r:q:u64  EMX_BROADCAST_1TO2_64
 | VPBROADCASTQ         | BROADCAST      | AVX2           |                | 59           | mm         | rrr        | VV1 0x59 VL256 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u64 MEM0:r:q:u64 EMX_BROADCAST_1TO4_64
 | VPBROADCASTQ         | BROADCAST      | AVX2           |                | 59           | 0b11       | rrr        | VV1 0x59 VL256 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u64  REG1=XMM_B():r:q:u64  EMX_BROADCAST_1TO4_64
 | VPBROADCASTW         | BROADCAST      | AVX2           |                | 79           | mm         | rrr        | VV1 0x79 VL128 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=XMM_R():w:dq:u16 MEM0:r:w:u16 EMX_BROADCAST_1TO8_16
 | VPBROADCASTW         | BROADCAST      | AVX2           |                | 79           | 0b11       | rrr        | VV1 0x79 VL128 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=XMM_R():w:dq:u16  REG1=XMM_B():r:w:u16  EMX_BROADCAST_1TO8_16
 | VPBROADCASTW         | BROADCAST      | AVX2           |                | 79           | mm         | rrr        | VV1 0x79 VL256 V66 V0F38 W0 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u16 MEM0:r:w:u16 EMX_BROADCAST_1TO16_16
 | VPBROADCASTW         | BROADCAST      | AVX2           |                | 79           | 0b11       | rrr        | VV1 0x79 VL256 V66 V0F38 W0 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u16  REG1=XMM_B():r:w:u16 EMX_BROADCAST_1TO16_16
 | VPCMPEQB             | AVX2           | AVX2           |                | 74           | mm         | rrr        | VV1 0x74  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPCMPEQB             | AVX2           | AVX2           |                | 74           | 0b11       | rrr        | VV1 0x74  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPCMPEQD             | AVX2           | AVX2           |                | 76           | mm         | rrr        | VV1 0x76  V66 V0F VL256  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 MEM0:r:qq:u32
 | VPCMPEQD             | AVX2           | AVX2           |                | 76           | 0b11       | rrr        | VV1 0x76  V66 V0F VL256 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 REG2=YMM_B():r:qq:u32
 | VPCMPEQQ             | AVX2           | AVX2           |                | 29           | mm         | rrr        | VV1 0x29  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 MEM0:r:qq:u64
 | VPCMPEQQ             | AVX2           | AVX2           |                | 29           | 0b11       | rrr        | VV1 0x29  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 REG2=YMM_B():r:qq:u64
 | VPCMPEQW             | AVX2           | AVX2           |                | 75           | mm         | rrr        | VV1 0x75  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPCMPEQW             | AVX2           | AVX2           |                | 75           | 0b11       | rrr        | VV1 0x75  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPCMPGTB             | AVX2           | AVX2           |                | 64           | mm         | rrr        | VV1 0x64  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPCMPGTB             | AVX2           | AVX2           |                | 64           | 0b11       | rrr        | VV1 0x64  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPCMPGTD             | AVX2           | AVX2           |                | 66           | mm         | rrr        | VV1 0x66  V66 V0F VL256  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPCMPGTD             | AVX2           | AVX2           |                | 66           | 0b11       | rrr        | VV1 0x66  V66 V0F VL256 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPCMPGTQ             | AVX2           | AVX2           |                | 37           | mm         | rrr        | VV1 0x37  V66 V0F38 VL256  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i64 MEM0:r:qq:i64
 | VPCMPGTQ             | AVX2           | AVX2           |                | 37           | 0b11       | rrr        | VV1 0x37  V66 V0F38 VL256 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i64 REG2=YMM_B():r:qq:i64
 | VPCMPGTW             | AVX2           | AVX2           |                | 65           | mm         | rrr        | VV1 0x65  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPCMPGTW             | AVX2           | AVX2           |                | 65           | 0b11       | rrr        | VV1 0x65  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPERM2I128           | AVX2           | AVX2           |                | 46           | mm         | rrr        | VV1 0x46  VL256 V66 V0F3A W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                        | REG0=YMM_R():w:qq:u128  REG1=YMM_N():r:qq:u128  MEM0:r:qq:u128         IMM0:r:b
 | VPERM2I128           | AVX2           | AVX2           |                | 46           | 0b11       | rrr        | VV1 0x46  VL256 V66 V0F3A W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                                | REG0=YMM_R():w:qq:u128  REG1=YMM_N():r:qq:u128  REG2=YMM_B():r:qq:u128 IMM0:r:b
 | VPERMD               | AVX2           | AVX2           |                | 36           | mm         | rrr        | VV1 0x36  VL256 V66 V0F38 W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                 | REG0=YMM_R():w:qq:u32  REG1=YMM_N():r:qq:u32  MEM0:r:qq:u32
 | VPERMD               | AVX2           | AVX2           |                | 36           | 0b11       | rrr        | VV1 0x36  VL256 V66 V0F38 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=YMM_R():w:qq:u32  REG1=YMM_N():r:qq:u32  REG2=YMM_B():r:qq:u32
 | VPERMPD              | AVX2           | AVX2           |                | 01           | mm         | rrr        | VV1 0x01 VL256 V0F3A V66 W1 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                    | REG0=YMM_R():w:qq:f64 MEM0:r:qq:f64  IMM0:r:b
 | VPERMPD              | AVX2           | AVX2           |                | 01           | 0b11       | rrr        | VV1 0x01 VL256 V0F3A V66 W1 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                           | REG0=YMM_R():w:qq:f64 REG1=YMM_B():r:qq:f64 IMM0:r:b
 | VPERMPS              | AVX2           | AVX2           |                | 16           | mm         | rrr        | VV1 0x16  VL256 V66 V0F38 W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                 | REG0=YMM_R():w:qq:f32  REG1=YMM_N():r:qq:f32  MEM0:r:qq:f32
 | VPERMPS              | AVX2           | AVX2           |                | 16           | 0b11       | rrr        | VV1 0x16  VL256 V66 V0F38 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=YMM_R():w:qq:f32  REG1=YMM_N():r:qq:f32  REG2=YMM_B():r:qq:f32
 | VPERMQ               | AVX2           | AVX2           |                | 00           | mm         | rrr        | VV1 0x00 VL256 V0F3A V66 W1 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                    | REG0=YMM_R():w:qq:u64 MEM0:r:qq:u64  IMM0:r:b
 | VPERMQ               | AVX2           | AVX2           |                | 00           | 0b11       | rrr        | VV1 0x00 VL256 V0F3A V66 W1 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                           | REG0=YMM_R():w:qq:u64 REG1=YMM_B():r:qq:u64 IMM0:r:b
 | VPHADDD              | AVX2           | AVX2           |                | 02           | mm         | rrr        | VV1 0x02  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPHADDD              | AVX2           | AVX2           |                | 02           | 0b11       | rrr        | VV1 0x02  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPHADDSW             | AVX2           | AVX2           |                | 03           | mm         | rrr        | VV1 0x03  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPHADDSW             | AVX2           | AVX2           |                | 03           | 0b11       | rrr        | VV1 0x03  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPHADDW              | AVX2           | AVX2           |                | 01           | mm         | rrr        | VV1 0x01  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPHADDW              | AVX2           | AVX2           |                | 01           | 0b11       | rrr        | VV1 0x01  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPHSUBD              | AVX2           | AVX2           |                | 06           | mm         | rrr        | VV1 0x06  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPHSUBD              | AVX2           | AVX2           |                | 06           | 0b11       | rrr        | VV1 0x06  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPHSUBSW             | AVX2           | AVX2           |                | 07           | mm         | rrr        | VV1 0x07  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPHSUBSW             | AVX2           | AVX2           |                | 07           | 0b11       | rrr        | VV1 0x07  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPHSUBW              | AVX2           | AVX2           |                | 05           | mm         | rrr        | VV1 0x05  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPHSUBW              | AVX2           | AVX2           |                | 05           | 0b11       | rrr        | VV1 0x05  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPMADDUBSW           | AVX2           | AVX2           |                | 04           | mm         | rrr        | VV1 0x04  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:u8 MEM0:r:qq:i8
 | VPMADDUBSW           | AVX2           | AVX2           |                | 04           | 0b11       | rrr        | VV1 0x04  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:i8
 | VPMADDWD             | AVX2           | AVX2           |                | f5           | mm         | rrr        | VV1 0xF5  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPMADDWD             | AVX2           | AVX2           |                | f5           | 0b11       | rrr        | VV1 0xF5  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPMASKMOVD           | AVX2           | AVX2           |                | 8c           | mm         | rrr        | VV1 0x8C  VL128 V66 V0F38 W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=XMM_R():w:dq:u32  REG1=XMM_N():r:dq:u32  MEM0:r:dq:u32
 | VPMASKMOVD           | AVX2           | AVX2           |                | 8c           | mm         | rrr        | VV1 0x8C  VL256 V66 V0F38 W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=YMM_R():w:qq:u32  REG1=YMM_N():r:qq:u32  MEM0:r:qq:u32
 | VPMASKMOVD           | AVX2           | AVX2           |                | 8e           | mm         | rrr        | VV1 0x8E  VL128 V66 V0F38 W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | MEM0:w:dq:u32  REG0=XMM_N():r:dq:u32  REG1=XMM_R():r:dq:u32
 | VPMASKMOVD           | AVX2           | AVX2           |                | 8e           | mm         | rrr        | VV1 0x8E  VL256 V66 V0F38 W0  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | MEM0:w:qq:u32  REG0=YMM_N():r:qq:u32  REG1=YMM_R():r:qq:u32
 | VPMASKMOVQ           | AVX2           | AVX2           |                | 8c           | mm         | rrr        | VV1 0x8C  VL128 V66 V0F38 W1  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=XMM_R():w:dq:u64  REG1=XMM_N():r:dq:u64  MEM0:r:dq:u64
 | VPMASKMOVQ           | AVX2           | AVX2           |                | 8c           | mm         | rrr        | VV1 0x8C  VL256 V66 V0F38 W1  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=YMM_R():w:qq:u64  REG1=YMM_N():r:qq:u64  MEM0:r:qq:u64
 | VPMASKMOVQ           | AVX2           | AVX2           |                | 8e           | mm         | rrr        | VV1 0x8E  VL128 V66 V0F38 W1  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | MEM0:w:dq:u64  REG0=XMM_N():r:dq:u64  REG1=XMM_R():r:dq:u64
 | VPMASKMOVQ           | AVX2           | AVX2           |                | 8e           | mm         | rrr        | VV1 0x8E  VL256 V66 V0F38 W1  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | MEM0:w:qq:u64  REG0=YMM_N():r:qq:u64  REG1=YMM_R():r:qq:u64
 | VPMAXSB              | AVX2           | AVX2           |                | 3c           | mm         | rrr        | VV1 0x3C  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPMAXSB              | AVX2           | AVX2           |                | 3c           | 0b11       | rrr        | VV1 0x3C  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPMAXSD              | AVX2           | AVX2           |                | 3d           | mm         | rrr        | VV1 0x3D  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPMAXSD              | AVX2           | AVX2           |                | 3d           | 0b11       | rrr        | VV1 0x3D  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPMAXSW              | AVX2           | AVX2           |                | ee           | mm         | rrr        | VV1 0xEE  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPMAXSW              | AVX2           | AVX2           |                | ee           | 0b11       | rrr        | VV1 0xEE  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPMAXUB              | AVX2           | AVX2           |                | de           | mm         | rrr        | VV1 0xDE  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPMAXUB              | AVX2           | AVX2           |                | de           | 0b11       | rrr        | VV1 0xDE  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPMAXUD              | AVX2           | AVX2           |                | 3f           | mm         | rrr        | VV1 0x3F  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 MEM0:r:qq:u32
 | VPMAXUD              | AVX2           | AVX2           |                | 3f           | 0b11       | rrr        | VV1 0x3F  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 REG2=YMM_B():r:qq:u32
 | VPMAXUW              | AVX2           | AVX2           |                | 3e           | mm         | rrr        | VV1 0x3E  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPMAXUW              | AVX2           | AVX2           |                | 3e           | 0b11       | rrr        | VV1 0x3E  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPMINSB              | AVX2           | AVX2           |                | 38           | mm         | rrr        | VV1 0x38  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPMINSB              | AVX2           | AVX2           |                | 38           | 0b11       | rrr        | VV1 0x38  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPMINSD              | AVX2           | AVX2           |                | 39           | mm         | rrr        | VV1 0x39  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPMINSD              | AVX2           | AVX2           |                | 39           | 0b11       | rrr        | VV1 0x39  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPMINSW              | AVX2           | AVX2           |                | ea           | mm         | rrr        | VV1 0xEA  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPMINSW              | AVX2           | AVX2           |                | ea           | 0b11       | rrr        | VV1 0xEA  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPMINUB              | AVX2           | AVX2           |                | da           | mm         | rrr        | VV1 0xDA  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPMINUB              | AVX2           | AVX2           |                | da           | 0b11       | rrr        | VV1 0xDA  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPMINUD              | AVX2           | AVX2           |                | 3b           | mm         | rrr        | VV1 0x3B  V66 V0F38 VL256  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 MEM0:r:qq:u32
 | VPMINUD              | AVX2           | AVX2           |                | 3b           | 0b11       | rrr        | VV1 0x3B  V66 V0F38 VL256 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 REG2=YMM_B():r:qq:u32
 | VPMINUW              | AVX2           | AVX2           |                | 3a           | mm         | rrr        | VV1 0x3A  V66 V0F38 VL256  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPMINUW              | AVX2           | AVX2           |                | 3a           | 0b11       | rrr        | VV1 0x3A  V66 V0F38 VL256 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPMOVMSKB            | AVX2           | AVX2           |                | d7           | 0b11       | rrr        | VV1 0xD7  VL256 V66 V0F  NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                      | REG0=GPR32_R():w:d:u32   REG1=YMM_B():r:qq:i8
 | VPMOVSXBD            | AVX2           | AVX2           |                | 21           | 0b11       | rrr        | VV1 0x21   VL256  V66 V0F38 NOVSR  MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                  | REG0=YMM_R():w:qq:i32   REG1=XMM_B():r:q:i8
 | VPMOVSXBD            | AVX2           | AVX2           |                | 21           | mm         | rrr        | VV1 0x21   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:i32   MEM0:r:q:i8
 | VPMOVSXBQ            | AVX2           | AVX2           |                | 22           | 0b11       | rrr        | VV1 0x22   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:i64   REG1=XMM_B():r:d:i8
 | VPMOVSXBQ            | AVX2           | AVX2           |                | 22           | mm         | rrr        | VV1 0x22   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:i64   MEM0:r:d:i8
 | VPMOVSXBW            | AVX2           | AVX2           |                | 20           | 0b11       | rrr        | VV1 0x20   VL256  V66 V0F38 NOVSR  MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                  | REG0=YMM_R():w:qq:i16   REG1=XMM_B():r:dq:i8
 | VPMOVSXBW            | AVX2           | AVX2           |                | 20           | mm         | rrr        | VV1 0x20   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:i16   MEM0:r:dq:i8
 | VPMOVSXDQ            | AVX2           | AVX2           |                | 25           | 0b11       | rrr        | VV1 0x25   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:i64   REG1=XMM_B():r:dq:i32
 | VPMOVSXDQ            | AVX2           | AVX2           |                | 25           | mm         | rrr        | VV1 0x25   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:i64   MEM0:r:dq:i32
 | VPMOVSXWD            | AVX2           | AVX2           |                | 23           | 0b11       | rrr        | VV1 0x23   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:i32   REG1=XMM_B():r:dq:i16
 | VPMOVSXWD            | AVX2           | AVX2           |                | 23           | mm         | rrr        | VV1 0x23   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:i32   MEM0:r:dq:i16
 | VPMOVSXWQ            | AVX2           | AVX2           |                | 24           | 0b11       | rrr        | VV1 0x24   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:i64   REG1=XMM_B():r:q:i16
 | VPMOVSXWQ            | AVX2           | AVX2           |                | 24           | mm         | rrr        | VV1 0x24   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:i64   MEM0:r:q:i16
 | VPMOVZXBD            | AVX2           | AVX2           |                | 31           | 0b11       | rrr        | VV1 0x31   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u32   REG1=XMM_B():r:q:u8
 | VPMOVZXBD            | AVX2           | AVX2           |                | 31           | mm         | rrr        | VV1 0x31   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u32   MEM0:r:q:u8
 | VPMOVZXBQ            | AVX2           | AVX2           |                | 32           | 0b11       | rrr        | VV1 0x32   V66  V0F38 VL256 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u64  REG1=XMM_B():r:d:u8
 | VPMOVZXBQ            | AVX2           | AVX2           |                | 32           | mm         | rrr        | VV1 0x32   V66  V0F38 VL256 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u64   MEM0:r:d:u8
 | VPMOVZXBW            | AVX2           | AVX2           |                | 30           | 0b11       | rrr        | VV1 0x30   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u16   REG1=XMM_B():r:dq:u8
 | VPMOVZXBW            | AVX2           | AVX2           |                | 30           | mm         | rrr        | VV1 0x30   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u16   MEM0:r:dq:u8
 | VPMOVZXDQ            | AVX2           | AVX2           |                | 35           | 0b11       | rrr        | VV1 0x35   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u64   REG1=XMM_B():r:dq:u32
 | VPMOVZXDQ            | AVX2           | AVX2           |                | 35           | mm         | rrr        | VV1 0x35   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u64   MEM0:r:dq:u32
 | VPMOVZXWD            | AVX2           | AVX2           |                | 33           | 0b11       | rrr        | VV1 0x33   V66  V0F38 VL256 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u32   REG1=XMM_B():r:dq:u16
 | VPMOVZXWD            | AVX2           | AVX2           |                | 33           | mm         | rrr        | VV1 0x33   V66  V0F38 VL256 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u32   MEM0:r:dq:u16
 | VPMOVZXWQ            | AVX2           | AVX2           |                | 34           | 0b11       | rrr        | VV1 0x34   VL256  V66 V0F38 NOVSR MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                   | REG0=YMM_R():w:qq:u64   REG1=XMM_B():r:q:u16
 | VPMOVZXWQ            | AVX2           | AVX2           |                | 34           | mm         | rrr        | VV1 0x34   VL256  V66 V0F38 NOVSR MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                            | REG0=YMM_R():w:qq:u64   MEM0:r:q:u16
 | VPMULDQ              | AVX2           | AVX2           |                | 28           | mm         | rrr        | VV1 0x28  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPMULDQ              | AVX2           | AVX2           |                | 28           | 0b11       | rrr        | VV1 0x28  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPMULHRSW            | AVX2           | AVX2           |                | 0b           | mm         | rrr        | VV1 0x0B  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPMULHRSW            | AVX2           | AVX2           |                | 0b           | 0b11       | rrr        | VV1 0x0B  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPMULHUW             | AVX2           | AVX2           |                | e4           | mm         | rrr        | VV1 0xE4  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPMULHUW             | AVX2           | AVX2           |                | e4           | 0b11       | rrr        | VV1 0xE4  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPMULHW              | AVX2           | AVX2           |                | e5           | mm         | rrr        | VV1 0xE5  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPMULHW              | AVX2           | AVX2           |                | e5           | 0b11       | rrr        | VV1 0xE5  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPMULLD              | AVX2           | AVX2           |                | 40           | mm         | rrr        | VV1 0x40  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPMULLD              | AVX2           | AVX2           |                | 40           | 0b11       | rrr        | VV1 0x40  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPMULLW              | AVX2           | AVX2           |                | d5           | mm         | rrr        | VV1 0xD5  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPMULLW              | AVX2           | AVX2           |                | d5           | 0b11       | rrr        | VV1 0xD5  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPMULUDQ             | AVX2           | AVX2           |                | f4           | mm         | rrr        | VV1 0xF4  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u32 MEM0:r:qq:u32
 | VPMULUDQ             | AVX2           | AVX2           |                | f4           | 0b11       | rrr        | VV1 0xF4  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u32 REG2=YMM_B():r:qq:u32
 | VPOR                 | LOGICAL        | AVX2           |                | eb           | mm         | rrr        | VV1 0xEB  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 MEM0:r:qq:u256
 | VPOR                 | LOGICAL        | AVX2           |                | eb           | 0b11       | rrr        | VV1 0xEB   VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                            | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 REG2=YMM_B():r:qq:u256
 | VPSADBW              | AVX2           | AVX2           |                | f6           | mm         | rrr        | VV1 0xF6  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPSADBW              | AVX2           | AVX2           |                | f6           | 0b11       | rrr        | VV1 0xF6  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPSHUFB              | AVX2           | AVX2           |                | 00           | mm         | rrr        | VV1 0x00  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPSHUFB              | AVX2           | AVX2           |                | 00           | 0b11       | rrr        | VV1 0x00  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPSHUFD              | AVX2           | AVX2           |                | 70           | mm         | rrr        | VV1 0x70   VL256 V66 V0F NOVSR   MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                     | REG0=YMM_R():w:qq:u32 MEM0:r:qq:u32  IMM0:r:b
 | VPSHUFD              | AVX2           | AVX2           |                | 70           | 0b11       | rrr        | VV1 0x70   VL256 V66 V0F NOVSR  MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                             | REG0=YMM_R():w:qq:u32 REG1=YMM_B():r:qq:u32 IMM0:r:b
 | VPSHUFHW             | AVX2           | AVX2           |                | 70           | mm         | rrr        | VV1 0x70   VL256 VF3 V0F NOVSR   MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                     | REG0=YMM_R():w:qq:u16 MEM0:r:qq:u16  IMM0:r:b
 | VPSHUFHW             | AVX2           | AVX2           |                | 70           | 0b11       | rrr        | VV1 0x70   VL256 VF3 V0F NOVSR  MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                             | REG0=YMM_R():w:qq:u16 REG1=YMM_B():r:qq:u16 IMM0:r:b
 | VPSHUFLW             | AVX2           | AVX2           |                | 70           | mm         | rrr        | VV1 0x70   VL256 VF2 V0F NOVSR   MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM() UIMM8()                     | REG0=YMM_R():w:qq:u16 MEM0:r:qq:u16  IMM0:r:b
 | VPSHUFLW             | AVX2           | AVX2           |                | 70           | 0b11       | rrr        | VV1 0x70   VL256 VF2 V0F NOVSR  MOD[0b11] MOD=3 REG[rrr] RM[nnn] UIMM8()                             | REG0=YMM_R():w:qq:u16 REG1=YMM_B():r:qq:u16 IMM0:r:b
 | VPSIGNB              | AVX2           | AVX2           |                | 08           | mm         | rrr        | VV1 0x08  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPSIGNB              | AVX2           | AVX2           |                | 08           | 0b11       | rrr        | VV1 0x08  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPSIGND              | AVX2           | AVX2           |                | 0a           | mm         | rrr        | VV1 0x0A  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPSIGND              | AVX2           | AVX2           |                | 0a           | 0b11       | rrr        | VV1 0x0A  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPSIGNW              | AVX2           | AVX2           |                | 09           | mm         | rrr        | VV1 0x09  VL256 V66 V0F38  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                   | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPSIGNW              | AVX2           | AVX2           |                | 09           | 0b11       | rrr        | VV1 0x09  VL256 V66 V0F38 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                           | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPSLLD               | AVX2           | AVX2           |                | f2           | mm         | rrr        | VV1 0xF2  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 MEM0:r:dq:u64
 | VPSLLD               | AVX2           | AVX2           |                | f2           | 0b11       | rrr        | VV1 0xF2  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 REG2=XMM_B():r:q:u64
 | VPSLLD               | AVX2           | AVX2           |                | 72           | 0b11       | 0b110      | VV1 0x72   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b110] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u32 REG1=YMM_B():r:qq:u32 IMM0:r:b  #NDD
 | VPSLLDQ              | AVX2           | AVX2           |                | 73           | 0b11       | 0b111      | VV1 0x73  VL256 V66 V0F   MOD[0b11] MOD=3 REG[0b111] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u128 REG1=YMM_B():r:qq:u128 IMM0:r:b   # NDD
 | VPSLLQ               | AVX2           | AVX2           |                | f3           | mm         | rrr        | VV1 0xF3  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 MEM0:r:dq:u64
 | VPSLLQ               | AVX2           | AVX2           |                | f3           | 0b11       | rrr        | VV1 0xF3  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 REG2=XMM_B():r:q:u64
 | VPSLLQ               | AVX2           | AVX2           |                | 73           | 0b11       | 0b110      | VV1 0x73   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b110] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u64 REG1=YMM_B():r:qq:u64 IMM0:r:b # NDD
 | VPSLLVD              | AVX2           | AVX2           |                | 47           | mm         | rrr        | VV1 0x47  VL128 V0F38 V66  W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=XMM_R():w:dq REG1=XMM_N():r:dq MEM0:r:dq
 | VPSLLVD              | AVX2           | AVX2           |                | 47           | 0b11       | rrr        | VV1 0x47  VL128 V0F38 V66 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=XMM_R():w:dq REG1=XMM_N():r:dq REG2=XMM_B():r:dq
 | VPSLLVD              | AVX2           | AVX2           |                | 47           | mm         | rrr        | VV1 0x47  VL256 V0F38 V66  W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=YMM_R():w:qq REG1=YMM_N():r:qq MEM0:r:qq
 | VPSLLVD              | AVX2           | AVX2           |                | 47           | 0b11       | rrr        | VV1 0x47  VL256 V0F38 V66 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=YMM_R():w:qq REG1=YMM_N():r:qq REG2=YMM_B():r:qq
 | VPSLLVQ              | AVX2           | AVX2           |                | 47           | mm         | rrr        | VV1 0x47  VL128 V0F38 V66  W1 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=XMM_R():w:dq REG1=XMM_N():r:dq MEM0:r:dq
 | VPSLLVQ              | AVX2           | AVX2           |                | 47           | 0b11       | rrr        | VV1 0x47  VL128 V0F38 V66 W1 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=XMM_R():w:dq REG1=XMM_N():r:dq REG2=XMM_B():r:dq
 | VPSLLVQ              | AVX2           | AVX2           |                | 47           | mm         | rrr        | VV1 0x47  VL256 V0F38 V66  W1 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=YMM_R():w:qq REG1=YMM_N():r:qq MEM0:r:qq
 | VPSLLVQ              | AVX2           | AVX2           |                | 47           | 0b11       | rrr        | VV1 0x47  VL256 V0F38 V66 W1 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=YMM_R():w:qq REG1=YMM_N():r:qq REG2=YMM_B():r:qq
 | VPSLLW               | AVX2           | AVX2           |                | f1           | mm         | rrr        | VV1 0xF1  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:dq:u64
 | VPSLLW               | AVX2           | AVX2           |                | f1           | 0b11       | rrr        | VV1 0xF1  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=XMM_B():r:q:u64
 | VPSLLW               | AVX2           | AVX2           |                | 71           | 0b11       | 0b110      | VV1 0x71   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b110] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u16 REG1=YMM_B():r:qq:u16 IMM0:r:b # NDD
 | VPSRAD               | AVX2           | AVX2           |                | e2           | mm         | rrr        | VV1 0xE2  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:dq:u64
 | VPSRAD               | AVX2           | AVX2           |                | e2           | 0b11       | rrr        | VV1 0xE2  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=XMM_B():r:q:u64
 | VPSRAD               | AVX2           | AVX2           |                | 72           | 0b11       | 0b100      | VV1 0x72   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b100] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:i32 REG1=YMM_B():r:qq:i32 IMM0:r:b # NDD
 | VPSRAVD              | AVX2           | AVX2           |                | 46           | mm         | rrr        | VV1 0x46  VL128 V0F38 V66  W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=XMM_R():w:dq REG1=XMM_N():r:dq MEM0:r:dq
 | VPSRAVD              | AVX2           | AVX2           |                | 46           | 0b11       | rrr        | VV1 0x46  VL128 V0F38 V66 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=XMM_R():w:dq REG1=XMM_N():r:dq REG2=XMM_B():r:dq
 | VPSRAVD              | AVX2           | AVX2           |                | 46           | mm         | rrr        | VV1 0x46  VL256 V0F38 V66  W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=YMM_R():w:qq REG1=YMM_N():r:qq MEM0:r:qq
 | VPSRAVD              | AVX2           | AVX2           |                | 46           | 0b11       | rrr        | VV1 0x46  VL256 V0F38 V66 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=YMM_R():w:qq REG1=YMM_N():r:qq REG2=YMM_B():r:qq
 | VPSRAW               | AVX2           | AVX2           |                | e1           | mm         | rrr        | VV1 0xE1  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:dq:u64
 | VPSRAW               | AVX2           | AVX2           |                | e1           | 0b11       | rrr        | VV1 0xE1  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=XMM_B():r:q:u64
 | VPSRAW               | AVX2           | AVX2           |                | 71           | 0b11       | 0b100      | VV1 0x71   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b100] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:i16 REG1=YMM_B():r:qq:i16 IMM0:r:b # NDD
 | VPSRLD               | AVX2           | AVX2           |                | d2           | mm         | rrr        | VV1 0xD2  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 MEM0:r:dq:u64
 | VPSRLD               | AVX2           | AVX2           |                | d2           | 0b11       | rrr        | VV1 0xD2  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 REG2=XMM_B():r:q:u64
 | VPSRLD               | AVX2           | AVX2           |                | 72           | 0b11       | 0b010      | VV1 0x72   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b010] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u32 REG1=YMM_B():r:qq:u32 IMM0:r:b # NDD
 | VPSRLDQ              | AVX2           | AVX2           |                | 73           | 0b11       | 0b011      | VV1 0x73  VL256 V66 V0F   MOD[0b11] MOD=3 REG[0b011] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u128 REG1=YMM_B():r:qq:u128 IMM0:r:b   # NDD
 | VPSRLQ               | AVX2           | AVX2           |                | d3           | mm         | rrr        | VV1 0xD3  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 MEM0:r:dq:u64
 | VPSRLQ               | AVX2           | AVX2           |                | d3           | 0b11       | rrr        | VV1 0xD3  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 REG2=XMM_B():r:q:u64
 | VPSRLQ               | AVX2           | AVX2           |                | 73           | 0b11       | 0b010      | VV1 0x73   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b010] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u64 REG1=YMM_B():r:qq:u64 IMM0:r:b  # NDD
 | VPSRLVD              | AVX2           | AVX2           |                | 45           | mm         | rrr        | VV1 0x45  VL128 V0F38 V66  W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=XMM_R():w:dq REG1=XMM_N():r:dq MEM0:r:dq
 | VPSRLVD              | AVX2           | AVX2           |                | 45           | 0b11       | rrr        | VV1 0x45  VL128 V0F38 V66 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=XMM_R():w:dq REG1=XMM_N():r:dq REG2=XMM_B():r:dq
 | VPSRLVD              | AVX2           | AVX2           |                | 45           | mm         | rrr        | VV1 0x45  VL256 V0F38 V66  W0 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=YMM_R():w:qq REG1=YMM_N():r:qq MEM0:r:qq
 | VPSRLVD              | AVX2           | AVX2           |                | 45           | 0b11       | rrr        | VV1 0x45  VL256 V0F38 V66 W0 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=YMM_R():w:qq REG1=YMM_N():r:qq REG2=YMM_B():r:qq
 | VPSRLVQ              | AVX2           | AVX2           |                | 45           | mm         | rrr        | VV1 0x45  VL128 V0F38 V66  W1 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=XMM_R():w:dq REG1=XMM_N():r:dq MEM0:r:dq
 | VPSRLVQ              | AVX2           | AVX2           |                | 45           | 0b11       | rrr        | VV1 0x45  VL128 V0F38 V66 W1 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=XMM_R():w:dq REG1=XMM_N():r:dq REG2=XMM_B():r:dq
 | VPSRLVQ              | AVX2           | AVX2           |                | 45           | mm         | rrr        | VV1 0x45  VL256 V0F38 V66  W1 MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                | REG0=YMM_R():w:qq REG1=YMM_N():r:qq MEM0:r:qq
 | VPSRLVQ              | AVX2           | AVX2           |                | 45           | 0b11       | rrr        | VV1 0x45  VL256 V0F38 V66 W1 MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                        | REG0=YMM_R():w:qq REG1=YMM_N():r:qq REG2=YMM_B():r:qq
 | VPSRLW               | AVX2           | AVX2           |                | d1           | mm         | rrr        | VV1 0xD1  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:dq:u64
 | VPSRLW               | AVX2           | AVX2           |                | d1           | 0b11       | rrr        | VV1 0xD1  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=XMM_B():r:q:u64
 | VPSRLW               | AVX2           | AVX2           |                | 71           | 0b11       | 0b010      | VV1 0x71   VL256  V66 V0F MOD[0b11] MOD=3 REG[0b010] RM[nnn] UIMM8()                                 | REG0=YMM_N():w:qq:u16 REG1=YMM_B():r:qq:u16 IMM0:r:b # NDD
 | VPSUBB               | AVX2           | AVX2           |                | f8           | mm         | rrr        | VV1 0xF8  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPSUBB               | AVX2           | AVX2           |                | f8           | 0b11       | rrr        | VV1 0xF8  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPSUBD               | AVX2           | AVX2           |                | fa           | mm         | rrr        | VV1 0xFA  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 MEM0:r:qq:i32
 | VPSUBD               | AVX2           | AVX2           |                | fa           | 0b11       | rrr        | VV1 0xFA  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i32 REG1=YMM_N():r:qq:i32 REG2=YMM_B():r:qq:i32
 | VPSUBQ               | AVX2           | AVX2           |                | fb           | mm         | rrr        | VV1 0xFB  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i64 MEM0:r:qq:i64
 | VPSUBQ               | AVX2           | AVX2           |                | fb           | 0b11       | rrr        | VV1 0xFB  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i64 REG1=YMM_N():r:qq:i64 REG2=YMM_B():r:qq:i64
 | VPSUBSB              | AVX2           | AVX2           |                | e8           | mm         | rrr        | VV1 0xE8  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 MEM0:r:qq:i8
 | VPSUBSB              | AVX2           | AVX2           |                | e8           | 0b11       | rrr        | VV1 0xE8  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i8 REG1=YMM_N():r:qq:i8 REG2=YMM_B():r:qq:i8
 | VPSUBSW              | AVX2           | AVX2           |                | e9           | mm         | rrr        | VV1 0xE9  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPSUBSW              | AVX2           | AVX2           |                | e9           | 0b11       | rrr        | VV1 0xE9  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPSUBUSB             | AVX2           | AVX2           |                | d8           | mm         | rrr        | VV1 0xD8  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPSUBUSB             | AVX2           | AVX2           |                | d8           | 0b11       | rrr        | VV1 0xD8  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPSUBUSW             | AVX2           | AVX2           |                | d9           | mm         | rrr        | VV1 0xD9  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPSUBUSW             | AVX2           | AVX2           |                | d9           | 0b11       | rrr        | VV1 0xD9  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPSUBW               | AVX2           | AVX2           |                | f9           | mm         | rrr        | VV1 0xF9  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 MEM0:r:qq:i16
 | VPSUBW               | AVX2           | AVX2           |                | f9           | 0b11       | rrr        | VV1 0xF9  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:i16 REG1=YMM_N():r:qq:i16 REG2=YMM_B():r:qq:i16
 | VPUNPCKHBW           | AVX2           | AVX2           |                | 68           | mm         | rrr        | VV1 0x68  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPUNPCKHBW           | AVX2           | AVX2           |                | 68           | 0b11       | rrr        | VV1 0x68  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPUNPCKHDQ           | AVX2           | AVX2           |                | 6a           | mm         | rrr        | VV1 0x6A  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 MEM0:r:qq:u32
 | VPUNPCKHDQ           | AVX2           | AVX2           |                | 6a           | 0b11       | rrr        | VV1 0x6A  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 REG2=YMM_B():r:qq:u32
 | VPUNPCKHQDQ          | AVX2           | AVX2           |                | 6d           | mm         | rrr        | VV1 0x6D  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 MEM0:r:qq:u64
 | VPUNPCKHQDQ          | AVX2           | AVX2           |                | 6d           | 0b11       | rrr        | VV1 0x6D  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 REG2=YMM_B():r:qq:u64
 | VPUNPCKHWD           | AVX2           | AVX2           |                | 69           | mm         | rrr        | VV1 0x69  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPUNPCKHWD           | AVX2           | AVX2           |                | 69           | 0b11       | rrr        | VV1 0x69  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPUNPCKLBW           | AVX2           | AVX2           |                | 60           | mm         | rrr        | VV1 0x60  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 MEM0:r:qq:u8
 | VPUNPCKLBW           | AVX2           | AVX2           |                | 60           | 0b11       | rrr        | VV1 0x60  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u8 REG1=YMM_N():r:qq:u8 REG2=YMM_B():r:qq:u8
 | VPUNPCKLDQ           | AVX2           | AVX2           |                | 62           | mm         | rrr        | VV1 0x62  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 MEM0:r:qq:u32
 | VPUNPCKLDQ           | AVX2           | AVX2           |                | 62           | 0b11       | rrr        | VV1 0x62  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u32 REG1=YMM_N():r:qq:u32 REG2=YMM_B():r:qq:u32
 | VPUNPCKLQDQ          | AVX2           | AVX2           |                | 6c           | mm         | rrr        | VV1 0x6C  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 MEM0:r:qq:u64
 | VPUNPCKLQDQ          | AVX2           | AVX2           |                | 6c           | 0b11       | rrr        | VV1 0x6C  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u64 REG1=YMM_N():r:qq:u64 REG2=YMM_B():r:qq:u64
 | VPUNPCKLWD           | AVX2           | AVX2           |                | 61           | mm         | rrr        | VV1 0x61  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 MEM0:r:qq:u16
 | VPUNPCKLWD           | AVX2           | AVX2           |                | 61           | 0b11       | rrr        | VV1 0x61  VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                             | REG0=YMM_R():w:qq:u16 REG1=YMM_N():r:qq:u16 REG2=YMM_B():r:qq:u16
 | VPXOR                | LOGICAL        | AVX2           |                | ef           | mm         | rrr        | VV1 0xEF  VL256 V66 V0F  MOD[mm] MOD!=3 REG[rrr] RM[nnn] MODRM()                                     | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 MEM0:r:qq:u256
 | VPXOR                | LOGICAL        | AVX2           |                | ef           | 0b11       | rrr        | VV1 0xEF   VL256 V66 V0F MOD[0b11] MOD=3 REG[rrr] RM[nnn]                                            | REG0=YMM_R():w:qq:u256 REG1=YMM_N():r:qq:u256 REG2=YMM_B():r:qq:u256
