| Identifier | Syntax | Description                                                                                                                                                                                                                                              |
| Np         | NP     | Indicates the use of 66/F2/F3 prefixes (beyond those already part of the instructions opcode) are not allowed with the instruction                                                                                                                       |
| Nfx        | NFx    | Indicates the use of F2/F3 prefixes (beyond those already part of the instructions opcode) are not allowed with the instruction.                                                                                                                         |
| RexW       | REX.W  | Indicates the use of a REX prefix that affects operand size or instruction semantics ;REX prefixes that promote legacy instructions to 64-bit behavior are not listed explicitly in the opcode column.                                                   |
| Digit      | /digit | A digit between 0 and 7 indicates that the ModR/M byte of the instruction uses only the r/m (register or memory) operand. The reg field contains the digit that provides an extension to the instruction's opcode.                                       |
| ModRm      | /r     | Indicates that the ModR/M byte of the instruction contains a register operand and an r/m operand.                                                                                                                                                        |
| Cb         | cb     | A 1-byte value following the opcode; can be used to specify a code offset and possibly a new value for the code segment register.                                                                                                                        |
| Cw         | cw     | A 2-byte value following the opcode; can be used to specify a code offset and possibly a new value for the code segment register.                                                                                                                        |
| Cd         | cd     | A 4-byte value following the opcode; can be used to specify a code offset and possibly a new value for the code segment register.                                                                                                                        |
| Cp         | cp     | A 6-byte value following the opcode; can be used to specify a code offset and possibly a new value for the code segment register.                                                                                                                        |
| Co         | co     | A 8-byte value following the opcode; can be used to specify a code offset and possibly a new value for the code segment register.                                                                                                                        |
| Ct         | ct     | A 10-byte value following the opcode; can be used to specify a code offset and possibly a new value for the code segment register.                                                                                                                       |
| Ib         | ib     | A 1-byte immediate operand to the instruction that follows the opcode or ModR/M bytes or scale-indexing bytes. The opcode determines if the operand is a signed value. All words and doublewords and quadwords are given with the low-order byte first.  |
| Iw         | iw     | A 2-byte immediate operand to the instruction that follows the opcode or ModR/M bytes or scale-indexing bytes. The opcode determines if the operand is a signed value. All words and doublewords and quadwords are given with the low-order byte first.  |
| Id         | id     | A 4-byte immediate operand to the instruction that follows the opcode or ModR/M bytes or scale-indexing bytes. The opcode determines if the operand is a signed value. All words and doublewords and quadwords are given with the low-order byte first.  |
| Io         | io     | A 8-byte immediate operand to the instruction that follows the opcode or ModR/M bytes or scale-indexing bytes. The opcode determines if the operand is a signed value. All words and doublewords and quadwords are given with the low-order byte first.  |
| Rb         | +rb    | The instruction lists the corresponding hexadecimal value of the opcode byte with low 3 bits as 000b. Indicates the lower 3 bits of the opcode byte is used to encode the register operand without a modR/M byte.                                        |
| Rw         | +rw    | The instruction lists the corresponding hexadecimal value of the opcode byte with low 3 bits as 000b.Indicates the lower 3 bits of the opcode byte is used to encode the register operand without a modR/M byte.                                         |
| Rd         | +rd    | The instruction lists the corresponding hexadecimal value of the opcode byte with low 3 bits as 000b.Indicates the lower 3 bits of the opcode byte is used to encode the register operand without a modR/M byte.                                         |
| Ro         | +ro    | The instruction lists the corresponding hexadecimal value of the opcode byte with low 3 bits as 000b.Indicates the lower 3 bits of the opcode byte is used to encode the register operand without a modR/M byte.                                         |
| NE         | N.E    | Not encodable                                                                                                                                                                                                                                            |
| Sti        | +i     | A number used in floating-point instructions when one of the operands is ST(i) from the FPU register stack. The number i (which can range from 0 to 7) is added to the hexadecimal byte given at the left of the plus sign to form a single opcode byte. |
