//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
// Generated   : 2021-02-26 14:33:09 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class part_parsefunctions
    {
        public static ReadOnlySpan<byte> Include_ᐤIParseFunctionᐤ  =>  new byte[76]{0x57,0x56,0x48,0x83,0xec,0x28,0x48,0x8b,0xf2,0x48,0x8b,0x79,0x08,0x48,0x8b,0xce,0x49,0xbb,0xb8,0x1b,0x02,0xda,0xfd,0x7f,0x00,0x00,0x39,0x09,0xff,0x15,0xa6,0xd8,0x72,0xfb,0x48,0x8b,0xc8,0x48,0x8b,0x00,0x48,0x8b,0x40,0x50,0xff,0x50,0x08,0x8b,0xd0,0x8b,0x0f,0x48,0x8b,0xcf,0x4c,0x8b,0xc6,0x41,0xb9,0x01,0x00,0x00,0x00,0xe8,0xcc,0xfe,0xff,0xff,0x90,0x48,0x83,0xc4,0x28,0x5e,0x5f,0xc3};

        public static ReadOnlySpan<byte> Lookup_ᐤTypeㆍIParseFunctionᕀoutᐤ  =>  new byte[102]{0x57,0x56,0x48,0x83,0xec,0x28,0x49,0x8b,0xf0,0x48,0x8b,0x79,0x08,0x48,0x8b,0xca,0x48,0x8b,0x02,0x48,0x8b,0x40,0x50,0xff,0x50,0x08,0x8b,0xd0,0x48,0x8b,0xcf,0x4c,0x8b,0xc6,0x48,0xb8,0x30,0x42,0x8f,0xde,0xfd,0x7f,0x00,0x00,0x39,0x09,0x48,0x83,0xc4,0x28,0x5e,0x5f,0x48,0xff,0xe0,0x00,0x19,0x06,0x03,0x00,0x06,0x42,0x02,0x60,0x01,0x70,0x00,0x00,0x40,0x00,0x00,0x00,0x58,0xce,0x8e,0xde,0xfd,0x7f,0x00,0x00,0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x49,0x08,0x39,0x09,0xe8,0x70,0xfe,0xff,0xff,0x90,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> Lookup_ᐤClrTokenㆍIParseFunctionᕀoutᐤ  =>  new byte[22]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x49,0x08,0x39,0x09,0xe8,0x70,0xfe,0xff,0xff,0x90,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> CanParse_ᐤTypeᐤ  =>  new byte[48]{0x56,0x48,0x83,0xec,0x20,0x48,0x8b,0x71,0x08,0x48,0x8b,0xca,0x48,0x8b,0x02,0x48,0x8b,0x40,0x50,0xff,0x50,0x08,0x8b,0xd0,0x8b,0x0e,0x48,0x8b,0xce,0xe8,0xee,0xfd,0xff,0xff,0x85,0xc0,0x0f,0x9d,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x20,0x5e,0xc3};

        public static ReadOnlySpan<byte> CanParse_ᐤClrTokenᐤ  =>  new byte[29]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x49,0x08,0x8b,0x01,0xe8,0xb0,0xfd,0xff,0xff,0x85,0xc0,0x0f,0x9d,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x28,0xc3};

        public static ReadOnlySpan<byte> Require_ᐤTypeᐤ  =>  new byte[50]{0x56,0x48,0x83,0xec,0x20,0x48,0x8b,0x71,0x08,0x48,0x8b,0xca,0x48,0x8b,0x02,0x48,0x8b,0x40,0x50,0xff,0x50,0x08,0x8b,0xd0,0x48,0x8b,0xce,0x48,0xb8,0x88,0x41,0x8f,0xde,0xfd,0x7f,0x00,0x00,0x39,0x09,0x48,0x83,0xc4,0x20,0x5e,0x48,0xff,0xe0,0x00,0x19,0x05};

        public static ReadOnlySpan<byte> Require_ᐤClrTokenᐤ  =>  new byte[22]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x49,0x08,0x39,0x09,0xe8,0xb8,0xfc,0xff,0xff,0x90,0x48,0x83,0xc4,0x28,0xc3};

    }
}
