//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
// Generated   : 2021-02-26 14:33:07 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class asmlang_regs_eflags
    {
        public static ReadOnlySpan<byte> get_CF_ᐤᐤ  =>  new byte[23]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa8,0x01,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_CF_ᐤbitᐤ  =>  new byte[26]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x05,0x83,0xe0,0xfe,0xeb,0x03,0x83,0xc8,0x01,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_PF_ᐤᐤ  =>  new byte[23]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa8,0x04,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_PF_ᐤbitᐤ  =>  new byte[26]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x05,0x83,0xe0,0xfb,0xeb,0x03,0x83,0xc8,0x04,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_AF_ᐤᐤ  =>  new byte[23]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa8,0x10,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_AF_ᐤbitᐤ  =>  new byte[26]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x05,0x83,0xe0,0xef,0xeb,0x03,0x83,0xc8,0x10,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_ZF_ᐤᐤ  =>  new byte[23]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa8,0x40,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_ZF_ᐤbitᐤ  =>  new byte[26]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x05,0x83,0xe0,0xbf,0xeb,0x03,0x83,0xc8,0x40,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_SF_ᐤᐤ  =>  new byte[23]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa8,0x80,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_SF_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0x7f,0xff,0xff,0xff,0xeb,0x05,0x0d,0x80,0x00,0x00,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_TF_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x01,0x00,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_TF_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xfe,0xff,0xff,0xeb,0x05,0x0d,0x00,0x01,0x00,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_IF_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x02,0x00,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_IF_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xfd,0xff,0xff,0xeb,0x05,0x0d,0x00,0x02,0x00,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_DF_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x04,0x00,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_DF_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xfb,0xff,0xff,0xeb,0x05,0x0d,0x00,0x04,0x00,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_OF_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x08,0x00,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_OF_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xf7,0xff,0xff,0xeb,0x05,0x0d,0x00,0x08,0x00,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_RF_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x00,0x01,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_RF_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xff,0xfe,0xff,0xeb,0x05,0x0d,0x00,0x00,0x01,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_VM_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x00,0x02,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_VM_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xff,0xfd,0xff,0xeb,0x05,0x0d,0x00,0x00,0x02,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_AC_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x00,0x04,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_AC_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xff,0xfb,0xff,0xeb,0x05,0x0d,0x00,0x00,0x04,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_VIF_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x00,0x08,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_VIF_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xff,0xf7,0xff,0xeb,0x05,0x0d,0x00,0x00,0x08,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_VIP_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x00,0x10,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_VIP_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xff,0xef,0xff,0xeb,0x05,0x0d,0x00,0x00,0x10,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

        public static ReadOnlySpan<byte> get_ID_ᐤᐤ  =>  new byte[26]{0x50,0x0f,0x1f,0x40,0x00,0x8b,0x01,0xa9,0x00,0x00,0x20,0x00,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0x0f,0xb6,0xc0,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> set_ID_ᐤbitᐤ  =>  new byte[30]{0x48,0x83,0xec,0x18,0x90,0x8b,0x01,0x84,0xd2,0x75,0x07,0x25,0xff,0xff,0xdf,0xff,0xeb,0x05,0x0d,0x00,0x00,0x20,0x00,0x89,0x01,0x48,0x83,0xc4,0x18,0xc3};

    }
}
