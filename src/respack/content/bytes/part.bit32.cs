//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
// Generated   : 2021-02-25 19:10:09 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class part_bit32
    {
        public static ReadOnlySpan<byte> ToChar_ᐤᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0x01,0x83,0xc0,0x30,0x0f,0xb7,0xc0,0xc3};

        public static ReadOnlySpan<byte> Parse_ᐤcharᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc1,0x83,0xf8,0x31,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> From_ᐤboolᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x89,0x4c,0x24,0x08,0x0f,0xb6,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ8iㆍ8uᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x0f,0xbe,0xc1,0x0f,0xb6,0xd2,0x0f,0xa3,0xd0,0x0f,0x92,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ8uㆍ32iᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x8b,0xca,0xd3,0xe8,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ16iㆍ32iᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x0f,0xbf,0xc1,0x0f,0xa3,0xd0,0x0f,0x92,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ16uㆍ32iᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc1,0x8b,0xca,0xd3,0xe8,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ32iㆍ32iᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xa3,0xd1,0x0f,0x92,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ64iㆍ32iᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x0f,0xa3,0xd1,0x0f,0x92,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ32uㆍ32iᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x8b,0xca,0xd3,0xe8,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> test_ᐤ64uㆍ32iᐤ  =>  new byte[17]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc1,0x8b,0xca,0x48,0xd3,0xe8,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ8iㆍ8uㆍBit32ᐤ  =>  new byte[46]{0x0f,0x1f,0x44,0x00,0x00,0x49,0x0f,0xbe,0xc0,0xf7,0xd0,0xff,0xc0,0x4c,0x0f,0xbe,0xc1,0x41,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0xd3,0xe2,0x23,0xc2,0x48,0x0f,0xbe,0xc0,0x41,0x33,0xc0,0x48,0x0f,0xbe,0xc8,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ8uㆍ8uㆍBit32ᐤ  =>  new byte[44]{0x0f,0x1f,0x44,0x00,0x00,0x41,0x0f,0xb6,0xc0,0xf7,0xd0,0xff,0xc0,0x44,0x0f,0xb6,0xc1,0x41,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0xd3,0xe2,0x23,0xc2,0x0f,0xb6,0xc0,0x41,0x33,0xc0,0x0f,0xb6,0xc8,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ16iㆍ8uㆍBit32ᐤ  =>  new byte[46]{0x0f,0x1f,0x44,0x00,0x00,0x49,0x0f,0xbf,0xc0,0xf7,0xd0,0xff,0xc0,0x4c,0x0f,0xbf,0xc1,0x41,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0xd3,0xe2,0x23,0xc2,0x48,0x0f,0xbf,0xc0,0x41,0x33,0xc0,0x48,0x0f,0xbf,0xc8,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ16uㆍ8uㆍBit32ᐤ  =>  new byte[44]{0x0f,0x1f,0x44,0x00,0x00,0x41,0x0f,0xb7,0xc0,0xf7,0xd0,0xff,0xc0,0x44,0x0f,0xb7,0xc1,0x41,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0xd3,0xe2,0x23,0xc2,0x0f,0xb7,0xc0,0x41,0x33,0xc0,0x0f,0xb7,0xc8,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ32iㆍ8uㆍBit32ᐤ  =>  new byte[32]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x41,0xf7,0xd0,0x41,0xff,0xc0,0x44,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0xd3,0xe2,0x41,0x23,0xd0,0x33,0xc2,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ32uㆍ8uㆍBit32ᐤ  =>  new byte[32]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x41,0xf7,0xd0,0x41,0xff,0xc0,0x44,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0xd3,0xe2,0x41,0x23,0xd0,0x33,0xc2,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ64iㆍ8uㆍBit32ᐤ  =>  new byte[41]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc1,0x41,0x8b,0xc8,0x4c,0x8b,0xc1,0x49,0xf7,0xd0,0x49,0xff,0xc0,0x4c,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0x48,0xd3,0xe2,0x49,0x23,0xd0,0x48,0x33,0xc2,0xc3};

        public static ReadOnlySpan<byte> set_ᐤ64uㆍ8uㆍBit32ᐤ  =>  new byte[41]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc1,0x41,0x8b,0xc8,0x4c,0x8b,0xc1,0x49,0xf7,0xd0,0x49,0xff,0xc0,0x4c,0x33,0xc0,0x0f,0xb6,0xca,0xba,0x01,0x00,0x00,0x00,0x48,0xd3,0xe2,0x49,0x23,0xd0,0x48,0x33,0xc2,0xc3};

        public static ReadOnlySpan<byte> identity_ᐤBit32ᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> and_ᐤBit32ㆍBit32ᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x23,0xc2,0xc3};

        public static ReadOnlySpan<byte> or_ᐤBit32ㆍBit32ᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x0b,0xc2,0xc3};

        public static ReadOnlySpan<byte> xor_ᐤBit32ㆍBit32ᐤ  =>  new byte[10]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x33,0xc2,0xc3};

        public static ReadOnlySpan<byte> not_ᐤBit32ᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xf7,0xd0,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> nand_ᐤBit32ㆍBit32ᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x23,0xd1,0x8b,0xc2,0xf7,0xd0,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> nor_ᐤBit32ㆍBit32ᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x0b,0xd1,0x8b,0xc2,0xf7,0xd0,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> xnor_ᐤBit32ㆍBit32ᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x33,0xd1,0x8b,0xc2,0xf7,0xd0,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> impl_ᐤBit32ㆍBit32ᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0xf7,0xd0,0x83,0xe0,0x01,0x0b,0xc1,0xc3};

        public static ReadOnlySpan<byte> nonimpl_ᐤBit32ㆍBit32ᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xf7,0xd0,0x83,0xe0,0x01,0x23,0xc2,0xc3};

        public static ReadOnlySpan<byte> cimpl_ᐤBit32ㆍBit32ᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xf7,0xd0,0x83,0xe0,0x01,0x0b,0xc2,0xc3};

        public static ReadOnlySpan<byte> cnonimpl_ᐤBit32ㆍBit32ᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0xf7,0xd0,0x83,0xe0,0x01,0x23,0xc1,0xc3};

        public static ReadOnlySpan<byte> select_ᐤBit32ㆍBit32ㆍBit32ᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x23,0xd1,0x8b,0xc1,0xf7,0xd0,0x41,0x23,0xc0,0x0b,0xc2,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> op_True_ᐤBit32ᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x85,0xc9,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_False_ᐤBit32ᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x85,0xc9,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_Implicit_ᐤboolᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> op_Implicit_ᐤBit32ᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x85,0xc9,0x0f,0x95,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> op_Explicit_ᐤBit32ᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> op_Explicit_ᐤ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> op_Explicit_ᐤ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> op_Implicit_ᐤ32iᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> op_Explicit_ᐤ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> op_Implicit_ᐤBitStateᕀ8uᐤ  =>  new byte[9]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0xc3};

        public static ReadOnlySpan<byte> op_Explicit_ᐤ64uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> Equals_ᐤBit32ᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x39,0x11,0x0f,0x94,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> Wrap_ᐤ32uᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> SafeWrap_ᐤ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> SafeWrap_ᐤ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> SafeWrap_ᐤ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> SafeWrap_ᐤ32iᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> SafeWrap_ᐤ64uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ8uᐳᐤBit32ᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x0f,0xb6,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ8iᐳᐤBit32ᐤ  =>  new byte[17]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x48,0x0f,0xbe,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ16uᐳᐤBit32ᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x0f,0xb7,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ16iᐳᐤBit32ᐤ  =>  new byte[17]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x48,0x0f,0xbf,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ32uᐳᐤBit32ᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ32iᐳᐤBit32ᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ64uᐳᐤBit32ᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x48,0x8b,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ64iᐳᐤBit32ᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x48,0x8b,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ32fᐳᐤBit32ᐤ  =>  new byte[17]{0xc5,0xf8,0x77,0x66,0x90,0x48,0x89,0x4c,0x24,0x08,0xc5,0xfa,0x10,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> generic_gᐸ64fᐳᐤBit32ᐤ  =>  new byte[17]{0xc5,0xf8,0x77,0x66,0x90,0x48,0x89,0x4c,0x24,0x08,0xc5,0xfb,0x10,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ8uᐳᐤ8uᐤ  =>  new byte[17]{0x0f,0x1f,0x44,0x00,0x00,0x89,0x4c,0x24,0x08,0x8b,0x44,0x24,0x08,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ8iᐳᐤ8iᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0x89,0x4c,0x24,0x08,0x8b,0x44,0x24,0x08,0x48,0x0f,0xbe,0xc0,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ16uᐳᐤ16uᐤ  =>  new byte[17]{0x0f,0x1f,0x44,0x00,0x00,0x89,0x4c,0x24,0x08,0x8b,0x44,0x24,0x08,0x0f,0xb7,0xc0,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ16iᐳᐤ16iᐤ  =>  new byte[18]{0x0f,0x1f,0x44,0x00,0x00,0x89,0x4c,0x24,0x08,0x8b,0x44,0x24,0x08,0x48,0x0f,0xbf,0xc0,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ32uᐳᐤ32uᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ32iᐳᐤ32iᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ64uᐳᐤ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x8b,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ64iᐳᐤ64iᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x4c,0x24,0x08,0x8b,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ32fᐳᐤ32fᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0xc5,0xfa,0x11,0x44,0x24,0x08,0x8b,0x44,0x24,0x08,0xc3};

        public static ReadOnlySpan<byte> specific_gᐸ64fᐳᐤ64fᐤ  =>  new byte[16]{0x0f,0x1f,0x44,0x00,0x00,0xc5,0xfb,0x11,0x44,0x24,0x08,0x8b,0x44,0x24,0x08,0xc3};

    }
}
