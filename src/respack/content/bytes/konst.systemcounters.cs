//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
// Generated   : 2021-02-25 19:10:09 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class konst_systemcounters
    {
        public static ReadOnlySpan<byte> frequency_ᐤᐤ  =>  new byte[41]{0x55,0x48,0x83,0xec,0x30,0x48,0x8d,0x6c,0x24,0x30,0x33,0xc0,0x48,0x89,0x45,0xf8,0x33,0xc9,0x48,0x89,0x4d,0xf8,0x48,0x8d,0x4d,0xf8,0xe8,0x09,0xce,0x5c,0xfd,0x48,0x8b,0x45,0xf8,0x48,0x8d,0x65,0x00,0x5d,0xc3};

        public static ReadOnlySpan<byte> counter_ᐤboolᐤ  =>  new byte[100]{0x56,0x48,0x83,0xec,0x40,0xc5,0xf8,0x77,0x33,0xc0,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x30,0x48,0x89,0x44,0x24,0x38,0x48,0x8b,0xf1,0x33,0xc9,0x48,0x8d,0x44,0x24,0x28,0xc5,0xf8,0x57,0xc0,0xc5,0xfa,0x7f,0x00,0x48,0x89,0x48,0x10,0x84,0xd2,0x74,0x0f,0xc6,0x44,0x24,0x38,0x01,0x48,0x8d,0x4c,0x24,0x30,0xe8,0x96,0xcd,0x5c,0xfd,0x48,0x8b,0x44,0x24,0x28,0x48,0x89,0x06,0x48,0x8b,0x44,0x24,0x30,0x48,0x89,0x46,0x08,0x0f,0xb6,0x44,0x24,0x38,0x88,0x46,0x10,0x48,0x8b,0xc6,0x48,0x83,0xc4,0x40,0x5e,0xc3};

        public static ReadOnlySpan<byte> delta_ᐤ64iᕀinᐤ  =>  new byte[44]{0x56,0x48,0x83,0xec,0x30,0x48,0x8b,0xf1,0x33,0xc9,0x48,0x89,0x4c,0x24,0x28,0x48,0x89,0x4c,0x24,0x28,0x48,0x8d,0x4c,0x24,0x28,0xe8,0x3a,0xcd,0x5c,0xfd,0x48,0x8b,0x44,0x24,0x28,0x48,0x2b,0x06,0x48,0x83,0xc4,0x30,0x5e,0xc3};

        public static ReadOnlySpan<byte> ms_ᐤ64iᕀinᐤ  =>  new byte[90]{0x48,0x83,0xec,0x48,0xc5,0xf8,0x77,0xc5,0xf8,0x29,0x74,0x24,0x30,0xc5,0xc8,0x57,0xf6,0xc4,0xe1,0xcb,0x2a,0x31,0x33,0xc9,0x48,0x89,0x4c,0x24,0x28,0x48,0x89,0x4c,0x24,0x28,0x48,0x8d,0x4c,0x24,0x28,0xe8,0xfc,0xcc,0x5c,0xfd,0x48,0x8b,0x44,0x24,0x28,0xc5,0xf8,0x57,0xc0,0xc4,0xe1,0xfb,0x2a,0xc0,0x48,0x85,0xc0,0x7d,0x08,0xc5,0xfb,0x58,0x05,0x21,0x00,0x00,0x00,0xc5,0xcb,0x5e,0xf0,0xc5,0xf8,0x28,0xc6,0xc5,0xf8,0x28,0x74,0x24,0x30,0x48,0x83,0xc4,0x48,0xc3};

        public static ReadOnlySpan<byte> count_ᐤᐤ  =>  new byte[41]{0x55,0x48,0x83,0xec,0x30,0x48,0x8d,0x6c,0x24,0x30,0x33,0xc0,0x48,0x89,0x45,0xf8,0x33,0xc9,0x48,0x89,0x4d,0xf8,0x48,0x8d,0x4d,0xf8,0xe8,0x69,0xcc,0x5c,0xfd,0x48,0x8b,0x45,0xf8,0x48,0x8d,0x65,0x00,0x5d,0xc3};

        public static ReadOnlySpan<byte> count_ᐤ64iᕀrefᐤ  =>  new byte[32]{0x55,0x56,0x48,0x83,0xec,0x28,0x48,0x8d,0x6c,0x24,0x30,0x48,0x8b,0xf1,0x48,0x8b,0xce,0xe8,0x32,0xcc,0x5c,0xfd,0x48,0x8b,0xc6,0x48,0x8d,0x65,0xf8,0x5e,0x5d,0xc3};

        public static ReadOnlySpan<byte> cycles_ᐤᐤ  =>  new byte[63]{0x55,0x48,0x83,0xec,0x30,0x48,0x8d,0x6c,0x24,0x30,0x33,0xc0,0x48,0x89,0x45,0xf8,0x33,0xd2,0x48,0x89,0x55,0xf8,0x48,0x8d,0x55,0xf8,0x48,0xb9,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe8,0xff,0xcb,0x5c,0xfd,0x85,0xc0,0x75,0x08,0x33,0xc0,0x48,0x8d,0x65,0x00,0x5d,0xc3,0x48,0x8b,0x45,0xf8,0x48,0x8d,0x65,0x00,0x5d,0xc3};

        public static ReadOnlySpan<byte> cycles_ᐤ64uᕀrefᐤ  =>  new byte[51]{0x55,0x56,0x48,0x83,0xec,0x28,0x48,0x8d,0x6c,0x24,0x30,0x48,0x8b,0xf1,0x48,0x8b,0xd6,0x48,0xb9,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe8,0xa8,0xcb,0x5c,0xfd,0x85,0xc0,0x75,0x05,0x33,0xc0,0x48,0x89,0x06,0x48,0x8b,0xc6,0x48,0x8d,0x65,0xf8,0x5e,0x5d,0xc3};

    }
}
