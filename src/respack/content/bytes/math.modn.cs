//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
// Generated   : 2021-02-25 19:10:09 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class math_modn
    {
        public static ReadOnlySpan<byte> create_ᐤ32uᐤ  =>  new byte[37]{0x0f,0x1f,0x44,0x00,0x00,0x44,0x8b,0xc2,0x48,0xb8,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x33,0xd2,0x49,0xf7,0xf0,0x48,0xff,0xc0,0x4c,0x89,0x01,0x48,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> divisible_ᐤModNᕀinㆍ32uᐤ  =>  new byte[28]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x48,0x8b,0x51,0x08,0x48,0x0f,0xaf,0xc2,0x48,0xff,0xca,0x48,0x3b,0xc2,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> divrem_ᐤModNᕀinㆍ32uᐤ  =>  new byte[65]{0x50,0x33,0xc0,0x48,0x89,0x04,0x24,0x48,0x8b,0x41,0x08,0x4c,0x8b,0xc0,0x89,0x54,0x24,0x18,0x44,0x8b,0xca,0x49,0x8b,0xd0,0xc4,0xc2,0xeb,0xf6,0xd1,0x44,0x8b,0xc2,0x8b,0x54,0x24,0x18,0x48,0x0f,0xaf,0xd0,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0x44,0x89,0x04,0x24,0x89,0x44,0x24,0x04,0x48,0x8b,0x04,0x24,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> add_ᐤModNᕀinㆍ32uㆍ32uᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x41,0x03,0xd0,0x48,0x0f,0xaf,0x51,0x08,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0xc3};

        public static ReadOnlySpan<byte> mul_ᐤModNᕀinㆍ32uㆍ32uᐤ  =>  new byte[23]{0x0f,0x1f,0x44,0x00,0x00,0x41,0x0f,0xaf,0xd0,0x48,0x0f,0xaf,0x51,0x08,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0xc3};

        public static ReadOnlySpan<byte> mod_ᐤModNᕀinㆍ32uᐤ  =>  new byte[21]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xd2,0x48,0x0f,0xaf,0x51,0x08,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0xc3};

        public static ReadOnlySpan<byte> div_ᐤModNᕀinㆍ32uᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x08,0x8b,0xca,0x48,0x8b,0xd0,0xc4,0xe2,0xfb,0xf6,0xc1,0xc3};

        public static ReadOnlySpan<byte> mod_ᐤ32uᐤ  =>  new byte[21]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xd2,0x48,0x0f,0xaf,0x51,0x08,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0xc3};

        public static ReadOnlySpan<byte> div_ᐤ32uᐤ  =>  new byte[20]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x08,0x8b,0xca,0x48,0x8b,0xd0,0xc4,0xe2,0xfb,0xf6,0xc1,0xc3};

        public static ReadOnlySpan<byte> divisible_ᐤ32uᐤ  =>  new byte[28]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x48,0x8b,0x51,0x08,0x48,0x0f,0xaf,0xc2,0x48,0xff,0xca,0x48,0x3b,0xc2,0x0f,0x96,0xc0,0x0f,0xb6,0xc0,0xc3};

        public static ReadOnlySpan<byte> divrem_ᐤ32uㆍ32uᕀoutㆍ32uᕀoutᐤ  =>  new byte[48]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x41,0x08,0x89,0x54,0x24,0x10,0x44,0x8b,0xd2,0x48,0x8b,0xd0,0xc4,0xc2,0xeb,0xf6,0xd2,0x41,0x89,0x10,0x8b,0x54,0x24,0x10,0x48,0x0f,0xaf,0x51,0x08,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0x41,0x89,0x01,0xc3};

        public static ReadOnlySpan<byte> divrem_ᐤModNᕀinㆍ32uㆍConstPairᐸuintᐳᕀoutᐤ  =>  new byte[60]{0x50,0x0f,0x1f,0x40,0x00,0x48,0x8b,0x51,0x08,0x48,0x89,0x14,0x24,0x48,0x8b,0xc2,0x45,0x8b,0xd0,0x48,0x8b,0xd0,0xc4,0xc2,0xeb,0xf6,0xd2,0x8b,0xc2,0x41,0x8b,0xd0,0x48,0x0f,0xaf,0x14,0x24,0x48,0x8b,0x09,0xc4,0xe2,0xeb,0xf6,0xd1,0x41,0x89,0x01,0x41,0x89,0x51,0x04,0x49,0x8b,0xc1,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> add_ᐤ32uㆍ32uᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x41,0x03,0xd0,0x48,0x0f,0xaf,0x51,0x08,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0xc3};

        public static ReadOnlySpan<byte> mul_ᐤ32uㆍ32uᐤ  =>  new byte[23]{0x0f,0x1f,0x44,0x00,0x00,0x41,0x0f,0xaf,0xd0,0x48,0x0f,0xaf,0x51,0x08,0x48,0x8b,0x01,0xc4,0xe2,0xfb,0xf6,0xc0,0xc3};

        public static ReadOnlySpan<byte> get_N_ᐤᐤ  =>  new byte[8]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0x01,0xc3};

    }
}
