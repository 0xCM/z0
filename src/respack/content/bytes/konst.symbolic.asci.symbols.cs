//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
// Generated   : 2021-02-26 14:33:08 -06:00
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class konst_symbolic_asci_symbols
    {
        public static ReadOnlySpan<byte> charbytes_ᐤn0ᐤ  =>  new byte[29]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x40,0xd8,0x30,0x1c,0xd3,0x01,0x00,0x00,0x48,0x89,0x01,0xc7,0x41,0x08,0x00,0x01,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> string_ᐤ8iㆍ8iᐤ  =>  new byte[52]{0x89,0x4c,0x24,0x08,0x89,0x54,0x24,0x10,0x49,0xb8,0x80,0x65,0xe0,0x13,0xd3,0x01,0x00,0x00,0x49,0x8b,0x08,0x44,0x8b,0x44,0x24,0x08,0x49,0x0f,0xbe,0xd0,0x44,0x8b,0x44,0x24,0x10,0x4d,0x0f,0xbe,0xc0,0x48,0xb8,0x10,0x9c,0x1a,0xdd,0xfd,0x7f,0x00,0x00,0x48,0xff,0xe0};

        public static ReadOnlySpan<byte> codes_ᐤasci16ᕀinᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x11,0xc7,0x41,0x08,0x10,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> codes_ᐤ8iㆍ8iᐤ  =>  new byte[74]{0x48,0x83,0xec,0x28,0x90,0x48,0x0f,0xbe,0xc2,0x8b,0xd0,0x4d,0x0f,0xbe,0xc0,0x45,0x8b,0xc8,0x49,0x03,0xd1,0x48,0x81,0xfa,0x80,0x00,0x00,0x00,0x77,0x21,0x48,0x63,0xc0,0x48,0xba,0xc0,0xd7,0x30,0x1c,0xd3,0x01,0x00,0x00,0x48,0x03,0xc2,0x49,0x63,0xd0,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8b,0xc1,0x48,0x83,0xc4,0x28,0xc3,0xe8,0x14,0xa9,0x0a,0xfb,0xcc,0x00,0x00,0x00,0x19,0x04};

        public static ReadOnlySpan<byte> chars_ᐤ8iㆍ8iᐤ  =>  new byte[40]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x0f,0xbe,0xc2,0x48,0x63,0xc0,0x48,0xba,0x40,0xd8,0x30,0x1c,0xd3,0x01,0x00,0x00,0x48,0x8d,0x04,0x42,0x49,0x0f,0xbe,0xd0,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> symbols_ᐤ8iㆍ8iᐤ  =>  new byte[46]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x0f,0xbe,0xc2,0x48,0x63,0xc0,0x48,0xba,0x40,0xd8,0x30,0x1c,0xd3,0x01,0x00,0x00,0x48,0x8d,0x04,0x42,0x49,0x0f,0xbe,0xd0,0x48,0x63,0xd2,0x48,0xd1,0xe2,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> scalars_ᐤ8iㆍ8iᐤ  =>  new byte[59]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x0f,0xbe,0xc2,0x48,0x63,0xc0,0x48,0xba,0x40,0xd8,0x30,0x1c,0xd3,0x01,0x00,0x00,0x48,0x8d,0x04,0x42,0x49,0x0f,0xbe,0xd0,0x48,0x63,0xd2,0x48,0xd1,0xe2,0x4c,0x8b,0xc2,0x49,0xc1,0xe8,0x3f,0x49,0x03,0xd0,0x48,0xd1,0xfa,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_ByteResources_ᐤᐤ  =>  new byte[80]{0x56,0x48,0x83,0xec,0x20,0x48,0x8b,0xf2,0x48,0xb9,0xf8,0x7b,0xcc,0xdc,0xfd,0x7f,0x00,0x00,0xba,0x02,0x00,0x00,0x00,0xe8,0x44,0x20,0xbb,0x5a,0x48,0xba,0x40,0xd8,0x30,0x1c,0xd3,0x01,0x00,0x00,0x48,0x89,0x50,0x10,0x48,0xba,0x5c,0x35,0x5c,0x1c,0xd3,0x01,0x00,0x00,0x48,0x89,0x50,0x18,0x48,0x83,0xc0,0x10,0xba,0x02,0x00,0x00,0x00,0x48,0x89,0x06,0x89,0x56,0x08,0x48,0x8b,0xc6,0x48,0x83,0xc4,0x20,0x5e,0xc3};

        public static ReadOnlySpan<byte> get_TextResources_ᐤᐤ  =>  new byte[132]{0x56,0x48,0x83,0xec,0x20,0x48,0x8b,0xf2,0x48,0xb9,0xf8,0x7b,0xcc,0xdc,0xfd,0x7f,0x00,0x00,0xba,0x02,0x00,0x00,0x00,0xe8,0xd4,0x1f,0xbb,0x5a,0x48,0xba,0x80,0x65,0xe0,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x12,0x48,0x85,0xd2,0x75,0x04,0x33,0xc9,0xeb,0x0e,0x8b,0x0a,0x48,0x8b,0xca,0x39,0x09,0x48,0x83,0xc1,0x0c,0x8b,0x52,0x08,0x48,0x89,0x48,0x10,0x48,0xba,0x88,0x65,0xe0,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x12,0x48,0x85,0xd2,0x75,0x04,0x33,0xc9,0xeb,0x0e,0x8b,0x0a,0x48,0x8b,0xca,0x39,0x09,0x48,0x83,0xc1,0x0c,0x8b,0x52,0x08,0x48,0x89,0x48,0x18,0x48,0x83,0xc0,0x10,0xba,0x02,0x00,0x00,0x00,0x48,0x89,0x06,0x89,0x56,0x08,0x48,0x8b,0xc6,0x48,0x83,0xc4,0x20,0x5e,0xc3};

        public static ReadOnlySpan<byte> get_AsciCharString_ᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x80,0x65,0xe0,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_LowercaseLetterString_ᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x38,0x34,0xc6,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_UppercaseLetterString_ᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x40,0x34,0xc6,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_LowercaseLetters_ᐤᐤ  =>  new byte[56]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x38,0x34,0xc6,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x00,0x48,0x85,0xc0,0x75,0x07,0x33,0xd2,0x45,0x33,0xc0,0xeb,0x0f,0x8b,0x10,0x48,0x8b,0xd0,0x39,0x12,0x48,0x83,0xc2,0x0c,0x44,0x8b,0x40,0x08,0x48,0x89,0x11,0x44,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_UppercaseLetters_ᐤᐤ  =>  new byte[56]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x40,0x34,0xc6,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x00,0x48,0x85,0xc0,0x75,0x07,0x33,0xd2,0x45,0x33,0xc0,0xeb,0x0f,0x8b,0x10,0x48,0x8b,0xd0,0x39,0x12,0x48,0x83,0xc2,0x0c,0x44,0x8b,0x40,0x08,0x48,0x89,0x11,0x44,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> get_UppercaseHexString_ᐤᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x88,0x65,0xe0,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x00,0xc3};

        public static ReadOnlySpan<byte> get_UppercaseHexDigits_ᐤᐤ  =>  new byte[56]{0x0f,0x1f,0x44,0x00,0x00,0x48,0xb8,0x88,0x65,0xe0,0x13,0xd3,0x01,0x00,0x00,0x48,0x8b,0x00,0x48,0x85,0xc0,0x75,0x07,0x33,0xd2,0x45,0x33,0xc0,0xeb,0x0f,0x8b,0x10,0x48,0x8b,0xd0,0x39,0x12,0x48,0x83,0xc2,0x0c,0x44,0x8b,0x40,0x08,0x48,0x89,0x11,0x44,0x89,0x41,0x08,0x48,0x8b,0xc1,0xc3};

    }
}
