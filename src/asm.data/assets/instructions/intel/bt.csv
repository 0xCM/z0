# Instructions
| Opcode              | Instruction    | Op/En | 64-bit Mode | Compat/Leg Mode | Description                    |
| 0F A3 /r            | BT r/m16, r16  | MR    | Valid       | Valid           | Store selected bit in CF flag. |
| 0F A3 /r            | BT r/m32, r32  | MR    | Valid       | Valid           | Store selected bit in CF flag. |
| REX.W + 0F A3 /r    | BT r/m64, r64  | MR    | Valid       | N.E.            | Store selected bit in CF flag. |
| 0F BA /4 ib         | BT r/m16, imm8 | MI    | Valid       | Valid           | Store selected bit in CF flag. |
| 0F BA /4 ib         | BT r/m32, imm8 | MI    | Valid       | Valid           | Store selected bit in CF flag. |
| REX.W + 0F BA /4 ib | BT r/m64, imm8 | MI    | Valid       | N.E.            | Store selected bit in CF flag. |

# Encoding
| Op/En | Operand 1     | Operand 2     | Operand 3 | Operand 4 |
| MR    | ModRM:r/m (r) | ModRM:reg (r) | NA        | NA        |
| MI    | ModRM:r/m (r) | imm8          | NA        | NA        |

# Layout
| Form                           | Layout                                                    |
| register, immediate            | 0100 000B 0000 1111 : 1011 1010 : 11 100 reg: imm8        |
| qwordregister, immediate8      | 0100 100B 1111 : 1011 1010 : 11 100 qwordreg: imm8 data   |
| memory, immediate              | 0100 00XB 0000 1111 : 1011 1010 : mod 100 r/m : imm8      |
| memory64, immediate8           | 0100 10XB 0000 1111 : 1011 1010 : mod 100 r/m : imm8 data |
| register1, register2           | 0100 0R0B 0000 1111 : 1010 0011 : 11 reg2 reg1            |
| qwordregister1, qwordregister2 | 0100 1R0B 0000 1111 : 1010 0011 : 11 qwordreg2 qwordreg1  |
| memory, reg                    | 0100 0RXB 0000 1111 : 1010 0011 : mod reg r/m             |
| memory, qwordreg               | 0100 1RXB 0000 1111 : 1010 0011 : mod qwordreg r/m        |