<?xml version="1.0"?>
<doc>
    <assembly>
        <name>z0.unsigned</name>
    </assembly>
    <members>
        <member name="T:Z0.ArtifactIdentity`2">
            <summary>
            Identifies an artifact
            </summary>
        </member>
        <member name="F:Z0.ArtifactIdentity`2.Kind">
            <summary>
            The identified artifact kind
            </summary>
        </member>
        <member name="F:Z0.ArtifactIdentity`2.Key">
            <summary>
            The artifact id over the <typeparamref name='K'/>-discriminated domain
            </summary>
        </member>
        <member name="P:Z0.ISized.Width">
            <summary>
            Specifies the bit-scaled data width of the reification type
            </summary>
        </member>
        <member name="T:Z0.UInt1">
            <summary>
            Defines literals corresponding to the set of unique 1-bit sequences
            </summary>
        </member>
        <member name="F:Z0.UInt1.b0">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Z0.UInt1.b1">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="T:Z0.UInt2">
            <summary>
            Defines literals corresponding to the set of unique 2-bit sequences
            </summary>
        </member>
        <member name="T:Z0.UInt3">
            <summary>
            Defines literals corresponding to the set of unique 3-bit sequences
            </summary>
        </member>
        <member name="F:Z0.UInt3.b000">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Z0.UInt3.b001">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Z0.UInt3.b010">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Z0.UInt3.b011">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Z0.UInt3.b100">
            <summary>
            4
            </summary>
        </member>
        <member name="F:Z0.UInt3.b101">
            <summary>
            5
            </summary>
        </member>
        <member name="F:Z0.UInt3.b110">
            <summary>
            6
            </summary>
        </member>
        <member name="F:Z0.UInt3.b111">
            <summary>
            7
            </summary>
        </member>
        <member name="T:Z0.UInt4">
            <summary>
            Defines literals corresponding to the set of unique 4-bit sequences
            </summary>
        </member>
        <member name="T:Z0.UInt5">
            <summary>
            Defines literals corresponding to the set of unique 5-bit sequences
            </summary>
        </member>
        <member name="T:Z0.UInt6">
            <summary>
            Defines literals corresponding to the set of unique 6-bit sequences
            </summary>
        </member>
        <member name="T:Z0.UInt7">
            <summary>
            Defines literals corresponding to the set of unique 7-bit sequences
            </summary>
        </member>
        <member name="T:Z0.Octet">
            <summary>
            Defines literals corresponding to the set of unique 8-bit sequences
            </summary>
        </member>
        <member name="T:Z0.uint1">
            <summary>
            Represents either 0 or 1
            </summary>
        </member>
        <member name="F:Z0.uint1.MinLiteral">
            <summary>
            Specifies the inclusive lower bound of the <see cref='T:Z0.uint1'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint1.MaxLiteral">
            <summary>
            Specifies the inclusive upper bound of the <see cref='T:Z0.uint1'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint1.Count">
            <summary>
            Specifies the count of unique values representable by a <see cref='T:Z0.uint1'/>
            </summary>
        </member>
        <member name="F:Z0.uint1.Width">
            <summary>
            Specifies the bit-width represented by <see cref='T:Z0.uint1'/>
            </summary>
        </member>
        <member name="P:Z0.uint1.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint1.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="M:Z0.uint1.Format">
            <summary>
            Renders the source value as as hexadecimal string
            </summary>
        </member>
        <member name="M:Z0.uint1.op_Implicit(Z0.uint1)~System.Byte">
            <summary>
            Converts a 1-bit integer to an unsigned 8-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint1.op_Implicit(Z0.uint1)~System.UInt16">
            <summary>
            Converts a 1-bit integer to an unsigned 16-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint1.op_Implicit(Z0.uint1)~System.UInt32">
            <summary>
            Converts a 1-bit integer to an unsigned 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint1.op_Implicit(Z0.uint1)~System.UInt64">
            <summary>
            Converts a 1-bit integer to an unsigned 61-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint1.op_Implicit(Z0.uint1)~System.Int32">
            <summary>
            Converts a 1-bit integer to a signed 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint1.op_Explicit(System.Byte)~Z0.uint1">
            <summary>
            Creates a 1-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint1.op_Implicit(System.UInt32)~Z0.uint1">
            <summary>
            Creates a 1-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint1.op_Explicit(System.UInt64)~Z0.uint1">
            <summary>
            Creates a 1-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="P:Z0.uint1.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint1'/> value
            </summary>
        </member>
        <member name="P:Z0.uint1.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint1'/> value
            </summary>
        </member>
        <member name="P:Z0.uint1.Zero">
            <summary>
            Specifies the <see cref='T:Z0.uint1'/> zero value
            </summary>
        </member>
        <member name="P:Z0.uint1.One">
            <summary>
            Specifies the <see cref='T:Z0.uint1'/> one value
            </summary>
        </member>
        <member name="T:Z0.uint2">
            <summary>
            Represents a value in the range [<see cef='MinLiteral'/>, <see cref='F:Z0.uint2.MaxLiteral'/>]
            </summary>
        </member>
        <member name="F:Z0.uint2.MinLiteral">
            <summary>
            Specifies the inclusive lower bound of the <see cref='T:Z0.uint2'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint2.MaxLiteral">
            <summary>
            Specifies the inclusive upper bound of the <see cref='T:Z0.uint2'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint2.Width">
            <summary>
            Specifies the bit-width of the <see cref='T:Z0.uint2'/> data type
            </summary>
        </member>
        <member name="F:Z0.uint2.Count">
            <summary>
            Specifies the count of unique values representable by a <see cref='T:Z0.uint2'/>
            </summary>
        </member>
        <member name="P:Z0.uint2.W">
            <summary>
            Specifies a <see cref='T:Z0.uint2'/> bitwidth <see ref='W'/> representative
            </summary>
        </member>
        <member name="P:Z0.uint2.N">
            <summary>
            Specifies the <see cref='T:Z0.uint2'/> bit-width as a natural number
            </summary>
        </member>
        <member name="P:Z0.uint2.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint2'/> value
            </summary>
        </member>
        <member name="P:Z0.uint2.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint2'/> value
            </summary>
        </member>
        <member name="P:Z0.uint2.Zero">
            <summary>
            Specifies the <see cref='T:Z0.uint2'/> zero value
            </summary>
        </member>
        <member name="P:Z0.uint2.One">
            <summary>
            Specifies the <see cref='T:Z0.uint2'/> one value
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Z0.uint2.op_Implicit(Z0.uint2)~System.Byte" -->
        <!-- Badly formed XML comment ignored for member "M:Z0.uint2.op_Implicit(Z0.uint2)~System.UInt16" -->
        <!-- Badly formed XML comment ignored for member "M:Z0.uint2.op_Implicit(Z0.uint2)~System.UInt32" -->
        <!-- Badly formed XML comment ignored for member "M:Z0.uint2.op_Implicit(Z0.uint2)~System.UInt64" -->
        <!-- Badly formed XML comment ignored for member "M:Z0.uint2.op_Implicit(Z0.uint2)~System.Int32" -->
        <!-- Badly formed XML comment ignored for member "M:Z0.uint2.op_Explicit(System.Byte)~Z0.uint2" -->
        <member name="M:Z0.uint2.op_Implicit(System.UInt32)~Z0.uint2">
            <summary>
            Creates a 3-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint2.op_Explicit(System.UInt64)~Z0.uint2">
            <summary>
            Creates a 3-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="P:Z0.uint2.Item(System.Byte)">
            <summary>
            Queries an index-identified bit
            </summary>
        </member>
        <member name="P:Z0.uint2.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint2.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="M:Z0.uint2.Format">
            <summary>
            Renders the source value as as hexadecimal string
            </summary>
        </member>
        <member name="T:Z0.uint24">
            <summary>
            Represents the value of an unsigned integer of bit-width 24
            </summary>
        </member>
        <member name="F:Z0.uint24.Width">
            <summary>
            Specifies the bit-width represented by <see cref='T:Z0.uint24'/>
            </summary>
        </member>
        <member name="P:Z0.uint24.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint24'/> value
            </summary>
        </member>
        <member name="P:Z0.uint24.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint24'/> value
            </summary>
        </member>
        <member name="P:Z0.uint24.Zero">
            <summary>
            Specifies  <see cref='T:Z0.uint24'/> type's zero-value
            </summary>
        </member>
        <member name="P:Z0.uint24.One">
            <summary>
            Specifies <see cref='T:Z0.uint24'/> type's one-value
            </summary>
        </member>
        <member name="P:Z0.uint24.Item(System.Byte)">
            <summary>
            Queries the state of an index-identified bit
            </summary>
        </member>
        <member name="P:Z0.uint24.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint24.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="T:Z0.uint3">
            <summary>
            Represents a value in the range [<see cef='MinLiteral'/>, <see cref='F:Z0.uint3.MaxLiteral'/>]
            </summary>
        </member>
        <member name="F:Z0.uint3.MinLiteral">
            <summary>
            Specifies the inclusive lower bound of the <see cref='T:Z0.uint3'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint3.MaxLiteral">
            <summary>
            Specifies the inclusive upper bound of the <see cref='T:Z0.uint3'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint3.Width">
            <summary>
            Specifies the bit-width represented by <see cref='T:Z0.uint3'/>
            </summary>
        </member>
        <member name="F:Z0.uint3.Count">
            <summary>
            Specifies the count of unique values representable by a <see cref='T:Z0.uint3'/>
            </summary>
        </member>
        <member name="P:Z0.uint3.N">
            <summary>
            Specifies the <see cref='F:Z0.uint3.Width'/> values as a type-level natural
            </summary>
        </member>
        <member name="P:Z0.uint3.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint3'/> value
            </summary>
        </member>
        <member name="P:Z0.uint3.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint3'/> value
            </summary>
        </member>
        <member name="P:Z0.uint3.Zero">
            <summary>
            Specifies the <see cref='T:Z0.uint3'/> zero value
            </summary>
        </member>
        <member name="P:Z0.uint3.One">
            <summary>
            Specifies the <see cref='T:Z0.uint3'/> one value
            </summary>
        </member>
        <member name="M:Z0.uint3.op_Implicit(Z0.uint3)~System.Byte">
            <summary>
            Converts a 3-bit integer to an unsigned 8-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint3.op_Implicit(Z0.uint3)~System.UInt16">
            <summary>
            Converts a 3-bit integer to an unsigned 16-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint3.op_Implicit(Z0.uint3)~System.UInt32">
            <summary>
            Converts a 3-bit integer to an unsigned 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint3.op_Implicit(Z0.uint3)~System.UInt64">
            <summary>
            Converts a 3-bit integer to an unsigned 63-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint3.op_Implicit(Z0.uint3)~System.Int32">
            <summary>
            Converts a 3-bit integer to a signed 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint3.op_Explicit(System.Byte)~Z0.uint3">
            <summary>
            Creates a 3-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint3.op_Implicit(System.UInt32)~Z0.uint3">
            <summary>
            Creates a 3-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint3.op_Explicit(System.UInt64)~Z0.uint3">
            <summary>
            Creates a 3-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="P:Z0.uint3.Item(System.Byte)">
            <summary>
            Queries an index-dentified bit
            </summary>
        </member>
        <member name="P:Z0.uint3.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint3.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="M:Z0.uint3.Format">
            <summary>
            Renders the source value as as hexadecimal string
            </summary>
        </member>
        <member name="T:Z0.uint4">
            <summary>
            Represents a value in the range [<see cef='MinLiteral'/>, <see cref='F:Z0.uint4.MaxLiteral'/>]
            </summary>
        </member>
        <member name="F:Z0.uint4.MinLiteral">
            <summary>
            Specifies the inclusive lower bound of the <see cref='T:Z0.uint4'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint4.MaxLiteral">
            <summary>
            Specifies the inclusive upper bound of the <see cref='T:Z0.uint4'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint4.Count">
            <summary>
            Specifies the count of unique values representable by a <see cref='T:Z0.uint4'/>
            </summary>
        </member>
        <member name="F:Z0.uint4.Width">
            <summary>
            Specifies the represented data type bit-width
            </summary>
        </member>
        <member name="P:Z0.uint4.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint4'/> value
            </summary>
        </member>
        <member name="P:Z0.uint4.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint4'/> value
            </summary>
        </member>
        <member name="P:Z0.uint4.Zero">
            <summary>
            Specifies the <see cref='T:Z0.uint4'/> zero value
            </summary>
        </member>
        <member name="P:Z0.uint4.One">
            <summary>
            Specifies the <see cref='T:Z0.uint4'/> one value
            </summary>
        </member>
        <member name="M:Z0.uint4.op_Implicit(Z0.uint4)~System.Byte">
            <summary>
            Converts a 4-bit integer to an unsigned 8-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint4.op_Implicit(Z0.uint4)~System.UInt16">
            <summary>
            Converts a 4-bit integer to an unsigned 16-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint4.op_Implicit(Z0.uint4)~System.UInt32">
            <summary>
            Converts a 4-bit integer to an unsigned 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint4.op_Implicit(Z0.uint4)~System.UInt64">
            <summary>
            Converts a 4-bit integer to an unsigned 64-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint4.op_Implicit(Z0.uint4)~System.Int32">
            <summary>
            Converts a 4-bit integer to a signed 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint4.op_Explicit(System.Byte)~Z0.uint4">
            <summary>
            Creates a 4-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint4.op_Implicit(System.UInt32)~Z0.uint4">
            <summary>
            Creates a 4-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint4.op_Explicit(System.UInt64)~Z0.uint4">
            <summary>
            Creates a 4-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="P:Z0.uint4.Item(System.Byte)">
            <summary>
            Queries an index-identified bit
            </summary>
        </member>
        <member name="P:Z0.uint4.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint4.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="M:Z0.uint4.Format">
            <summary>
            Renders the source value as as hexadecimal string
            </summary>
        </member>
        <member name="T:Z0.uint5">
            <summary>
            Represents a value in the range [<see cef='MinLiteral'/>, <see cref='F:Z0.uint5.MaxLiteral'/>]
            </summary>
        </member>
        <member name="F:Z0.uint5.MinLiteral">
            <summary>
            Specifies the inclusive lower bound of the <see cref='T:Z0.uint5'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint5.MaxLiteral">
            <summary>
            Specifies the inclusive upper bound of the <see cref='T:Z0.uint5'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint5.Width">
            <summary>
            Specifies the bit-width represented by <see cref='T:Z0.uint5'/>
            </summary>
        </member>
        <member name="F:Z0.uint5.Count">
            <summary>
            Specifies the count of unique values representable by a <see cref='T:Z0.uint5'/>
            </summary>
        </member>
        <member name="P:Z0.uint5.W">
            <summary>
            Specifies the <see cref='F:Z0.uint5.Width'/> values as a type-level width
            </summary>
        </member>
        <member name="P:Z0.uint5.N">
            <summary>
            Specifies the <see cref='F:Z0.uint5.Width'/> values as a type-level natural
            </summary>
        </member>
        <member name="P:Z0.uint5.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint5'/> value
            </summary>
        </member>
        <member name="P:Z0.uint5.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint5'/> value
            </summary>
        </member>
        <member name="P:Z0.uint5.Zero">
            <summary>
            Specifies the <see cref='T:Z0.uint5'/> zero value
            </summary>
        </member>
        <member name="P:Z0.uint5.One">
            <summary>
            Specifies the <see cref='T:Z0.uint5'/> one value
            </summary>
        </member>
        <member name="M:Z0.uint5.op_Implicit(Z0.uint5)~System.Byte">
            <summary>
            Converts a 5-bit integer to an unsigned 8-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint5.op_Implicit(Z0.uint5)~System.UInt16">
            <summary>
            Converts a 5-bit integer to an unsigned 16-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint5.op_Implicit(Z0.uint5)~System.UInt32">
            <summary>
            Converts a 5-bit integer to an unsigned 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint5.op_Implicit(Z0.uint5)~System.UInt64">
            <summary>
            Converts a 5-bit integer to an unsigned 65-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint5.op_Implicit(Z0.uint5)~System.Int32">
            <summary>
            Converts a 5-bit integer to a signed 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint5.op_Explicit(System.Byte)~Z0.uint5">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint5.op_Implicit(System.UInt32)~Z0.uint5">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint5.op_Explicit(System.UInt64)~Z0.uint5">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="P:Z0.uint5.Item(System.Byte)">
            <summary>
            Queries an index-identified bit
            </summary>
        </member>
        <member name="P:Z0.uint5.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint5.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="T:Z0.uint6">
            <summary>
            Represents a value in the range [<see cef='MinLiteral'/>, <see cref='F:Z0.uint6.MaxLiteral'/>]
            </summary>
        </member>
        <member name="F:Z0.uint6.MinLiteral">
            <summary>
            Specifies the inclusive lower bound of <see cref='T:Z0.uint6'/> as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint6.MaxLiteral">
            <summary>
            Specifies the inclusive upper bound of the <see cref='T:Z0.uint6'/> as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint6.Count">
            <summary>
            Specifies the count of unique values representable by a <see cref='T:Z0.uint6'/>
            </summary>
        </member>
        <member name="F:Z0.uint6.Width">
            <summary>
            Specifies the represented data type bit-width
            </summary>
        </member>
        <member name="P:Z0.uint6.N">
            <summary>
            Specifies the <see cref='F:Z0.uint6.Width'/> values as a type-level natural
            </summary>
        </member>
        <member name="P:Z0.uint6.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint6'/> value
            </summary>
        </member>
        <member name="P:Z0.uint6.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint6'/> value
            </summary>
        </member>
        <member name="P:Z0.uint6.Zero">
            <summary>
            Specifies the <see cref='T:Z0.uint6'/> zero value
            </summary>
        </member>
        <member name="P:Z0.uint6.One">
            <summary>
            Specifies the <see cref='T:Z0.uint6'/> one value
            </summary>
        </member>
        <member name="M:Z0.uint6.op_Implicit(Z0.uint6)~System.Byte">
            <summary>
            Converts a 5-bit integer to an unsigned 8-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint6.op_Implicit(Z0.uint6)~System.UInt16">
            <summary>
            Converts a 5-bit integer to an unsigned 16-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint6.op_Implicit(Z0.uint6)~System.UInt32">
            <summary>
            Converts a 5-bit integer to an unsigned 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint6.op_Implicit(Z0.uint6)~System.UInt64">
            <summary>
            Converts a 5-bit integer to an unsigned 65-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint6.op_Implicit(Z0.uint6)~System.Int32">
            <summary>
            Converts a 5-bit integer to a signed 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint6.op_Explicit(System.Byte)~Z0.uint6">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint6.op_Implicit(System.UInt32)~Z0.uint6">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint6.op_Explicit(System.UInt64)~Z0.uint6">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="P:Z0.uint6.Item(System.Byte)">
            <summary>
            Queries and manipulates a bit identified by its 0-based index
            </summary>
        </member>
        <member name="P:Z0.uint6.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint6.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="T:Z0.uint7">
            <summary>
            Represents a value in the range [<see cef='MinLiteral'/>, <see cref='F:Z0.uint7.MaxLiteral'/>]
            </summary>
        </member>
        <member name="F:Z0.uint7.MinLiteral">
            <summary>
            Specifies the inclusive lower bound of the <see cref='T:Z0.uint7'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint7.MaxLiteral">
            <summary>
            Specifies the inclusive upper bound of the <see cref='T:Z0.uint7'/> data type as a literal value
            </summary>
        </member>
        <member name="F:Z0.uint7.Count">
            <summary>
            Specifies the count of unique values representable by a <see cref='T:Z0.uint7'/>
            </summary>
        </member>
        <member name="F:Z0.uint7.Width">
            <summary>
            Specifies the represented data type bit-width
            </summary>
        </member>
        <member name="P:Z0.uint7.N">
            <summary>
            Specifies the <see cref='F:Z0.uint7.Width'/> values as a type-level natural
            </summary>
        </member>
        <member name="P:Z0.uint7.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.uint7'/> value
            </summary>
        </member>
        <member name="P:Z0.uint7.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.uint7'/> value
            </summary>
        </member>
        <member name="P:Z0.uint7.Zero">
            <summary>
            Specifies the <see cref='T:Z0.uint7'/> zero value
            </summary>
        </member>
        <member name="P:Z0.uint7.One">
            <summary>
            Specifies the <see cref='T:Z0.uint7'/> one value
            </summary>
        </member>
        <member name="M:Z0.uint7.op_Implicit(Z0.uint7)~System.Byte">
            <summary>
            Converts a 5-bit integer to an unsigned 8-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint7.op_Implicit(Z0.uint7)~System.UInt16">
            <summary>
            Converts a 5-bit integer to an unsigned 16-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint7.op_Implicit(Z0.uint7)~System.UInt32">
            <summary>
            Converts a 5-bit integer to an unsigned 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint7.op_Implicit(Z0.uint7)~System.UInt64">
            <summary>
            Converts a 5-bit integer to an unsigned 65-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint7.op_Implicit(Z0.uint7)~System.Int32">
            <summary>
            Converts a 5-bit integer to a signed 32-bit integer
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint7.op_Explicit(System.Byte)~Z0.uint7">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint7.op_Implicit(System.UInt32)~Z0.uint7">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.uint7.op_Explicit(System.UInt64)~Z0.uint7">
            <summary>
            Creates a 5-bit integer from the least four bits of the source operand
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="P:Z0.uint7.Item(System.Byte)">
            <summary>
            Queries the state of an index-identified bit
            </summary>
        </member>
        <member name="P:Z0.uint7.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.uint7.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="T:Z0.octet">
            <summary>
            Represents the value of a type-level octet and thus is an integer in the range [0,255]
            </summary>
        </member>
        <member name="F:Z0.octet.Width">
            <summary>
            Specifies the bit-width represented by <see cref='T:Z0.octet'/>
            </summary>
        </member>
        <member name="P:Z0.octet.Min">
            <summary>
            Specifies the minimum <see cref='T:Z0.octet'/> value
            </summary>
        </member>
        <member name="P:Z0.octet.Max">
            <summary>
            Specifies the maximum <see cref='T:Z0.octet'/> value
            </summary>
        </member>
        <member name="P:Z0.octet.Item(System.Byte)">
            <summary>
            Queries the state of an index-identified bit
            </summary>
        </member>
        <member name="P:Z0.octet.IsMax">
            <summary>
            Specifies whether the current value is the maximum value
            </summary>
        </member>
        <member name="P:Z0.octet.IsMin">
            <summary>
            Specifies whether the current value is the minimum value
            </summary>
        </member>
        <member name="M:Z0.UBits.cut(System.Byte@,Z0.W1)">
            <summary>
            Shears the input to a target width
            </summary>
            <param name="src">The value to cut</param>
            <param name="dst">The target width</param>
        </member>
        <member name="M:Z0.UBits.cut(System.Byte@,Z0.W2)">
            <summary>
            Shears the input to a target width
            </summary>
            <param name="src">The value to cut</param>
            <param name="dst">The target width</param>
        </member>
        <member name="M:Z0.UBits.cut(System.Byte@,Z0.W3)">
            <summary>
            Shears the input to a target width
            </summary>
            <param name="src">The value to cut</param>
            <param name="dst">The target width</param>
        </member>
        <member name="M:Z0.UBits.cut(System.Byte@,Z0.W4)">
            <summary>
            Shears the input to a target width
            </summary>
            <param name="src">The value to cut</param>
            <param name="dst">The target width</param>
        </member>
        <member name="M:Z0.UBits.cut(System.Byte@,Z0.W5)">
            <summary>
            Shears the input to a target width
            </summary>
            <param name="src">The value to cut</param>
            <param name="dst">The target width</param>
        </member>
        <member name="M:Z0.UBits.cut(System.Byte@,Z0.W6)">
            <summary>
            Shears the input to a target width
            </summary>
            <param name="src">The value to cut</param>
            <param name="dst">The target width</param>
        </member>
        <member name="M:Z0.UBits.cut(System.Byte@,Z0.W7)">
            <summary>
            Shears the input to a target width
            </summary>
            <param name="src">The value to cut</param>
            <param name="dst">The target width</param>
        </member>
        <member name="M:Z0.UBits.edit``1(``0@,Z0.W1)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.uint1'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.edit``1(``0@,Z0.W2)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.uint1'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.edit``1(``0@,Z0.W3)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.uint2'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.edit``1(``0@,Z0.W4)">
            <summary>
            Reinterprets an input reference as as a mutable <see cref='T:Z0.uint3'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.edit``1(``0@,Z0.W5)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.uint4'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.edit``1(Z0.uint5@)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.uint5'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.edit``1(``0@,Z0.W6)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.uint6'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.edit``1(``0@,Z0.W7)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.uint7'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.cast``1(``0@,Z0.W8)">
            <summary>
            Reinterprets an input reference as a mutable <see cref='T:Z0.octet'/> reference cell
            </summary>
            <param name="src">The source reference</param>
            <param name="dst">The target width selector</param>
            <typeparam name="S">The source type</typeparam>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W3,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='!:U3'/>, as indicated by the <see cref='T:Z0.W3'/> selector
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W3,Z0.N1,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='!:U3'/>, as indicated by the <see cref='T:Z0.W3'/> selector
            and shifts the result <see cref='T:Z0.N1'/> bit leftward
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
            <param name="n">The leftward shift count</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W4,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='!:U4'/>, as indicated by the <see cref='T:Z0.W4'/> selector
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W5,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='!:U5'/>, as indicated by the <see cref='T:Z0.W5'/> selector
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W6,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='T:Z0.uint6'/>, as indicated by the <see cref='T:Z0.W6'/> selector
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.join(Z0.uint1,Z0.uint1)">
            <summary>
            (a,b) -> [ab]
            </summary>
            <param name="a">Source bit 0</param>
            <param name="b">Source bit 1</param>
        </member>
        <member name="M:Z0.UBits.join(Z0.uint1,Z0.uint1,Z0.uint1)">
            <summary>
            (a,b) -> [ab]
            </summary>
            <param name="a">Source bit 0</param>
            <param name="b">Source bit 1</param>
        </member>
        <member name="M:Z0.UBits.join(Z0.uint2,Z0.uint2)">
            <summary>
            (a,b) -> [bbaa]
            </summary>
            <param name="a">Source bits 0-1</param>
            <param name="b">Source bits 2-3</param>
        </member>
        <member name="M:Z0.UBits.join(Z0.uint2,Z0.uint2,Z0.uint2)">
            <summary>
            (a,b) -> [bbaa]
            </summary>
            <param name="a">Source bits 0-1</param>
            <param name="b">Source bits 2-3</param>
            <param name="c">Source bits 4-5</param>
            <param name="d">Source bits 6-7</param>
        </member>
        <member name="M:Z0.UBits.join(Z0.uint2,Z0.uint2,Z0.uint2,Z0.uint2)">
            <summary>
            (a,b,c,d) -> [dd cc bb aa]
            </summary>
            <param name="a">Source bits 0-1</param>
            <param name="b">Source bits 2-3</param>
            <param name="c">Source bits 4-5</param>
            <param name="d">Source bits 6-7</param>
        </member>
        <member name="M:Z0.UBits.join(Z0.uint3,Z0.uint3,Z0.uint2)">
            <summary>
            (a:3, b:3, c:2) -> [cc bbb aaa]
            </summary>
            <param name="a">Source bits 0-1</param>
            <param name="b">Source bits 2-3</param>
            <param name="c">Source bits 4-5</param>
            <param name="d">Source bits 6-7</param>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.uint1@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.uint2@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.uint3@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.uint4@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.uint5@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.uint6@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.uint7@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.refine``1(Z0.octet@)">
            <summary>
            Converts a source integral value to an enum value
            </summary>
            <param name="src">The source value</param>
            <typeparam name="K">The target enum  type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N2)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N3)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N4)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N5)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N6)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N7)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N8)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.scalar``1(``0@,Z0.N1)">
            <summary>
            Converts an to sized integral value
            </summary>
            <param name="src">The source enum value</param>
            <param name="n">The target integer width</param>
            <typeparam name="K">The source enum type</typeparam>
        </member>
        <member name="M:Z0.UBits.uint1(System.Byte)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint1(System.SByte)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint1(System.UInt16)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint1(System.Int16)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint1(System.Int32)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint1(System.UInt32)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint1(System.Int64)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint1(System.UInt64)">
            <summary>
            Creates a 1-bit unsigned integer from the first bit of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.Boolean)">
            <summary>
            Creates a 2-bit unsigned integer, equal to zero or one, if the source value is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.Byte)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.SByte)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.UInt16)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.Int16)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.Int32)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.UInt32)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.Int64)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,System.UInt64)">
            <summary>
            Creates a 2-bit unsigned integer from the least 2 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.create(Z0.W2,Z0.bit,Z0.bit)">
            <summary>
            Creates a 2-bit unsigned integer from a 2-term bit sequence
            </summary>
            <param name="x0">The term at index 0</param>
            <param name="x1">The term at index 1</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.Byte)">
            <summary>
            Creates a 2-bit unsigned integer from the first two source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.SByte)">
            <summary>
            Creates a 2-bit unsigned integer from the first least two source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.UInt16)">
            <summary>
            Creates a 2-bit unsigned integer from the first least two source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.Int16)">
            <summary>
            Creates a 2-bit unsigned integer from the least two bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.Int32)">
            <summary>
            Creates a 2-bit unsigned integer from the least two bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.UInt32)">
            <summary>
            Creates a 2-bit unsigned integer from the least two bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.Int64)">
            <summary>
            Creates a 2-bit unsigned integer from the least two bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint2(System.UInt64)">
            <summary>
            Creates a 2-bit unsigned integer from the least two bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.Boolean)">
            <summary>
            Creates a 24-bit unsigned integer, equal to zero or one, according to whether the source is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.Byte)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.SByte)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.UInt16)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.Int16)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.Int32)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.UInt32)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.Int64)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint24(System.UInt64)">
            <summary>
            Creates a 24-bit unsigned integer from the least 24 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.Boolean)">
            <summary>
            Creates a 3-bit unsigned integer, equal to zero or one, if the source value is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.Byte)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.SByte)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.UInt16)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.Int16)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.Int32)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.UInt32)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.Int64)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(System.UInt64)">
            <summary>
            Creates a 3-bit unsigned integer from the least 3 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint3(Z0.BitState,Z0.BitState,Z0.BitState)">
            <summary>
            Creates a 3-bit unsigned integer from a 3-term bit sequence
            </summary>
            <param name="x0">The term at index 0</param>
            <param name="x1">The term at index 1</param>
            <param name="x2">The term at index 2</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.uint3,Z0.W4)">
            <summary>
            Promotes a triad to an quartet
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.uint3,Z0.W5)">
            <summary>
            Promotes a triad to an quintet
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.uint3,Z0.W6)">
            <summary>
            Promotes a triad to an quintet
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.uint3,Z0.W8)">
            <summary>
            Promotes a triad to an octet
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.srl(System.Byte,Z0.N4,Z0.W4)">
            <summary>
            Shifts the source a rightwards by a specified bit count and shears the result to a specified width
            </summary>
            <param name="src">The source value</param>
            <param name="n">The number of bits to shift</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.Boolean)">
            <summary>
            Creates a 4-bit unsigned integer, equal to zero or one, if the source value is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.Byte)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.SByte)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.UInt16)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.Int16)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.Int32)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.UInt32)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.Int64)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(System.UInt64)">
            <summary>
            Creates a 4-bit unsigned integer from the least 4 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint4(Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState)">
            <summary>
            Creates a 4-bit unsigned integer from a 4-term bit sequence
            </summary>
            <param name="x0">The term at index 0</param>
            <param name="x1">The term at index 1</param>
            <param name="x2">The term at index 2</param>
            <param name="x3">The term at index 3</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.Boolean)">
            <summary>
            Creates a 5-bit unsigned integer, equal to zero or one, if the source value is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.Byte)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.SByte)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.UInt16)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.Int16)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.Int32)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.UInt32)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.Int64)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(System.UInt64)">
            <summary>
            Creates a 5-bit unsigned integer from the least 5 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint5(Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState)">
            <summary>
            Creates a 5-bit unsigned integer from a 5-term bit sequence
            </summary>
            <param name="x0">The term at index 0</param>
            <param name="x1">The term at index 1</param>
            <param name="x2">The term at index 2</param>
            <param name="x3">The term at index 3</param>
            <param name="x4">The term at index 4</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.Boolean)">
            <summary>
            Creates a 6-bit unsigned integer, equal to zero or one, if the source value is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.Byte)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.SByte)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.UInt16)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.Int16)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 bits of the source
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.Int32)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.UInt32)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.Int64)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(Z0.uint24)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(System.UInt64)">
            <summary>
            Creates a 6-bit unsigned integer from the least 6 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint6(Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState)">
            <summary>
            Constructs a uint6 value from a sequence of bits ranging from low to high
            </summary>
            <param name="x0">The first/least bit value, if specified; otherwise, defaults to 0</param>
            <param name="x1">The second bit value, if specified; otherwise, defaults to 0</param>
            <param name="x2">The third bit value, if specified; otherwise, defaults to 0</param>
            <param name="x3">The fourth/highest bit value, if specified; otherwise, defaults to 0</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.Boolean)">
            <summary>
            Creates a 7-bit unsigned integer, equal to zero or one, according to whether the source is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.Byte)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.SByte)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.UInt16)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.Int16)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.Int32)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.UInt32)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.Int64)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(System.UInt64)">
            <summary>
            Creates a 7-bit unsigned integer from the least 7 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint7(Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState,Z0.BitState)">
            <summary>
            Constructs a uint7 value from a sequence of bits ranging from low to high
            </summary>
            <param name="x0">The first/least bit value, if specified; otherwise, defaults to 0</param>
            <param name="x1">The second bit value, if specified; otherwise, defaults to 0</param>
            <param name="x2">The third bit value, if specified; otherwise, defaults to 0</param>
            <param name="x3">The fourth/highest bit value, if specified; otherwise, defaults to 0</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.Boolean)">
            <summary>
            Creates a 8-bit unsigned integer, equal to zero or one, according to whether the source is respectively false or true
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.Byte)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.SByte)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.UInt16)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.Int16)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.Int32)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.UInt32)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.Int64)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.uint8(System.UInt64)">
            <summary>
            Creates a 8-bit unsigned integer from the least 8 source bits
            </summary>
            <param name="src">The source value</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W8,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='T:Z0.octet'/>, as indicated by the <see cref='T:Z0.W8'/> selector
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W8,Z0.N2,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='T:Z0.octet'/>, as indicated by the <see cref='T:Z0.W8'/> selector,
            and shifts the result <see cref='T:Z0.N2'/> bits leftward
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
            <param name="n">The leftward shift count</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W8,Z0.N3,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='T:Z0.octet'/>, as indicated by the <see cref='T:Z0.W8'/> selector,
            and shifts the result <see cref='T:Z0.N3'/> bits leftward
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
            <param name="n">The leftward shift count</param>
        </member>
        <member name="M:Z0.UBits.extend(Z0.W8,Z0.N4,Z0.uint2)">
            <summary>
            Promotes a <see cref='!:U2'/> to a <see cref='T:Z0.octet'/> as indicated by the <see cref='T:Z0.W8'/> selector
            and shifts the result <see cref='T:Z0.N4'/> bits bits leftward
            </summary>
            <param name="src">The source value</param>
            <param name="w">The target width</param>
            <param name="n">The leftward shift count</param>
        </member>
        <member name="P:Z0.NamedSymbols`2.Named">
            <summary>
            Retrieves the nonempty symbol names
            </summary>
        </member>
        <member name="P:Z0.NamedSymbols`3.Named">
            <summary>
            Retrieves the nonempty symbol names
            </summary>
        </member>
        <member name="T:Z0.SymbolStore`1">
            <summary>
            Defines an <typeparamref name='S'/> symbol sequence
            </summary>
        </member>
        <member name="M:Z0.SymbolStore.bits``1(Z0.N1)">
            <summary>
            Creates a cell-parametric store store covering each <see cref='T:Z0.UInt1'/> member
            </summary>
            <param name="n">The sequence length selector</param>
            <typeparam name="T">The storage cell type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.bits``1(Z0.N2)">
            <summary>
            Creates a cell-parametric store store covering each <see cref='T:Z0.UInt2'/> member
            </summary>
            <param name="n">The sequence length selector</param>
            <typeparam name="T">The storage cell type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.bits``1(Z0.N3)">
            <summary>
            Creates a cell-parametric store store covering each <see cref='T:Z0.UInt3'/> member
            </summary>
            <param name="n">The sequence length selector</param>
            <typeparam name="T">The storage cell type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.bits``1(Z0.N4)">
            <summary>
            Creates a cell-parametric store store covering each <see cref='T:Z0.UInt4'/> member
            </summary>
            <param name="n">The sequence length selector</param>
            <typeparam name="T">The storage cell type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.bits``1(Z0.N5)">
            <summary>
            Creates a cell-parametric store store covering each <see cref='T:Z0.UInt5'/> member
            </summary>
            <param name="n">The sequence length selector</param>
            <typeparam name="T">The storage cell type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.bits``1(Z0.N6)">
            <summary>
            Creates a cell-parametric store store covering each <see cref='T:Z0.UInt6'/> member
            </summary>
            <param name="n">The sequence length selector</param>
            <typeparam name="T">The storage cell type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.bits``1(Z0.N8)">
            <summary>
            Creates a cell-parametric store store covering each <see cref='T:Z0.Octet'/> member
            </summary>
            <param name="n">The sequence length selector</param>
            <typeparam name="T">The storage cell type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.hex(Z0.N2)">
            <summary>
            Returns a readonly symbol span covering each <see cref='T:Z0.Hex2Seq'/> member
            </summary>
            <param name="n">The sequence length selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(Z0.N3)">
            <summary>
            Returns a readonly symbol span covering each <see cref='T:Z0.Hex3Seq'/> member
            </summary>
            <param name="n">The sequence length selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(Z0.N4)">
            <summary>
            Returns a readonly symbol span covering each <see cref='T:Z0.Hex4Seq'/> member
            </summary>
            <param name="n">The sequence length selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(Z0.N5)">
            <summary>
            Creates a store covering each <see cref='T:Z0.Hex5Seq'/> member
            </summary>
            <param name="n">The sequence length selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(Z0.N6)">
            <summary>
            Creates a store covering each <see cref='T:Z0.Hex6Seq'/> member
            </summary>
            <param name="n">The sequence length selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(Z0.N7)">
            <summary>
            Creates a store covering each <see cref='T:Z0.Hex7Seq'/> member
            </summary>
            <param name="n">The sequence length selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(Z0.N8)">
            <summary>
            Creates a store covering each <see cref='T:Z0.Hex8Seq'/> member
            </summary>
            <param name="n">The sequence length selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(System.Byte,Z0.UpperCased)">
            <summary>
            Presents the source value as a sequence of hex symbols
            </summary>
            <param name="src">The source value</param>
            <param name="case">The case selector</param>
        </member>
        <member name="M:Z0.SymbolStore.hex(System.Byte,Z0.LowerCased)">
            <summary>
            Presents the source value as a sequence of hex symbols
            </summary>
            <param name="src">The source value</param>
            <param name="case">The case selector</param>
        </member>
        <member name="M:Z0.SymbolStore.symbols``3">
            <summary>
            Defines a sequence of symbols predicated on parametric arguments
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
            <typeparam name="N"></typeparam>
        </member>
        <member name="M:Z0.SymbolStore.symbols``2">
            <summary>
            Defines a symbol spec predicated on enumeration literals
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Z0.SymbolStore.symbols``2(``0[])">
            <summary>
            Defines a symbol spec predicated on enumeration literals
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Z0.SymbolStore.symbols``1">
            <summary>
            Defines a symbol spec predicated on enumeration literals
            </summary>
            <typeparam name="E">The enum type</typeparam>
        </member>
        <member name="M:Z0.SymbolStore.symbols``1(``0[])">
            <summary>
            Defines a symbol spec predicated on enumeration literals
            </summary>
            <typeparam name="E">The enum type</typeparam>
        </member>
        <member name="P:Z0.ILegacyAlphabet`1.Symbols">
            <summary>
            Enumerates the symbols defined by an alphabet
            </summary>
        </member>
        <member name="T:Z0.LegacySymbol">
            <summary>
            Represents an atomic value
            </summary>
        </member>
        <member name="T:Z0.LegacySymbol`1">
            <summary>
            Represents a symbol belonging to an alphabet A
            </summary>
        </member>
        <member name="F:Z0.LegacySymbol`1.EmptyChar">
            <summary>
            Uses the unicode null symbol to represent an empty character
            </summary>
        </member>
        <member name="M:Z0.LegacySymbol`1.op_Addition(Z0.LegacySymbol{`0},Z0.LegacySymbol{`0})">
            <summary>
            Concatenates two symbols to form a word
            </summary>
            <param name="lhs">The left symbol, which will form the head of the new word</param>
            <param name="rhs">The right symbol, which will form the tail of the new word</param>
        </member>
        <member name="T:Z0.LegacyWord`1">
            <summary>
            Encodes a finite, ordered sequence of symbols over some alphabet A
            In the literature, a 'word' in this context is often referred to as a
            'string' - the usage of which is avoided here, for obvious reasons.
            </summary>
        </member>
        <member name="P:Z0.LegacyWord`1.Empty">
            <summary>
            Represents the empty word, with an invariant length of 0
            </summary>
            <typeparam name="A">The alphabet type</typeparam>
        </member>
        <member name="F:Z0.LegacyWord`1.Symbols">
            <summary>
            The symbols that comprise the word
            </summary>
        </member>
        <member name="M:Z0.LegacyWord`1.op_Equality(Z0.LegacyWord{`0},Z0.LegacyWord{`0})">
            <summary>
            Determines whether two words are equivalent
            </summary>
            <param name="lhs">The first word</param>
            <param name="rhs">The second word</param>
        </member>
        <member name="M:Z0.LegacyWord`1.op_Inequality(Z0.LegacyWord{`0},Z0.LegacyWord{`0})">
            <summary>
            Determines whether two words are unequal
            </summary>
            <param name="lhs">The first word</param>
            <param name="rhs">The second word</param>
        </member>
        <member name="M:Z0.LegacyWord`1.op_Implicit(Z0.LegacyWord{`0})~System.String">
            <summary>
            Converts the word to a string via a canonical format
            </summary>
            <param name="src">The source word</param>
        </member>
        <member name="M:Z0.LegacyWord`1.op_Implicit(Z0.LegacySymbol{`0}[])~Z0.LegacyWord{`0}">
            <summary>
            Encloses an array of symbols by a word
            </summary>
            <param name="src">The source symbols</param>
            <typeparam name="A">The alphabet</typeparam>
        </member>
        <member name="M:Z0.LegacyWord`1.op_Implicit(Z0.LegacyWord{`0})~Z0.LegacySymbol{`0}[]">
            <summary>
            Converts a word to its equivalent symbolic representation
            </summary>
            <param name="src">The source word</param>
        </member>
        <member name="M:Z0.LegacyWord`1.op_Addition(Z0.LegacyWord{`0},Z0.LegacyWord{`0})">
            <summary>
            Concatenates a word w1 with a word w2 to form a word w' = w1w2
            </summary>
            <param name="w1">The first word</param>
            <param name="w2">The second word</param>
        </member>
        <member name="P:Z0.LegacyWord`1.Zero">
            <summary>
            The empty word containing no symbols
            </summary>
        </member>
        <member name="P:Z0.LegacyWord`1.Length">
            <summary>
            Specifies the number of symbols that comprise the word
            </summary>
        </member>
        <member name="M:Z0.LegacyWord`1.Format">
            <summary>
            Formats the word as a string
            </summary>
        </member>
        <member name="M:Z0.LegacyWord`1.Concat(Z0.LegacyWord{`0})">
            <summary>
            Concatenates this word w1 with another word w2 to form a new word w1w2
            </summary>
            <param name="w2">The word to concatenate with the current word</param>
        </member>
        <member name="T:Z0.Token`2">
            <summary>
            Represents a lexical token
            </summary>
        </member>
        <member name="P:Z0.Token`2.Id">
            <summary>
            Identifies the token within some scope
            </summary>
        </member>
        <member name="M:Z0.Tokens.names``1(Z0.NamedSymbol{``0}[])">
            <summary>
            Defines a <see cref='T:Z0.NamedSymbol`1'/> sequence
            </summary>
            <param name="src">The source symbols</param>
            <typeparam name="S">The symbol type</typeparam>
        </member>
        <member name="M:Z0.ValueTypes.code(Z0.UpperCased,Z0.uint4)">
            <summary>
            Returns the hex character code for a <see cref='T:Z0.uint4'/> value
            </summary>
            <param name="src">The value to be hex-encoded</param>
        </member>
        <member name="M:Z0.ValueTypes.code(Z0.LowerCased,Z0.uint4)">
            <summary>
            Returns the hex character code for a <see cref='T:Z0.uint4'/> value
            </summary>
            <param name="src">The value to be hex-encoded</param>
        </member>
        <member name="M:Z0.ValueTypes.nonempty``1(``0@)">
            <summary>
            Determines whether at least one byte of a structural value is nonzero
            </summary>
            <param name="src">The value to evaluate</param>
            <typeparam name="T">The structure type</typeparam>
        </member>
        <member name="M:Z0.ValueTypes.neq``1(``0@,``0@)">
            <summary>
            Determines whether at least one byte of two structural values differs
            </summary>
            <param name="x">The first value</param>
            <param name="y">The second value</param>
            <typeparam name="T">The structure type</typeparam>
        </member>
        <member name="M:Z0.ValueTypes.eq``1(``0@,``0@)">
            <summary>
            Determines whether each corresponding bytes of two structural values are identical
            </summary>
            <param name="x">The first value</param>
            <param name="y">The second value</param>
            <typeparam name="T">The structure type</typeparam>
        </member>
        <member name="M:Z0.ValueTypes.empty``1(``0@)">
            <summary>
            Determines whether all bytes of a structural value are zero
            </summary>
            <param name="src">The value to evaluate</param>
            <typeparam name="T">The structure type</typeparam>
        </member>
    </members>
</doc>
