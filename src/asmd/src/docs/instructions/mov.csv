| Opcode            | Instruction              | Op/En | 64-Bit Mode | Compat/Leg Mode | Description                                                    |
| 88 / r            | MOV r/m8,r8              | MR    | Valid       | Valid           | Move r8 to r/m8.                                               |
| REX + 88 / r      | MOV r/m8 ***, r8 ***     | MR    | Valid       | N.E.            | Move r8 to r/m8.                                               |
| 89 / r            | MOV r/m16,r16            | MR    | Valid       | Valid           | Move r16 to r/m16.                                             |
| 89 / r            | MOV r/m32,r32            | MR    | Valid       | Valid           | Move r32 to r/m32.                                             |
| REX.W + 89 / r    | MOV r/m64,r64            | MR    | Valid       | N.E.            | Move r64 to r/m64.                                             |
| 8A / r            | MOV r8,r/m8              | RM    | Valid       | Valid           | Move r/m8 to r8.                                               |
| REX + 8A / r      | MOV r8***,r/m8***        | RM    | Valid       | N.E.            | Move r/m8 to r8.                                               |
| 8B / r            | MOV r16,r/m16            | RM    | Valid       | Valid           | Move r/m16 to r16.                                             |
| 8B / r            | MOV r32,r/m32            | RM    | Valid       | Valid           | Move r/m32 to r32.                                             |
| REX.W + 8B / r    | MOV r64,r/m64            | RM    | Valid       | N.E.            | Move r/m64 to r64.                                             |
| 8C / r            | MOV r/m16,Sreg **        | MR    | Valid       | Valid           | Move segment register to r/m16.                                |
| REX.W + 8C / r    | MOV r16/r32/m16, Sreg ** | MR    | Valid       | Valid           | Move zero extended 16-bit segment register to r16/r32/r64/m16. |
| REX.W + 8C / r    | MOV r64/m16, Sreg **     | MR    | Valid       | Valid           | Move zero extended 16-bit segment register to r64/m16.         |
| 8E / r            | MOV Sreg,r/m16 **        | RM    | Valid       | Valid           | Move r/m16 to segment register.                                |
| REX.W + 8E / r    | MOV Sreg,r/m64 **        | RM    | Valid       | Valid           | Move lower 16 bits of r/m64 to segment register.               |
| A0                | MOV AL, moffs8 *         | FD    | Valid       | Valid           | Move byte at ( seg:offset ) to AL.                             |
| REX.W + A0        | MOV AL, moffs8 *         | FD    | Valid       | N.E.            | Move byte at ( offset ) to AL.                                 |
| A1                | MOV AX, moffs16 *        | FD    | Valid       | Valid           | Move word at ( seg:offset ) to AX.                             |
| A1                | MOV EAX, moffs32 *       | FD    | Valid       | Valid           | Move doubleword at ( seg:offset ) to EAX.                      |
| REX.W + A1        | MOV RAX, moffs64 *       | FD    | Valid       | N.E.            | Move quadword at ( offset ) to RAX.                            |
| A2                | MOV moffs8 ,AL           | TD    | Valid       | Valid           | Move AL to ( seg:offset ).                                     |
| REX.W + A2        | MOV moffs8 *** ,AL       | TD    | Valid       | N.E.            | Move AL to ( offset ).                                         |
| A3                | MOV moffs16 *,AX         | TD    | Valid       | Valid           | Move AX to ( seg:offset ).                                     |
| A3                | MOV moffs32 *,EAX        | TD    | Valid       | Valid           | Move EAX to ( seg:offset ).                                    |
| REX.W + A3        | MOV moffs64 *,RAX        | TD    | Valid       | N.E.            | Move RAX to ( offset ).                                        |
| B0+ rb ib         | MOV r8, imm8             | OI    | Valid       | Valid           | Move imm8 to r8.                                               |
| REX + B0+ rb ib   | MOV r8 *** , imm8        | OI    | Valid       | N.E.            | Move imm8 to r8.                                               |
| B8+ rw iw         | MOV r16, imm16           | OI    | Valid       | Valid           | Move imm16 to r16.                                             |
| B8+ rd id         | MOV r32, imm32           | OI    | Valid       | Valid           | Move imm32 to r32.                                             |
| REX.W + B8+ rd io | MOV r64, imm64           | OI    | Valid       | N.E.            | Move imm64 to r64.                                             |
| C6 / 0 ib         | MOV r/m8, imm8           | MI    | Valid       | Valid           | Move imm8 to r/m8.                                             |
| REX + C6 / 0 ib   | MOV r/m8***, imm8        | MI    | Valid       | N.E.            | Move imm8 to r/m8.                                             |
| C7 / 0 iw         | MOV r/m16, imm16         | MI    | Valid       | Valid           | Move imm16 to r/m16.                                           |
| C7 / 0 id         | MOV r/m32, imm32         | MI    | Valid       | Valid           | Move imm32 to r/m32.                                           |
| REX.W + C7 / 0 id | MOV r/m64, imm32         | MI    | Valid       | N.E.            | Move imm32 sign extended to 64-bits to r/m64.                  |


| Expression           | Instruction             | M16      | M32      | M64      | CpuId      | Id                                                
| 0F 20 /r             | MOV r32, cr             | Y        | Y        | N        | 386+       | Mov_r32_cr                                        
| 0F 20 /r             | MOV r64, cr             | N        | N        | Y        | X64        | Mov_r64_cr                                        
| 0F 21 /r             | MOV r32, dr             | Y        | Y        | N        | 386+       | Mov_r32_dr                                        
| 0F 21 /r             | MOV r64, dr             | N        | N        | Y        | X64        | Mov_r64_dr                                        
| 0F 22 /r             | MOV cr, r32             | Y        | Y        | N        | 386+       | Mov_cr_r32                                        
| 0F 22 /r             | MOV cr, r64             | N        | N        | Y        | X64        | Mov_cr_r64                                        
| 0F 23 /r             | MOV dr, r32             | Y        | Y        | N        | 386+       | Mov_dr_r32                                        
| 0F 23 /r             | MOV dr, r64             | N        | N        | Y        | X64        | Mov_dr_r64                                        
| 0F 24 /r             | MOV r32, tr             | Y        | Y        | N        | 386/486    | Mov_r32_tr                                        
| 0F 26 /r             | MOV tr, r32             | Y        | Y        | N        | 386/486    | Mov_tr_r32                                        
| 88 /r                | MOV r/m8, r8            | Y        | Y        | Y        | 8086+      | Mov_rm8_r8                                        
| 89 /r                | MOV r/m16, r16          | Y        | Y        | Y        | 8086+      | Mov_rm16_r16                                      
| 89 /r                | MOV r/m32, r32          | Y        | Y        | Y        | 386+       | Mov_rm32_r32                                      
| REX.W 89 /r          | MOV r/m64, r64          | N        | N        | Y        | X64        | Mov_rm64_r64                                      
| 8A /r                | MOV r8, r/m8            | Y        | Y        | Y        | 8086+      | Mov_r8_rm8                                        
| 8B /r                | MOV r16, r/m16          | Y        | Y        | Y        | 8086+      | Mov_r16_rm16                                      
| 8B /r                | MOV r32, r/m32          | Y        | Y        | Y        | 386+       | Mov_r32_rm32                                      
| REX.W 8B /r          | MOV r64, r/m64          | N        | N        | Y        | X64        | Mov_r64_rm64                                      
| 8C /r                | MOV r/m16, Sreg         | Y        | Y        | Y        | 8086+      | Mov_rm16_Sreg                                     
| 8C /r                | MOV r32/m16, Sreg       | Y        | Y        | Y        | 386+       | Mov_r32m16_Sreg                                   
| REX.W 8C /r          | MOV r64/m16, Sreg       | N        | N        | Y        | X64        | Mov_r64m16_Sreg                                   
| 8E /r                | MOV Sreg, r/m16         | Y        | Y        | Y        | 8086+      | Mov_Sreg_rm16                                     
| 8E /r                | MOV Sreg, r32/m16       | Y        | Y        | Y        | 386+       | Mov_Sreg_r32m16                                   
| REX.W 8E /r          | MOV Sreg, r64/m16       | N        | N        | Y        | X64        | Mov_Sreg_r64m16                                   
| A0 mo                | MOV AL, moffs8          | Y        | Y        | Y        | 8086+      | Mov_AL_moffs8                                     
| A1 mo                | MOV AX, moffs16         | Y        | Y        | Y        | 8086+      | Mov_AX_moffs16                                    
| A1 mo                | MOV EAX, moffs32        | Y        | Y        | Y        | 386+       | Mov_EAX_moffs32                                   
| REX.W A1 mo          | MOV RAX, moffs64        | N        | N        | Y        | X64        | Mov_RAX_moffs64                                   
| A2 mo                | MOV moffs8, AL          | Y        | Y        | Y        | 8086+      | Mov_moffs8_AL                                     
| A3 mo                | MOV moffs16, AX         | Y        | Y        | Y        | 8086+      | Mov_moffs16_AX                                    
| A3 mo                | MOV moffs32, EAX        | Y        | Y        | Y        | 386+       | Mov_moffs32_EAX                                   
| REX.W A3 mo          | MOV moffs64, RAX        | N        | N        | Y        | X64        | Mov_moffs64_RAX                                   
| B0+rb ib             | MOV r8, imm8            | Y        | Y        | Y        | 8086+      | Mov_r8_imm8                                       
| B8+rd id             | MOV r32, imm32          | Y        | Y        | Y        | 386+       | Mov_r32_imm32                                     
| REX.W B8+ro io       | MOV r64, imm64          | N        | N        | Y        | X64        | Mov_r64_imm64                                     
| B8+rw iw             | MOV r16, imm16          | Y        | Y        | Y        | 8086+      | Mov_r16_imm16                                     
| C6 /0 ib             | MOV r/m8, imm8          | Y        | Y        | Y        | 8086+      | Mov_rm8_imm8                                      
| C7 /0 id             | MOV r/m32, imm32        | Y        | Y        | Y        | 386+       | Mov_rm32_imm32                                    
| REX.W C7 /0 id       | MOV r/m64, imm32        | N        | N        | Y        | X64        | Mov_rm64_imm32                                    
| C7 /0 iw             | MOV r/m16, imm16        | Y        | Y        | Y        | 8086+      | Mov_rm16_imm16                                    
