# Glossary
------------------------------------------------------------------------------------------------------------------------------------------------------------
| Term                           | Meaning                                                                                                                 |
| Flat memory model              | Memory appears to a program as a single continuous address space (Figure 3-3).                                          |
|                                | This space is called a linear address space. Code, data, and stacks are all                                             |
|                                | contained in this address space. Linear address space is byte addressable,                                              |
|                                | with addresses running contiguously from 0 to 2 32 - 1 (if not in 64-bit mode).                                         |
|                                | An address for any byte in linear address space is called a linear address.                                             |
| Segmented memory model         | Memory appears to a program as a group of independent address spaces called                                             |
|                                | segments. Code, data, and stacks are typically contained in separate segments.                                          |
|                                | To address a byte in a segment, a program issues a logical address. This consists                                       |
|                                | of a segment selector and an offset (logical addresses are often referred to as far pointers).                          |
|                                | The segment selector identifies the segment to be accessed and the offset identifies a byte in                          |
|                                | the address space of the segment. Programs running on an IA-32 processor can address up to 16,383                       |
|                                | segments of different sizes and types, and each segment can be as large as 2 32 bytes. Internally,                      |
|                                | all the segments that are defined for a system are mapped into the processor’s linear address space.                    |
|                                | To access a memory location, the processor thus translates each logical address into a linear address.                  |
|                                | This translation is transparent to the application program. The primary reason for using segmented memory               |
|                                | is to increase the reliability of programs and systems. For example, placing a program’s stack in a separate            |
|                                | segment prevents the stack from growing into the code or data space and overwriting instructions or data, respectively. |
| Real-address mode memory model | This is the memory model for the Intel 8086 processor. It is supported to provide compatibility with existing programs  |
|                                | written to run on the Intel 8086 processor. The real- address mode uses a specific implementation of                    |
|                                | segmented memory in which the linear address space for the program and the operating system/executive consists          |
|                                | of an array of segments of up to 64 KBytes in size each. The maximum size of the linear address space                   |
|                                | in real-address mode is 2 20 bytes.                                                                                     |
| Protected Mode                 | When in protected mode, the processor can use flat, segmented or real-address memory models. The real-addressing mode   |
|                                | memory model is ordinarily used only when the processor is in the virtual-8086 mode.) The memory model used depends on  |
|                                | the design of the operating system or executive. When multitasking is implemented, individual tasks can use different   |
|                                | memory models                                                                                                           |
| Real Address Mode              | When in real-address mode, the processor only supports the real-address mode memory model.                              |
| System management mode         | When in SMM, the processor switches to a separate address space, called the system management RAM (SMRAM). The memory   |
|                                | model used to address bytes in this address space is similar to the real-address mode model. See Chapter 34,            |
|                                | “System Management Mode,” in the Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 3C, for more     |
|                                | information on the memory model used in SMM.                                                                            |
| Compatibility mode             | Software that needs to run in compatibility mode should observe the same memory model as those targeted to run in       |
|                                | 32-bit protected mode. The effect of segmentation is the same as it is in 32-bit protected mode semantics.              |
| 64-bit mode                    | Segmentation is generally (but not completely) disabled, creating a flat 64-bit linear-address space. Specifically, the |
|                                | processor treats the segment base of CS, DS, ES, and SS as zero in 64-bit mode (this makes a linear address equal an    |
|                                | effective address). Segmented and real address modes are not available in 64-bit mode.                                  |