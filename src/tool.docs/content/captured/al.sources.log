
file [, target ]
------------------------------------------
Copies the contents of file (a module) to the file name specified by target. After copying, Al.exe compiles target into an assembly. 

/embed[resource]: file [, name [, private ]]
------------------------------------------
Embeds the resource specified by file in the image that contains the assembly manifest; Al.exe copies the contents of file into the portable executable (PE) image. The name parameter is an internal identifier for the resource. By default, resources are public in the assembly (visible to other assemblies). Specifying private makes the resource not visible to other assemblies. If file is a .NET Framework resource file created, for example, by the Resource File Generator ( Resgen.exe ) or in the development environment, it can be accessed with members in the System.Resources . For more information, see ResourceManager . For all other resources, use the GetManifestResource* methods in the Assembly to access the resource at run time. If only resource files are passed to Al.exe , the output file is a satellite resource assembly. 

/link[resource]: file [, name [, target [, private ]]]
------------------------------------------
Links a resource file to an assembly. The resource specified by file becomes part of the assembly; the file is not copied. The file parameter can be in any file format. For example, you can specify a native DLL as the file parameter. This will make the native DLL part of the assembly so that it can be installed into the global assembly cache and accessed from managed code in the assembly. You can also do this by using the /linkresource compiler option. For more information, see -linkresource (C# Compiler Options) . The name parameter is an internal identifier for the resource. The target parameter specifies a path and file name into which Al.exe copies the file . After copying, Al.exe compiles target into an assembly. By default, resources are public in the assembly (visible to other assemblies). Specifying private makes the resource not visible to other assemblies. If file is a .NET Framework resource file created, for example, by the Resource File Generator ( Resgen.exe ) or in the development environment, it can be accessed with members in the System.Resources namespace. For more information, see ResourceManager . For all other resources, use the GetManifestResource* methods in the Assembly class to access the resource at run time. If only resource files are passed to Al.exe , the output file is a satellite resource assembly. 
