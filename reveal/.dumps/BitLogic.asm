; 2019-10-14 04:37:04:157
; function: Bit identity(Bit a)
; location: [7FFDD0EAC500h, 7FFDD0EAC508h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> identityBytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit not(Bit a)
; location: [7FFDD0EAC520h, 7FFDD0EAC530h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> notBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit xor1(Bit a)
; location: [7FFDD0EAC550h, 7FFDD0EAC558h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xor1Bytes => new byte[9]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit and(Bit a, Bit b)
; location: [7FFDD0EAC570h, 7FFDD0EAC583h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit nand(Bit a, Bit b)
; location: [7FFDD0EAC5A0h, 7FFDD0EAC5B3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nandBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit or(Bit a, Bit b)
; location: [7FFDD0EAC5D0h, 7FFDD0EAC5E3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit nor(Bit a, Bit b)
; location: [7FFDD0EAC600h, 7FFDD0EAC613h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> norBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit xor(Bit a, Bit b)
; location: [7FFDD0EAC630h, 7FFDD0EAC643h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit xnor(Bit a, Bit b)
; location: [7FFDD0EAC660h, 7FFDD0EAC673h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xnorBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit andnot(Bit a, Bit b)
; location: [7FFDD0EAC690h, 7FFDD0EAC6A2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000ah sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andnotBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x84,0xD2,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit select(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC6C0h, 7FFDD0EAC6DAh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h jne short 0013h               ; JNE(Jne_rel8_64) [13h:jmp64]                         encoding(2 bytes) = 75 0a
0009h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000dh movsx rax,dl                  ; MOVSX(Movsx_r64_rm8) [RAX,DL]                        encoding(4 bytes) = 48 0f be c2
0011h jmp short 001ah               ; JMP(Jmp_rel8_64) [1Ah:jmp64]                         encoding(2 bytes) = eb 07
0013h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0016h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
001ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> selectBytes => new byte[27]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x75,0x0A,0x41,0x0F,0xB6,0xD0,0x48,0x0F,0xBE,0xC2,0xEB,0x07,0x0F,0xB6,0xC2,0x48,0x0F,0xBE,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f01(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC6F0h, 7FFDD0EAC71Ch]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0022h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f01Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC1,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f02(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC740h, 7FFDD0EAC76Ch]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0016h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0022h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f02Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC2,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x41,0x0F,0xB6,0xC0,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f03(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC790h, 7FFDD0EAC7A8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+18h],r8d             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(5 bytes) = 44 89 44 24 18
000ah movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
000dh movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0010h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0012h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f03Bytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x44,0x89,0x44,0x24,0x18,0x0F,0xB6,0xC2,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f04(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC7C0h, 7FFDD0EAC7ECh]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch or eax,ecx                    ; OR(Or_r32_rm32) [EAX,ECX]                            encoding(2 bytes) = 0b c1
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0022h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f04Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x0B,0xC1,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC2,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f05(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC810h, 7FFDD0EAC828h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+10h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 10
0009h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
000dh movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0010h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0012h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f05Bytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x54,0x24,0x10,0x41,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f06(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC840h, 7FFDD0EAC881h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0014h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0017h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
001bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0027h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0041h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f06Bytes => new byte[66]{0x48,0x83,0xEC,0x18,0x90,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f07(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC8A0h, 7FFDD0EAC8CCh]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0022h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f07Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC1,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f08(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC8F0h, 7FFDD0EAC931h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0014h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
0018h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001bh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
001eh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0026h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
002ah mov eax,[rsp+8]               ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 08
002eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0031h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0041h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f08Bytes => new byte[66]{0x48,0x83,0xEC,0x18,0x90,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x08,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f09(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC950h, 7FFDD0EAC97Ch]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0022h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f09Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC1,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f0a(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC9A0h, 7FFDD0EAC9CDh]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov [rsp+18h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 18
0009h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
000bh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
001bh mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001eh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0021h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0023h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0026h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0029h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0aBytes => new byte[46]{0x50,0x0F,0x1F,0x40,0x00,0x89,0x54,0x24,0x18,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x41,0x0F,0xB6,0xC0,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f0b(Bit a, Bit b, Bit c)
; location: [7FFDD0EAC9F0h, 7FFDD0EACA50h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+20h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 20
0014h mov byte ptr [rsp+18h],1      ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(5 bytes) = c6 44 24 18 01
0019h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
001ch mov edx,[rsp+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 18
0020h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0023h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002bh mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
002fh mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
0033h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0036h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
003ah or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
003ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0042h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0046h mov eax,[rsp+20h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 20
004ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
004dh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0051h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0054h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0056h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0059h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
005ch add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0060h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0bBytes => new byte[97]{0x48,0x83,0xEC,0x28,0x90,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x20,0xC6,0x44,0x24,0x18,0x01,0x0F,0xB6,0xC2,0x8B,0x54,0x24,0x18,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x20,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f0c(Bit a, Bit b, Bit c)
; location: [7FFDD0EACA70h, 7FFDD0EACA9Dh]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h mov [rsp+20h],r8d             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(5 bytes) = 44 89 44 24 20
000ah test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
000ch sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0018h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
001bh mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001eh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0021h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0023h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0026h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0029h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0cBytes => new byte[46]{0x50,0x0F,0x1F,0x40,0x00,0x44,0x89,0x44,0x24,0x20,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC2,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f0d(Bit a, Bit b, Bit c)
; location: [7FFDD0EACAC0h, 7FFDD0EACB20h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+20h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 20
0014h mov byte ptr [rsp+18h],1      ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(5 bytes) = c6 44 24 18 01
0019h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
001dh mov ecx,[rsp+18h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 18
0021h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0024h xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
0026h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0029h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002ch mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0030h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0033h mov edx,[rsp+10h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 10
0037h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
003ah or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
003ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0042h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0046h mov eax,[rsp+20h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 20
004ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
004dh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0051h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0054h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0056h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0059h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
005ch add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0060h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0dBytes => new byte[97]{0x48,0x83,0xEC,0x28,0x90,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x20,0xC6,0x44,0x24,0x18,0x01,0x41,0x0F,0xB6,0xC0,0x8B,0x4C,0x24,0x18,0x0F,0xB6,0xC9,0x33,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x0F,0xB6,0xC2,0x8B,0x54,0x24,0x10,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x20,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f0e(Bit a, Bit b, Bit c)
; location: [7FFDD0EACB40h, 7FFDD0EACB81h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0014h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0017h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
001bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0027h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0041h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0eBytes => new byte[66]{0x48,0x83,0xEC,0x18,0x90,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f0f(Bit a, Bit b, Bit c)
; location: [7FFDD0EACBA0h, 7FFDD0EACBB9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+10h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 10
0009h mov [rsp+18h],r8d             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(5 bytes) = 44 89 44 24 18
000eh test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0010h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0013h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0fBytes => new byte[26]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x54,0x24,0x10,0x44,0x89,0x44,0x24,0x18,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f10(Bit a, Bit b, Bit c)
; location: [7FFDD0EACBD0h, 7FFDD0EACBFCh]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0022h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f10Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC1,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f11(Bit a, Bit b, Bit c)
; location: [7FFDD0EACC20h, 7FFDD0EACC38h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0012h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0015h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f11Bytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x41,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f12(Bit a, Bit b, Bit c)
; location: [7FFDD0EACC50h, 7FFDD0EACC91h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0014h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0017h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
001bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0027h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0041h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f12Bytes => new byte[66]{0x48,0x83,0xEC,0x18,0x90,0x84,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f13(Bit a, Bit b, Bit c)
; location: [7FFDD0EACCB0h, 7FFDD0EACCDCh]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch and eax,ecx                   ; AND(And_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 23 c1
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0022h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f13Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x23,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC2,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f14(Bit a, Bit b, Bit c)
; location: [7FFDD0EACD00h, 7FFDD0EACD41h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0008h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0015h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0018h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
001bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0027h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0041h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f14Bytes => new byte[66]{0x48,0x83,0xEC,0x18,0x90,0x45,0x84,0xC0,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f15(Bit a, Bit b, Bit c)
; location: [7FFDD0EACD60h, 7FFDD0EACD8Ch]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0016h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0022h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f15Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x41,0x0F,0xB6,0xC0,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f16(Bit a, Bit b, Bit c)
; location: [7FFDD0EACDB0h, 7FFDD0EACDFDh]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000fh or r8d,edx                    ; OR(Or_r32_rm32) [R8D,EDX]                            encoding(3 bytes) = 44 0b c2
0012h sete r8b                      ; SETE(Sete_rm8) [R8L]                                 encoding(4 bytes) = 41 0f 94 c0
0016h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
001ah mov [rsp+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(5 bytes) = 44 88 44 24 10
001fh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0021h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0024h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0027h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
002bh movzx eax,byte ptr [rsp+10h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 10
0030h movzx edx,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 54 24 08
0035h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0037h jne short 0042h               ; JNE(Jne_rel8_64) [42h:jmp64]                         encoding(2 bytes) = 75 09
0039h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
003ch movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0040h jmp short 0049h               ; JMP(Jmp_rel8_64) [49h:jmp64]                         encoding(2 bytes) = eb 07
0042h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0045h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0049h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
004dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f16Bytes => new byte[78]{0x48,0x83,0xEC,0x18,0x90,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x44,0x8B,0xC0,0x44,0x0B,0xC2,0x41,0x0F,0x94,0xC0,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x44,0x24,0x10,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x0F,0xB6,0x44,0x24,0x10,0x0F,0xB6,0x54,0x24,0x08,0x84,0xC9,0x75,0x09,0x0F,0xB6,0xC2,0x48,0x0F,0xBE,0xC0,0xEB,0x07,0x0F,0xB6,0xC0,0x48,0x0F,0xBE,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f17(Bit a, Bit b, Bit c)
; location: [7FFDD0EACE20h, 7FFDD0EACE7Dh]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000fh or r8d,edx                    ; OR(Or_r32_rm32) [R8D,EDX]                            encoding(3 bytes) = 44 0b c2
0012h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0016h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
001ah mov [rsp+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(5 bytes) = 44 88 44 24 10
001fh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0021h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0024h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0027h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
002bh movzx eax,byte ptr [rsp+10h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 10
0030h movzx edx,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 54 24 08
0035h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0037h jne short 0042h               ; JNE(Jne_rel8_64) [42h:jmp64]                         encoding(2 bytes) = 75 09
0039h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
003ch movsx rdx,al                  ; MOVSX(Movsx_r64_rm8) [RDX,AL]                        encoding(4 bytes) = 48 0f be d0
0040h jmp short 0049h               ; JMP(Jmp_rel8_64) [49h:jmp64]                         encoding(2 bytes) = eb 07
0042h movzx edx,al                  ; MOVZX(Movzx_r32_rm8) [EDX,AL]                        encoding(3 bytes) = 0f b6 d0
0045h movsx rdx,dl                  ; MOVSX(Movsx_r64_rm8) [RDX,DL]                        encoding(4 bytes) = 48 0f be d2
0049h mov [rsp],dl                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(3 bytes) = 88 14 24
004ch cmp byte ptr [rsp],0          ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(4 bytes) = 80 3c 24 00
0050h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0053h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0056h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0059h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
005dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f17Bytes => new byte[94]{0x48,0x83,0xEC,0x18,0x90,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x44,0x8B,0xC0,0x44,0x0B,0xC2,0x45,0x0F,0xB6,0xC0,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x44,0x24,0x10,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x0F,0xB6,0x44,0x24,0x10,0x0F,0xB6,0x54,0x24,0x08,0x84,0xC9,0x75,0x09,0x0F,0xB6,0xC2,0x48,0x0F,0xBE,0xD0,0xEB,0x07,0x0F,0xB6,0xD0,0x48,0x0F,0xBE,0xD2,0x88,0x14,0x24,0x80,0x3C,0x24,0x00,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f18(Bit a, Bit b, Bit c)
; location: [7FFDD0EACEA0h, 7FFDD0EACEE1h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh xor edx,eax                   ; XOR(Xor_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 33 d0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0013h mov [rsp+10h],dl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(4 bytes) = 88 54 24 10
0017h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
001bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0027h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0041h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f18Bytes => new byte[66]{0x48,0x83,0xEC,0x18,0x90,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xD0,0x0F,0xB6,0xD2,0x0F,0xB6,0xD2,0x88,0x54,0x24,0x10,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f19(Bit a, Bit b, Bit c)
; location: [7FFDD0EACF00h, 7FFDD0EACF59h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000fh xor r8d,edx                   ; XOR(Xor_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 33 c2
0012h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0016h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
001ah mov [rsp+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(5 bytes) = 44 88 44 24 10
001fh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0021h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0024h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0027h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
002bh movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0040h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
0044h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0047h mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
004ah movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
004dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
004fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0052h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0055h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0059h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f19Bytes => new byte[90]{0x48,0x83,0xEC,0x18,0x90,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x44,0x8B,0xC0,0x44,0x33,0xC2,0x45,0x0F,0xB6,0xC0,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x44,0x24,0x10,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x0F,0xB6,0xC1,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f1a(Bit a, Bit b, Bit c)
; location: [7FFDD0EACF70h, 7FFDD0EACFC1h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and edx,eax                   ; AND(And_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 23 d0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0013h mov [rsp+10h],dl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(4 bytes) = 88 54 24 10
0017h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
001bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0027h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0040h cmp byte ptr [rsp],0          ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(4 bytes) = 80 3c 24 00
0044h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0047h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
004ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
004dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1aBytes => new byte[82]{0x48,0x83,0xEC,0x18,0x90,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xD0,0x0F,0xB6,0xD2,0x0F,0xB6,0xD2,0x88,0x54,0x24,0x10,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x80,0x3C,0x24,0x00,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f1b(Bit a, Bit b, Bit c)
; location: [7FFDD0EACFE0h, 7FFDD0EAD026h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0014h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001fh mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0023h movzx eax,byte ptr [rsp+10h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 10
0028h movzx edx,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 54 24 08
002dh test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0030h jne short 003bh               ; JNE(Jne_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 75 09
0032h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0035h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0039h jmp short 0042h               ; JMP(Jmp_rel8_64) [42h:jmp64]                         encoding(2 bytes) = eb 07
003bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003eh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0042h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0046h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1bBytes => new byte[71]{0x48,0x83,0xEC,0x18,0x90,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x84,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x0F,0xB6,0x44,0x24,0x10,0x0F,0xB6,0x54,0x24,0x08,0x45,0x84,0xC0,0x75,0x09,0x0F,0xB6,0xC2,0x48,0x0F,0xBE,0xC0,0xEB,0x07,0x0F,0xB6,0xC0,0x48,0x0F,0xBE,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f1c(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD040h, 7FFDD0EAD091h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch and ecx,eax                   ; AND(And_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 23 c8
000eh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0011h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0014h mov [rsp+10h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 10
0018h cmp byte ptr [rsp+10h],0      ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(5 bytes) = 80 7c 24 10 00
001dh sete cl                       ; SETE(Sete_rm8) [CL]                                  encoding(3 bytes) = 0f 94 c1
0020h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0023h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0026h mov [rsp+8],cl                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 08
002ah movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
002dh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
002fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0032h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0035h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0038h mov eax,[rsp+8]               ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 08
003ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003fh mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
0042h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0045h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0047h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
004ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
004dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0051h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1cBytes => new byte[82]{0x48,0x83,0xEC,0x18,0x90,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x23,0xC8,0x0F,0xB6,0xC9,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x10,0x80,0x7C,0x24,0x10,0x00,0x0F,0x94,0xC1,0x0F,0xB6,0xC9,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x08,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x8B,0x44,0x24,0x08,0x0F,0xB6,0xC0,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f1d(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD0B0h, 7FFDD0EAD0F6h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0014h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0017h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
001ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0024h movzx eax,byte ptr [rsp+10h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 10
0029h movzx ecx,byte ptr [rsp+8]    ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 08
002eh test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0030h jne short 003bh               ; JNE(Jne_rel8_64) [3Bh:jmp64]                         encoding(2 bytes) = 75 09
0032h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0035h movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0039h jmp short 0042h               ; JMP(Jmp_rel8_64) [42h:jmp64]                         encoding(2 bytes) = eb 07
003bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003eh movsx rax,al                  ; MOVSX(Movsx_r64_rm8) [RAX,AL]                        encoding(4 bytes) = 48 0f be c0
0042h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0046h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1dBytes => new byte[71]{0x48,0x83,0xEC,0x18,0x90,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x45,0x84,0xC0,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x0F,0xB6,0x44,0x24,0x10,0x0F,0xB6,0x4C,0x24,0x08,0x84,0xD2,0x75,0x09,0x0F,0xB6,0xC1,0x48,0x0F,0xBE,0xC0,0xEB,0x07,0x0F,0xB6,0xC0,0x48,0x0F,0xBE,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f1e(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD110h, 7FFDD0EAD13Ch]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0022h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1eBytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC1,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f1f(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD160h, 7FFDD0EAD18Ch]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
0022h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1fBytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC1,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f20(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD1B0h, 7FFDD0EAD1DBh]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000ah sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0012h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0015h mov eax,[rsp]                 ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 04 24
0018h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001bh movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
001fh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0021h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0024h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0027h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f20Bytes => new byte[44]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC1,0x84,0xD2,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0x88,0x04,0x24,0x8B,0x04,0x24,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f21(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD1F0h, 7FFDD0EAD21Ch]
0000h push rax                      ; PUSH(Push_r64) [RAX]                                 encoding(1 byte ) = 50
0001h nop dword ptr [rax]           ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(4 bytes) = 0f 1f 40 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0017h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
001ah mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
001dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0020h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0022h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0025h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0028h add rsp,8                     ; ADD(Add_rm64_imm8) [RSP,8h:imm64]                    encoding(4 bytes) = 48 83 c4 08
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f21Bytes => new byte[45]{0x50,0x0F,0x1F,0x40,0x00,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x33,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x0F,0xB6,0xC2,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x08,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f22(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD240h, 7FFDD0EAD257h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov [rsp+8],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 08
0009h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
000dh test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000fh sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
0012h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0015h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0017h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f22Bytes => new byte[24]{0x0F,0x1F,0x44,0x00,0x00,0x89,0x4C,0x24,0x08,0x41,0x0F,0xB6,0xC0,0x84,0xD2,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f23(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD270h, 7FFDD0EAD2BAh]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0014h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0017h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
001bh mov eax,[rsp+8]               ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 08
001fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0022h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0026h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0028h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov [rsp],al                  ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(3 bytes) = 88 04 24
0031h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
0035h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0038h mov edx,[rsp]                 ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(3 bytes) = 8b 14 24
003bh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
003eh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0040h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0043h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0046h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
004ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f23Bytes => new byte[75]{0x48,0x83,0xEC,0x18,0x90,0x84,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x0F,0xB6,0xC1,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x08,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x04,0x24,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x14,0x24,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f24(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD2D0h, 7FFDD0EAD311h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h mov [rsp+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 10
0017h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
001bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
001dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0027h mov eax,[rsp+10h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 10
002bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002eh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
0032h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0035h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0037h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0041h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f24Bytes => new byte[66]{0x48,0x83,0xEC,0x18,0x90,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x10,0x41,0x0F,0xB6,0xC0,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x10,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Bit f25(Bit a, Bit b, Bit c)
; location: [7FFDD0EAD330h, 7FFDD0EAD38Eh]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and edx,eax                   ; AND(And_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 23 d0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0013h mov [rsp+20h],dl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(4 bytes) = 88 54 24 20
0017h cmp byte ptr [rsp+20h],0      ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(5 bytes) = 80 7c 24 20 00
001ch sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
001fh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0022h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0025h mov [rsp+18h],dl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(4 bytes) = 88 54 24 18
0029h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
002dh mov [rsp+10h],dl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(4 bytes) = 88 54 24 10
0031h mov edx,[rsp+10h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 10
0035h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0038h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
003ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
003dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0040h mov [rsp+8],al                ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 08
0044h mov eax,[rsp+18h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 18
0048h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
004bh mov edx,[rsp+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 08
004fh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0052h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0054h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0057h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
005ah add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
005eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f25Bytes => new byte[95]{0x48,0x83,0xEC,0x28,0x90,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xD0,0x0F,0xB6,0xD2,0x0F,0xB6,0xD2,0x88,0x54,0x24,0x20,0x80,0x7C,0x24,0x20,0x00,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x0F,0xB6,0xD2,0x88,0x54,0x24,0x18,0x41,0x0F,0xB6,0xD0,0x88,0x54,0x24,0x10,0x8B,0x54,0x24,0x10,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x08,0x8B,0x44,0x24,0x18,0x0F,0xB6,0xC0,0x8B,0x54,0x24,0x08,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xC0,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: UnaryOp<Bit> unaryop(UnaryLogic:uint id)
; location: [7FFDD0EAD3B0h, 7FFDD0EAD4A7h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0007h cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
000ah je short 005ah                ; JE(Je_rel8_64) [5Ah:jmp64]                           encoding(2 bytes) = 74 4e
000ch cmp ecx,2                     ; CMP(Cmp_rm32_imm8) [ECX,2h:imm32]                    encoding(3 bytes) = 83 f9 02
000fh jne near ptr 009fh            ; JNE(Jne_rel32_64) [9Fh:jmp64]                        encoding(6 bytes) = 0f 85 8a 00 00 00
0015h mov rcx,7FFDD0F3BAE8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bae8h:imm64]         encoding(10 bytes) = 48 b9 e8 ba f3 d0 fd 7f 00 00
001fh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F247100h:jmp64]                encoding(5 bytes) = e8 dc 70 24 5f
0024h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0027h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
002bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
002eh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F246240h:jmp64]                encoding(5 bytes) = e8 0d 62 24 5f
0033h mov rax,7FFDD04ADDB0h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04addb0h:imm64]         encoding(10 bytes) = 48 b8 b0 dd 4a d0 fd 7f 00 00
003dh mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
0041h mov rax,7FFDD0EAC500h         ; MOV(Mov_r64_imm64) [RAX,7ffdd0eac500h:imm64]         encoding(10 bytes) = 48 b8 00 c5 ea d0 fd 7f 00 00
004bh mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
004fh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0052h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0056h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0057h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0058h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0059h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005ah mov rcx,7FFDD0F3BAE8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bae8h:imm64]         encoding(10 bytes) = 48 b9 e8 ba f3 d0 fd 7f 00 00
0064h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F247100h:jmp64]                encoding(5 bytes) = e8 97 70 24 5f
0069h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
006ch lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0070h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0073h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F246240h:jmp64]                encoding(5 bytes) = e8 c8 61 24 5f
0078h mov rax,7FFDD04ADDB0h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04addb0h:imm64]         encoding(10 bytes) = 48 b8 b0 dd 4a d0 fd 7f 00 00
0082h mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
0086h mov rax,7FFDD0EAC520h         ; MOV(Mov_r64_imm64) [RAX,7ffdd0eac520h:imm64]         encoding(10 bytes) = 48 b8 20 c5 ea d0 fd 7f 00 00
0090h mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
0094h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0097h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
009bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
009ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
009dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
009eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
009fh mov esi,102h                  ; MOV(Mov_r32_imm32) [ESI,102h:imm32]                  encoding(5 bytes) = be 02 01 00 00
00a4h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
00a9h mov ecx,7F8h                  ; MOV(Mov_r32_imm32) [ECX,7f8h:imm32]                  encoding(5 bytes) = b9 f8 07 00 00
00aeh mov rdx,7FFDD07375A8h         ; MOV(Mov_r64_imm64) [RDX,7ffdd07375a8h:imm64]         encoding(10 bytes) = 48 ba a8 75 73 d0 fd 7f 00 00
00b8h call 7FFE3021F6E0h            ; CALL(Call_rel32_64) [5F372330h:jmp64]                encoding(5 bytes) = e8 73 22 37 5f
00bdh mov rbx,rax                   ; MOV(Mov_r64_rm64) [RBX,RAX]                          encoding(3 bytes) = 48 8b d8
00c0h mov ecx,7F8h                  ; MOV(Mov_r32_imm32) [ECX,7f8h:imm32]                  encoding(5 bytes) = b9 f8 07 00 00
00c5h mov rdx,7FFDD07375A8h         ; MOV(Mov_r64_imm64) [RDX,7ffdd07375a8h:imm64]         encoding(10 bytes) = 48 ba a8 75 73 d0 fd 7f 00 00
00cfh call 7FFE3021F6E0h            ; CALL(Call_rel32_64) [5F372330h:jmp64]                encoding(5 bytes) = e8 5c 22 37 5f
00d4h mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
00d7h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
00dch mov [rcx],dil                 ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DIL]           encoding(3 bytes) = 40 88 39
00dfh mov [rcx+4],esi               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),ESI]        encoding(3 bytes) = 89 71 04
00e2h mov rcx,rbx                   ; MOV(Mov_r64_rm64) [RCX,RBX]                          encoding(3 bytes) = 48 8b cb
00e5h mov r8,[rsp+28h]              ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 44 24 28
00eah call 7FFDD0EA9DF0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFCA40h:jmp64]        encoding(5 bytes) = e8 51 c9 ff ff
00efh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00f2h call 7FFE300AA4F0h            ; CALL(Call_rel32_64) [5F1FD140h:jmp64]                encoding(5 bytes) = e8 49 d0 1f 5f
00f7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> unaryopBytes => new byte[248]{0x57,0x56,0x53,0x48,0x83,0xEC,0x30,0x83,0xF9,0x01,0x74,0x4E,0x83,0xF9,0x02,0x0F,0x85,0x8A,0x00,0x00,0x00,0x48,0xB9,0xE8,0xBA,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xDC,0x70,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x0D,0x62,0x24,0x5F,0x48,0xB8,0xB0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0x00,0xC5,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5B,0x5E,0x5F,0xC3,0x48,0xB9,0xE8,0xBA,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x97,0x70,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xC8,0x61,0x24,0x5F,0x48,0xB8,0xB0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0x20,0xC5,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5B,0x5E,0x5F,0xC3,0xBE,0x02,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0xB9,0xF8,0x07,0x00,0x00,0x48,0xBA,0xA8,0x75,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x73,0x22,0x37,0x5F,0x48,0x8B,0xD8,0xB9,0xF8,0x07,0x00,0x00,0x48,0xBA,0xA8,0x75,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x5C,0x22,0x37,0x5F,0x48,0x8B,0xD0,0x48,0x8D,0x4C,0x24,0x28,0x40,0x88,0x39,0x89,0x71,0x04,0x48,0x8B,0xCB,0x4C,0x8B,0x44,0x24,0x28,0xE8,0x51,0xC9,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x49,0xD0,0x1F,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BinaryOp<Bit> binop(BinaryLogic:uint id)
; location: [7FFDD0EAD8D0h, 7FFDD0EADB23h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0007h lea esi,[rcx-1]               ; LEA(Lea_r32_m) [ESI,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 71 ff
000ah cmp esi,8                     ; CMP(Cmp_rm32_imm8) [ESI,8h:imm32]                    encoding(3 bytes) = 83 fe 08
000dh ja short 0027h                ; JA(Ja_rel8_64) [27h:jmp64]                           encoding(2 bytes) = 77 18
000fh mov ecx,esi                   ; MOV(Mov_r32_rm32) [ECX,ESI]                          encoding(2 bytes) = 8b ce
0011h lea rax,[7FFDD0EADB28h]       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 05 40 02 00 00
0018h mov eax,[rax+rcx*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 04 88
001bh lea rdx,[7FFDD0EAD8D7h]       ; LEA(Lea_r64_m) [RDX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 15 e5 ff ff ff
0022h add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0025h jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(2 bytes) = ff e0
0027h cmp ecx,0Eh                   ; CMP(Cmp_rm32_imm8) [ECX,eh:imm32]                    encoding(3 bytes) = 83 f9 0e
002ah jne near ptr 01fbh            ; JNE(Jne_rel32_64) [1FBh:jmp64]                       encoding(6 bytes) = 0f 85 cb 01 00 00
0030h mov rcx,7FFDD0F3BFF8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bff8h:imm64]         encoding(10 bytes) = 48 b9 f8 bf f3 d0 fd 7f 00 00
003ah call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F246BE0h:jmp64]                encoding(5 bytes) = e8 a1 6b 24 5f
003fh mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0042h lea rcx,[rdi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RDI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4f 08
0046h mov rdx,rdi                   ; MOV(Mov_r64_rm64) [RDX,RDI]                          encoding(3 bytes) = 48 8b d7
0049h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245D20h:jmp64]                encoding(5 bytes) = e8 d2 5c 24 5f
004eh mov rax,7FFDD04ADDE0h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04adde0h:imm64]         encoding(10 bytes) = 48 b8 e0 dd 4a d0 fd 7f 00 00
0058h mov [rdi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 47 18
005ch mov rax,7FFDD0EAC5D0h         ; MOV(Mov_r64_imm64) [RAX,7ffdd0eac5d0h:imm64]         encoding(10 bytes) = 48 b8 d0 c5 ea d0 fd 7f 00 00
0066h mov [rdi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 47 20
006ah mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
006dh jmp near ptr 01f3h            ; JMP(Jmp_rel32_64) [1F3h:jmp64]                       encoding(5 bytes) = e9 81 01 00 00
0072h mov rcx,7FFDD0F3BFF8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bff8h:imm64]         encoding(10 bytes) = 48 b9 f8 bf f3 d0 fd 7f 00 00
007ch call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F246BE0h:jmp64]                encoding(5 bytes) = e8 5f 6b 24 5f
0081h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0084h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0088h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
008bh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245D20h:jmp64]                encoding(5 bytes) = e8 90 5c 24 5f
0090h mov rcx,7FFDD04ADDE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04adde0h:imm64]         encoding(10 bytes) = 48 b9 e0 dd 4a d0 fd 7f 00 00
009ah mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
009eh mov rcx,7FFDD0EAC570h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac570h:imm64]         encoding(10 bytes) = 48 b9 70 c5 ea d0 fd 7f 00 00
00a8h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00ach mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00afh jmp near ptr 01f3h            ; JMP(Jmp_rel32_64) [1F3h:jmp64]                       encoding(5 bytes) = e9 3f 01 00 00
00b4h mov rcx,7FFDD0F3BFF8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bff8h:imm64]         encoding(10 bytes) = 48 b9 f8 bf f3 d0 fd 7f 00 00
00beh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F246BE0h:jmp64]                encoding(5 bytes) = e8 1d 6b 24 5f
00c3h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c6h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
00cah mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
00cdh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245D20h:jmp64]                encoding(5 bytes) = e8 4e 5c 24 5f
00d2h mov rcx,7FFDD04ADDE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04adde0h:imm64]         encoding(10 bytes) = 48 b9 e0 dd 4a d0 fd 7f 00 00
00dch mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
00e0h mov rcx,7FFDD0EAC5A0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac5a0h:imm64]         encoding(10 bytes) = 48 b9 a0 c5 ea d0 fd 7f 00 00
00eah mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00eeh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00f1h jmp near ptr 01f3h            ; JMP(Jmp_rel32_64) [1F3h:jmp64]                       encoding(5 bytes) = e9 fd 00 00 00
00f6h mov rcx,7FFDD0F3BFF8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bff8h:imm64]         encoding(10 bytes) = 48 b9 f8 bf f3 d0 fd 7f 00 00
0100h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F246BE0h:jmp64]                encoding(5 bytes) = e8 db 6a 24 5f
0105h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0108h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
010ch mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
010fh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245D20h:jmp64]                encoding(5 bytes) = e8 0c 5c 24 5f
0114h mov rcx,7FFDD04ADDE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04adde0h:imm64]         encoding(10 bytes) = 48 b9 e0 dd 4a d0 fd 7f 00 00
011eh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0122h mov rcx,7FFDD0EAC600h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac600h:imm64]         encoding(10 bytes) = 48 b9 00 c6 ea d0 fd 7f 00 00
012ch mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0130h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0133h jmp near ptr 01f3h            ; JMP(Jmp_rel32_64) [1F3h:jmp64]                       encoding(5 bytes) = e9 bb 00 00 00
0138h mov rcx,7FFDD0F3BFF8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bff8h:imm64]         encoding(10 bytes) = 48 b9 f8 bf f3 d0 fd 7f 00 00
0142h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F246BE0h:jmp64]                encoding(5 bytes) = e8 99 6a 24 5f
0147h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
014ah lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
014eh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0151h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245D20h:jmp64]                encoding(5 bytes) = e8 ca 5b 24 5f
0156h mov rcx,7FFDD04ADDE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04adde0h:imm64]         encoding(10 bytes) = 48 b9 e0 dd 4a d0 fd 7f 00 00
0160h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0164h mov rcx,7FFDD0EAC630h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac630h:imm64]         encoding(10 bytes) = 48 b9 30 c6 ea d0 fd 7f 00 00
016eh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0172h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0175h jmp short 01f3h               ; JMP(Jmp_rel8_64) [1F3h:jmp64]                        encoding(2 bytes) = eb 7c
0177h mov rcx,7FFDD0F3BFF8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bff8h:imm64]         encoding(10 bytes) = 48 b9 f8 bf f3 d0 fd 7f 00 00
0181h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F246BE0h:jmp64]                encoding(5 bytes) = e8 5a 6a 24 5f
0186h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0189h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
018dh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0190h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245D20h:jmp64]                encoding(5 bytes) = e8 8b 5b 24 5f
0195h mov rcx,7FFDD04ADDE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04adde0h:imm64]         encoding(10 bytes) = 48 b9 e0 dd 4a d0 fd 7f 00 00
019fh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
01a3h mov rcx,7FFDD0EAC660h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac660h:imm64]         encoding(10 bytes) = 48 b9 60 c6 ea d0 fd 7f 00 00
01adh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
01b1h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01b4h jmp short 01f3h               ; JMP(Jmp_rel8_64) [1F3h:jmp64]                        encoding(2 bytes) = eb 3d
01b6h mov rcx,7FFDD0F3BFF8h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3bff8h:imm64]         encoding(10 bytes) = 48 b9 f8 bf f3 d0 fd 7f 00 00
01c0h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F246BE0h:jmp64]                encoding(5 bytes) = e8 1b 6a 24 5f
01c5h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
01c8h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
01cch mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
01cfh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245D20h:jmp64]                encoding(5 bytes) = e8 4c 5b 24 5f
01d4h mov rcx,7FFDD04ADDE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04adde0h:imm64]         encoding(10 bytes) = 48 b9 e0 dd 4a d0 fd 7f 00 00
01deh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
01e2h mov rcx,7FFDD0EAC690h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac690h:imm64]         encoding(10 bytes) = 48 b9 90 c6 ea d0 fd 7f 00 00
01ech mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
01f0h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01f3h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
01f7h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
01f8h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
01f9h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
01fah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
01fbh mov esi,112h                  ; MOV(Mov_r32_imm32) [ESI,112h:imm32]                  encoding(5 bytes) = be 12 01 00 00
0200h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
0205h mov ecx,7F8h                  ; MOV(Mov_r32_imm32) [ECX,7f8h:imm32]                  encoding(5 bytes) = b9 f8 07 00 00
020ah mov rdx,7FFDD07375A8h         ; MOV(Mov_r64_imm64) [RDX,7ffdd07375a8h:imm64]         encoding(10 bytes) = 48 ba a8 75 73 d0 fd 7f 00 00
0214h call 7FFE3021F6E0h            ; CALL(Call_rel32_64) [5F371E10h:jmp64]                encoding(5 bytes) = e8 f7 1b 37 5f
0219h mov rbx,rax                   ; MOV(Mov_r64_rm64) [RBX,RAX]                          encoding(3 bytes) = 48 8b d8
021ch mov ecx,7F8h                  ; MOV(Mov_r32_imm32) [ECX,7f8h:imm32]                  encoding(5 bytes) = b9 f8 07 00 00
0221h mov rdx,7FFDD07375A8h         ; MOV(Mov_r64_imm64) [RDX,7ffdd07375a8h:imm64]         encoding(10 bytes) = 48 ba a8 75 73 d0 fd 7f 00 00
022bh call 7FFE3021F6E0h            ; CALL(Call_rel32_64) [5F371E10h:jmp64]                encoding(5 bytes) = e8 e0 1b 37 5f
0230h mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
0233h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0238h mov [rcx],dil                 ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DIL]           encoding(3 bytes) = 40 88 39
023bh mov [rcx+4],esi               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),ESI]        encoding(3 bytes) = 89 71 04
023eh mov rcx,rbx                   ; MOV(Mov_r64_rm64) [RCX,RBX]                          encoding(3 bytes) = 48 8b cb
0241h mov r8,[rsp+28h]              ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 44 24 28
0246h call 7FFDD0EA9DF0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFC520h:jmp64]        encoding(5 bytes) = e8 d5 c2 ff ff
024bh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
024eh call 7FFE300AA4F0h            ; CALL(Call_rel32_64) [5F1FCC20h:jmp64]                encoding(5 bytes) = e8 cd c9 1f 5f
0253h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> binopBytes => new byte[596]{0x57,0x56,0x53,0x48,0x83,0xEC,0x30,0x8D,0x71,0xFF,0x83,0xFE,0x08,0x77,0x18,0x8B,0xCE,0x48,0x8D,0x05,0x40,0x02,0x00,0x00,0x8B,0x04,0x88,0x48,0x8D,0x15,0xE5,0xFF,0xFF,0xFF,0x48,0x03,0xC2,0xFF,0xE0,0x83,0xF9,0x0E,0x0F,0x85,0xCB,0x01,0x00,0x00,0x48,0xB9,0xF8,0xBF,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xA1,0x6B,0x24,0x5F,0x48,0x8B,0xF8,0x48,0x8D,0x4F,0x08,0x48,0x8B,0xD7,0xE8,0xD2,0x5C,0x24,0x5F,0x48,0xB8,0xE0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x47,0x18,0x48,0xB8,0xD0,0xC5,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x47,0x20,0x48,0x8B,0xC7,0xE9,0x81,0x01,0x00,0x00,0x48,0xB9,0xF8,0xBF,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x5F,0x6B,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x90,0x5C,0x24,0x5F,0x48,0xB9,0xE0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x70,0xC5,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x3F,0x01,0x00,0x00,0x48,0xB9,0xF8,0xBF,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x1D,0x6B,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x4E,0x5C,0x24,0x5F,0x48,0xB9,0xE0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0xC5,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xFD,0x00,0x00,0x00,0x48,0xB9,0xF8,0xBF,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xDB,0x6A,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x0C,0x5C,0x24,0x5F,0x48,0xB9,0xE0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x00,0xC6,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xBB,0x00,0x00,0x00,0x48,0xB9,0xF8,0xBF,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x99,0x6A,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xCA,0x5B,0x24,0x5F,0x48,0xB9,0xE0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x30,0xC6,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xEB,0x7C,0x48,0xB9,0xF8,0xBF,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x5A,0x6A,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x8B,0x5B,0x24,0x5F,0x48,0xB9,0xE0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x60,0xC6,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xEB,0x3D,0x48,0xB9,0xF8,0xBF,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x1B,0x6A,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x4C,0x5B,0x24,0x5F,0x48,0xB9,0xE0,0xDD,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x90,0xC6,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5B,0x5E,0x5F,0xC3,0xBE,0x12,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0xB9,0xF8,0x07,0x00,0x00,0x48,0xBA,0xA8,0x75,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xF7,0x1B,0x37,0x5F,0x48,0x8B,0xD8,0xB9,0xF8,0x07,0x00,0x00,0x48,0xBA,0xA8,0x75,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xE0,0x1B,0x37,0x5F,0x48,0x8B,0xD0,0x48,0x8D,0x4C,0x24,0x28,0x40,0x88,0x39,0x89,0x71,0x04,0x48,0x8B,0xCB,0x4C,0x8B,0x44,0x24,0x28,0xE8,0xD5,0xC2,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xCD,0xC9,0x1F,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: IEnumerable<TernaryLogic:byte> get_ternops()
; location: [7FFDD0EADB70h, 7FFDD0EADBA6h]
0000h sub rsp,28h                   ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 ec 28
0004h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0005h xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0008h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
000ah lea rdx,[rsp+20h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 20
000fh mov [rdx],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RDX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 02
0012h mov [rdx+4],ecx               ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),ECX]        encoding(3 bytes) = 89 4a 04
0015h mov r8,[rsp+20h]              ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 44 24 20
001ah mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
001fh mov edx,0F1Bh                 ; MOV(Mov_r32_imm32) [EDX,f1bh:imm32]                  encoding(5 bytes) = ba 1b 0f 00 00
0024h call 7FFDD0EAD4F8h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF988h:jmp64]        encoding(5 bytes) = e8 5f f9 ff ff
0029h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
002ch call 7FFDD0EAD508h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF998h:jmp64]        encoding(5 bytes) = e8 67 f9 ff ff
0031h nop                           ; NOP(Nopd)                                            encoding(1 byte ) = 90
0032h add rsp,28h                   ; ADD(Add_rm64_imm8) [RSP,28h:imm64]                   encoding(4 bytes) = 48 83 c4 28
0036h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> get_ternopsBytes => new byte[55]{0x48,0x83,0xEC,0x28,0x90,0x45,0x33,0xC0,0x33,0xC9,0x48,0x8D,0x54,0x24,0x20,0x44,0x88,0x02,0x89,0x4A,0x04,0x4C,0x8B,0x44,0x24,0x20,0xB9,0x01,0x00,0x00,0x00,0xBA,0x1B,0x0F,0x00,0x00,0xE8,0x5F,0xF9,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0x67,0xF9,0xFF,0xFF,0x90,0x48,0x83,0xC4,0x28,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: TernaryOp<Bit> ternop(TernaryLogic:byte id)
; location: [7FFDD0EADBC0h, 7FFDD0EAE5B1h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000ah cmp eax,24h                   ; CMP(Cmp_rm32_imm8) [EAX,24h:imm32]                   encoding(3 bytes) = 83 f8 24
000dh ja near ptr 09afh             ; JA(Ja_rel32_64) [9AFh:jmp64]                         encoding(6 bytes) = 0f 87 9c 09 00 00
0013h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0015h lea rax,[7FFDD0EAE5B8h]       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 05 dc 09 00 00
001ch mov eax,[rax+rcx*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 04 88
001fh lea rdx,[7FFDD0EADBC5h]       ; LEA(Lea_r64_m) [RDX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 15 df ff ff ff
0026h add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0029h jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(2 bytes) = ff e0
002bh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0035h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 b6 68 24 5f
003ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
003dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0041h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0044h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 e7 59 24 5f
0049h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0053h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0057h mov rcx,7FFDD0EAC6F0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac6f0h:imm64]         encoding(10 bytes) = 48 b9 f0 c6 ea d0 fd 7f 00 00
0061h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0065h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0068h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 7f 09 00 00
006dh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0077h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 74 68 24 5f
007ch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
007fh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0083h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0086h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 a5 59 24 5f
008bh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0095h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0099h mov rcx,7FFDD0EAC740h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac740h:imm64]         encoding(10 bytes) = 48 b9 40 c7 ea d0 fd 7f 00 00
00a3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00a7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00aah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 3d 09 00 00
00afh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
00b9h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 32 68 24 5f
00beh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
00c5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
00c8h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 63 59 24 5f
00cdh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
00d7h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
00dbh mov rcx,7FFDD0EAC790h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac790h:imm64]         encoding(10 bytes) = 48 b9 90 c7 ea d0 fd 7f 00 00
00e5h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00e9h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00ech jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 fb 08 00 00
00f1h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
00fbh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 f0 67 24 5f
0100h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0103h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0107h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
010ah call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 21 59 24 5f
010fh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0119h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
011dh mov rcx,7FFDD0EAC7C0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac7c0h:imm64]         encoding(10 bytes) = 48 b9 c0 c7 ea d0 fd 7f 00 00
0127h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
012bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
012eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 b9 08 00 00
0133h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
013dh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 ae 67 24 5f
0142h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0145h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0149h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
014ch call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 df 58 24 5f
0151h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
015bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
015fh mov rcx,7FFDD0EAC810h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac810h:imm64]         encoding(10 bytes) = 48 b9 10 c8 ea d0 fd 7f 00 00
0169h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
016dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0170h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 77 08 00 00
0175h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
017fh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 6c 67 24 5f
0184h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0187h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
018bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
018eh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 9d 58 24 5f
0193h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
019dh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
01a1h mov rcx,7FFDD0EAC840h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac840h:imm64]         encoding(10 bytes) = 48 b9 40 c8 ea d0 fd 7f 00 00
01abh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
01afh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01b2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 35 08 00 00
01b7h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
01c1h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 2a 67 24 5f
01c6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
01c9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
01cdh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
01d0h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 5b 58 24 5f
01d5h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
01dfh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
01e3h mov rcx,7FFDD0EAC8A0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac8a0h:imm64]         encoding(10 bytes) = 48 b9 a0 c8 ea d0 fd 7f 00 00
01edh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
01f1h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01f4h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 f3 07 00 00
01f9h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0203h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 e8 66 24 5f
0208h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
020bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
020fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0212h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 19 58 24 5f
0217h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0221h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0225h mov rcx,7FFDD0EAC8F0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac8f0h:imm64]         encoding(10 bytes) = 48 b9 f0 c8 ea d0 fd 7f 00 00
022fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0233h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0236h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 b1 07 00 00
023bh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0245h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 a6 66 24 5f
024ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
024dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0251h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0254h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 d7 57 24 5f
0259h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0263h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0267h mov rcx,7FFDD0EAC950h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac950h:imm64]         encoding(10 bytes) = 48 b9 50 c9 ea d0 fd 7f 00 00
0271h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0275h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0278h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 6f 07 00 00
027dh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0287h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 64 66 24 5f
028ch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
028fh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0293h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0296h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 95 57 24 5f
029bh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
02a5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
02a9h mov rcx,7FFDD0EAC9A0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac9a0h:imm64]         encoding(10 bytes) = 48 b9 a0 c9 ea d0 fd 7f 00 00
02b3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
02b7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
02bah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 2d 07 00 00
02bfh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
02c9h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 22 66 24 5f
02ceh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
02d1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
02d5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
02d8h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 53 57 24 5f
02ddh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
02e7h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
02ebh mov rcx,7FFDD0EAC9F0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eac9f0h:imm64]         encoding(10 bytes) = 48 b9 f0 c9 ea d0 fd 7f 00 00
02f5h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
02f9h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
02fch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 eb 06 00 00
0301h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
030bh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 e0 65 24 5f
0310h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0313h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0317h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
031ah call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 11 57 24 5f
031fh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0329h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
032dh mov rcx,7FFDD0EACA70h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eaca70h:imm64]         encoding(10 bytes) = 48 b9 70 ca ea d0 fd 7f 00 00
0337h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
033bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
033eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 a9 06 00 00
0343h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
034dh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 9e 65 24 5f
0352h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0355h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0359h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
035ch call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 cf 56 24 5f
0361h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
036bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
036fh mov rcx,7FFDD0EACAC0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacac0h:imm64]         encoding(10 bytes) = 48 b9 c0 ca ea d0 fd 7f 00 00
0379h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
037dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0380h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 67 06 00 00
0385h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
038fh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 5c 65 24 5f
0394h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0397h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
039bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
039eh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 8d 56 24 5f
03a3h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
03adh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
03b1h mov rcx,7FFDD0EACB40h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacb40h:imm64]         encoding(10 bytes) = 48 b9 40 cb ea d0 fd 7f 00 00
03bbh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
03bfh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
03c2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 25 06 00 00
03c7h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
03d1h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 1a 65 24 5f
03d6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
03d9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
03ddh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
03e0h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 4b 56 24 5f
03e5h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
03efh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
03f3h mov rcx,7FFDD0EACBA0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacba0h:imm64]         encoding(10 bytes) = 48 b9 a0 cb ea d0 fd 7f 00 00
03fdh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0401h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0404h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 e3 05 00 00
0409h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0413h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 d8 64 24 5f
0418h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
041bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
041fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0422h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 09 56 24 5f
0427h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0431h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0435h mov rcx,7FFDD0EACBD0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacbd0h:imm64]         encoding(10 bytes) = 48 b9 d0 cb ea d0 fd 7f 00 00
043fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0443h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0446h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 a1 05 00 00
044bh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0455h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 96 64 24 5f
045ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
045dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0461h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0464h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 c7 55 24 5f
0469h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0473h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0477h mov rcx,7FFDD0EACC20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacc20h:imm64]         encoding(10 bytes) = 48 b9 20 cc ea d0 fd 7f 00 00
0481h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0485h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0488h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 5f 05 00 00
048dh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0497h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 54 64 24 5f
049ch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
049fh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
04a3h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
04a6h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 85 55 24 5f
04abh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
04b5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
04b9h mov rcx,7FFDD0EACC50h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacc50h:imm64]         encoding(10 bytes) = 48 b9 50 cc ea d0 fd 7f 00 00
04c3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
04c7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
04cah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 1d 05 00 00
04cfh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
04d9h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 12 64 24 5f
04deh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
04e1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
04e5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
04e8h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 43 55 24 5f
04edh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
04f7h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
04fbh mov rcx,7FFDD0EACCB0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eaccb0h:imm64]         encoding(10 bytes) = 48 b9 b0 cc ea d0 fd 7f 00 00
0505h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0509h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
050ch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 db 04 00 00
0511h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
051bh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 d0 63 24 5f
0520h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0523h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0527h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
052ah call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 01 55 24 5f
052fh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0539h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
053dh mov rcx,7FFDD0EACD00h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacd00h:imm64]         encoding(10 bytes) = 48 b9 00 cd ea d0 fd 7f 00 00
0547h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
054bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
054eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 99 04 00 00
0553h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
055dh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 8e 63 24 5f
0562h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0565h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0569h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
056ch call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 bf 54 24 5f
0571h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
057bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
057fh mov rcx,7FFDD0EACD60h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacd60h:imm64]         encoding(10 bytes) = 48 b9 60 cd ea d0 fd 7f 00 00
0589h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
058dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0590h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 57 04 00 00
0595h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
059fh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 4c 63 24 5f
05a4h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
05a7h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
05abh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
05aeh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 7d 54 24 5f
05b3h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
05bdh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
05c1h mov rcx,7FFDD0EACDB0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacdb0h:imm64]         encoding(10 bytes) = 48 b9 b0 cd ea d0 fd 7f 00 00
05cbh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
05cfh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
05d2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 15 04 00 00
05d7h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
05e1h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 0a 63 24 5f
05e6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
05e9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
05edh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
05f0h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 3b 54 24 5f
05f5h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
05ffh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0603h mov rcx,7FFDD0EACE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eace20h:imm64]         encoding(10 bytes) = 48 b9 20 ce ea d0 fd 7f 00 00
060dh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0611h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0614h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 d3 03 00 00
0619h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0623h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 c8 62 24 5f
0628h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
062bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
062fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0632h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 f9 53 24 5f
0637h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0641h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0645h mov rcx,7FFDD0EACEA0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacea0h:imm64]         encoding(10 bytes) = 48 b9 a0 ce ea d0 fd 7f 00 00
064fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0653h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0656h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 91 03 00 00
065bh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0665h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 86 62 24 5f
066ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
066dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0671h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0674h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 b7 53 24 5f
0679h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0683h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0687h mov rcx,7FFDD0EACF00h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacf00h:imm64]         encoding(10 bytes) = 48 b9 00 cf ea d0 fd 7f 00 00
0691h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0695h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0698h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 4f 03 00 00
069dh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
06a7h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 44 62 24 5f
06ach mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
06afh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
06b3h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
06b6h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 75 53 24 5f
06bbh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
06c5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
06c9h mov rcx,7FFDD0EACF70h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacf70h:imm64]         encoding(10 bytes) = 48 b9 70 cf ea d0 fd 7f 00 00
06d3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
06d7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
06dah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 0d 03 00 00
06dfh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
06e9h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 02 62 24 5f
06eeh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
06f1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
06f5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
06f8h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 33 53 24 5f
06fdh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0707h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
070bh mov rcx,7FFDD0EACFE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0eacfe0h:imm64]         encoding(10 bytes) = 48 b9 e0 cf ea d0 fd 7f 00 00
0715h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0719h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
071ch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 cb 02 00 00
0721h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
072bh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 c0 61 24 5f
0730h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0733h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0737h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
073ah call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 f1 52 24 5f
073fh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0749h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
074dh mov rcx,7FFDD0EAD040h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead040h:imm64]         encoding(10 bytes) = 48 b9 40 d0 ea d0 fd 7f 00 00
0757h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
075bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
075eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 89 02 00 00
0763h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
076dh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 7e 61 24 5f
0772h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0775h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0779h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
077ch call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 af 52 24 5f
0781h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
078bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
078fh mov rcx,7FFDD0EAD0B0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead0b0h:imm64]         encoding(10 bytes) = 48 b9 b0 d0 ea d0 fd 7f 00 00
0799h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
079dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
07a0h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 47 02 00 00
07a5h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
07afh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 3c 61 24 5f
07b4h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
07b7h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
07bbh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
07beh call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 6d 52 24 5f
07c3h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
07cdh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
07d1h mov rcx,7FFDD0EAD110h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead110h:imm64]         encoding(10 bytes) = 48 b9 10 d1 ea d0 fd 7f 00 00
07dbh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
07dfh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
07e2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 05 02 00 00
07e7h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
07f1h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 fa 60 24 5f
07f6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
07f9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
07fdh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0800h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 2b 52 24 5f
0805h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
080fh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0813h mov rcx,7FFDD0EAD160h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead160h:imm64]         encoding(10 bytes) = 48 b9 60 d1 ea d0 fd 7f 00 00
081dh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0821h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0824h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 c3 01 00 00
0829h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0833h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 b8 60 24 5f
0838h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
083bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
083fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0842h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 e9 51 24 5f
0847h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0851h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0855h mov rcx,7FFDD0EAD1B0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead1b0h:imm64]         encoding(10 bytes) = 48 b9 b0 d1 ea d0 fd 7f 00 00
085fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0863h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0866h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 81 01 00 00
086bh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
0875h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 76 60 24 5f
087ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
087dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0881h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0884h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 a7 51 24 5f
0889h mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0893h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0897h mov rcx,7FFDD0EAD1F0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead1f0h:imm64]         encoding(10 bytes) = 48 b9 f0 d1 ea d0 fd 7f 00 00
08a1h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
08a5h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
08a8h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 3f 01 00 00
08adh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
08b7h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 34 60 24 5f
08bch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
08bfh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
08c3h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
08c6h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 65 51 24 5f
08cbh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
08d5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
08d9h mov rcx,7FFDD0EAD240h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead240h:imm64]         encoding(10 bytes) = 48 b9 40 d2 ea d0 fd 7f 00 00
08e3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
08e7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
08eah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 fd 00 00 00
08efh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
08f9h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 f2 5f 24 5f
08feh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0901h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0905h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0908h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 23 51 24 5f
090dh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0917h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
091bh mov rcx,7FFDD0EAD270h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead270h:imm64]         encoding(10 bytes) = 48 b9 70 d2 ea d0 fd 7f 00 00
0925h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0929h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
092ch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 bb 00 00 00
0931h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
093bh call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 b0 5f 24 5f
0940h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0943h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0947h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
094ah call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 e1 50 24 5f
094fh mov rcx,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RCX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b9 20 de 4a d0 fd 7f 00 00
0959h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
095dh mov rcx,7FFDD0EAD2D0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0ead2d0h:imm64]         encoding(10 bytes) = 48 b9 d0 d2 ea d0 fd 7f 00 00
0967h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
096bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
096eh jmp short 09ech               ; JMP(Jmp_rel8_64) [9ECh:jmp64]                        encoding(2 bytes) = eb 7c
0970h mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
097ah call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 71 5f 24 5f
097fh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0982h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0986h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0989h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 a2 50 24 5f
098eh mov rax,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b8 20 de 4a d0 fd 7f 00 00
0998h mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
099ch mov rax,7FFDD0EAD330h         ; MOV(Mov_r64_imm64) [RAX,7ffdd0ead330h:imm64]         encoding(10 bytes) = 48 b8 30 d3 ea d0 fd 7f 00 00
09a6h mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
09aah mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
09adh jmp short 09ech               ; JMP(Jmp_rel8_64) [9ECh:jmp64]                        encoding(2 bytes) = eb 3d
09afh mov rcx,7FFDD0F3C788h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0f3c788h:imm64]         encoding(10 bytes) = 48 b9 88 c7 f3 d0 fd 7f 00 00
09b9h call 7FFE300F44B0h            ; CALL(Call_rel32_64) [5F2468F0h:jmp64]                encoding(5 bytes) = e8 32 5f 24 5f
09beh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
09c1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
09c5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
09c8h call 7FFE300F35F0h            ; CALL(Call_rel32_64) [5F245A30h:jmp64]                encoding(5 bytes) = e8 63 50 24 5f
09cdh mov rax,7FFDD04ADE20h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04ade20h:imm64]         encoding(10 bytes) = 48 b8 20 de 4a d0 fd 7f 00 00
09d7h mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
09dbh mov rax,7FFDD0EAC6C0h         ; MOV(Mov_r64_imm64) [RAX,7ffdd0eac6c0h:imm64]         encoding(10 bytes) = 48 b8 c0 c6 ea d0 fd 7f 00 00
09e5h mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
09e9h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
09ech add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
09f0h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
09f1h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ternopBytes => new byte[2546]{0x56,0x48,0x83,0xEC,0x20,0x0F,0xB6,0xC1,0xFF,0xC8,0x83,0xF8,0x24,0x0F,0x87,0x9C,0x09,0x00,0x00,0x8B,0xC8,0x48,0x8D,0x05,0xDC,0x09,0x00,0x00,0x8B,0x04,0x88,0x48,0x8D,0x15,0xDF,0xFF,0xFF,0xFF,0x48,0x03,0xC2,0xFF,0xE0,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xB6,0x68,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xE7,0x59,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xF0,0xC6,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x7F,0x09,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x74,0x68,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xA5,0x59,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x40,0xC7,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x3D,0x09,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x32,0x68,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x63,0x59,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x90,0xC7,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xFB,0x08,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xF0,0x67,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x21,0x59,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xC0,0xC7,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xB9,0x08,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xAE,0x67,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xDF,0x58,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x10,0xC8,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x77,0x08,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x6C,0x67,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x9D,0x58,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x40,0xC8,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x35,0x08,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x2A,0x67,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x5B,0x58,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0xC8,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xF3,0x07,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xE8,0x66,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x19,0x58,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xF0,0xC8,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xB1,0x07,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xA6,0x66,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xD7,0x57,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x50,0xC9,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x6F,0x07,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x64,0x66,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x95,0x57,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0xC9,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x2D,0x07,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x22,0x66,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x53,0x57,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xF0,0xC9,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xEB,0x06,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xE0,0x65,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x11,0x57,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x70,0xCA,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xA9,0x06,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x9E,0x65,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xCF,0x56,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xC0,0xCA,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x67,0x06,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x5C,0x65,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x8D,0x56,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x40,0xCB,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x25,0x06,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x1A,0x65,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x4B,0x56,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0xCB,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xE3,0x05,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xD8,0x64,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x09,0x56,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xD0,0xCB,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xA1,0x05,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x96,0x64,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xC7,0x55,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x20,0xCC,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x5F,0x05,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x54,0x64,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x85,0x55,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x50,0xCC,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x1D,0x05,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x12,0x64,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x43,0x55,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xB0,0xCC,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xDB,0x04,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xD0,0x63,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x01,0x55,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x00,0xCD,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x99,0x04,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x8E,0x63,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xBF,0x54,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x60,0xCD,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x57,0x04,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x4C,0x63,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x7D,0x54,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xB0,0xCD,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x15,0x04,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x0A,0x63,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x3B,0x54,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x20,0xCE,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xD3,0x03,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xC8,0x62,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xF9,0x53,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0xCE,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x91,0x03,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x86,0x62,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xB7,0x53,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x00,0xCF,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x4F,0x03,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x44,0x62,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x75,0x53,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x70,0xCF,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x0D,0x03,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x02,0x62,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x33,0x53,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xE0,0xCF,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xCB,0x02,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xC0,0x61,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xF1,0x52,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x40,0xD0,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x89,0x02,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x7E,0x61,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xAF,0x52,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xB0,0xD0,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x47,0x02,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x3C,0x61,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x6D,0x52,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x10,0xD1,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x05,0x02,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xFA,0x60,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x2B,0x52,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x60,0xD1,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xC3,0x01,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xB8,0x60,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xE9,0x51,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xB0,0xD1,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x81,0x01,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x76,0x60,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xA7,0x51,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xF0,0xD1,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x3F,0x01,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x34,0x60,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x65,0x51,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x40,0xD2,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xFD,0x00,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xF2,0x5F,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x23,0x51,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x70,0xD2,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xBB,0x00,0x00,0x00,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xB0,0x5F,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xE1,0x50,0x24,0x5F,0x48,0xB9,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xD0,0xD2,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xEB,0x7C,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x71,0x5F,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xA2,0x50,0x24,0x5F,0x48,0xB8,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0x30,0xD3,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0xEB,0x3D,0x48,0xB9,0x88,0xC7,0xF3,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0x32,0x5F,0x24,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x63,0x50,0x24,0x5F,0x48,0xB8,0x20,0xDE,0x4A,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0xC0,0xC6,0xEA,0xD0,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<N4,N3,byte> table(BinaryLogic:uint op)
; location: [7FFDD0EAFC90h, 7FFDD0EB0744h]
0000h push r15                      ; PUSH(Push_r64) [R15]                                 encoding(2 bytes) = 41 57
0002h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0004h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0005h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0006h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0007h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0008h sub rsp,188h                  ; SUB(Sub_rm64_imm32) [RSP,188h:imm64]                 encoding(7 bytes) = 48 81 ec 88 01 00 00
000fh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0012h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0015h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
001ah mov ecx,58h                   ; MOV(Mov_r32_imm32) [ECX,58h:imm32]                   encoding(5 bytes) = b9 58 00 00 00
001fh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0021h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0023h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0026h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0029h mov esi,edx                   ; MOV(Mov_r32_rm32) [ESI,EDX]                          encoding(2 bytes) = 8b f2
002bh lea rcx,[rsp+108h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 08 01 00 00
0033h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0037h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
003bh mov rcx,7FFDD0737EE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0737ee0h:imm64]         encoding(10 bytes) = 48 b9 e0 7e 73 d0 fd 7f 00 00
0045h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0047h call 7FFE300BF3E0h            ; CALL(Call_rel32_64) [5F20F750h:jmp64]                encoding(5 bytes) = e8 04 f7 20 5f
004ch mov rdx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 ba 28 f4 49 3e 7d 02 00 00
0056h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0059h mov edx,[rdx+1Ch]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 1c
005ch movsxd rdx,edx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EDX]                    encoding(3 bytes) = 48 63 d2
005fh mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
0069h call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F244950h:jmp64]                encoding(5 bytes) = e8 e2 48 24 5f
006eh lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
0072h mov eax,[rax+8]               ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 40 08
0075h lea rdx,[rsp+108h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 08 01 00 00
007dh mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
0080h mov [rdx+8],eax               ; MOV(Mov_rm32_r32) [mem(32u,RDX:br,DS:sr),EAX]        encoding(3 bytes) = 89 42 08
0083h vmovdqu xmm0,xmmword ptr [rsp+108h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 08 01 00 00
008ch vmovdqu xmmword ptr [rsp+178h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 78 01 00 00
0095h mov ecx,esi                   ; MOV(Mov_r32_rm32) [ECX,ESI]                          encoding(2 bytes) = 8b ce
0097h call 7FFDD0EAD8D0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFDC40h:jmp64]        encoding(5 bytes) = e8 a4 db ff ff
009ch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
009fh mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
00a9h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
00aeh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F244950h:jmp64]                encoding(5 bytes) = e8 9d 48 24 5f
00b3h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
00b6h mov rcx,7FFDD0734A18h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0734a18h:imm64]         encoding(10 bytes) = 48 b9 18 4a 73 d0 fd 7f 00 00
00c0h mov edx,5                     ; MOV(Mov_r32_imm32) [EDX,5h:imm32]                    encoding(5 bytes) = ba 05 00 00 00
00c5h call 7FFE300F48B0h            ; CALL(Call_rel32_64) [5F244C20h:jmp64]                encoding(5 bytes) = e8 56 4b 24 5f
00cah mov rdx,27D3E496F00h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f00h:imm64]          encoding(10 bytes) = 48 ba 00 6f 49 3e 7d 02 00 00
00d4h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
00d7h movsx r8,byte ptr [rdx+8]     ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4c 0f be 42 08
00dch mov edx,r8d                   ; MOV(Mov_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 8b d0
00dfh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00e2h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
00e6h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
00e9h mov [rsp+170h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 70 01 00 00
00f0h mov ecx,[rsp+170h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 70 01 00 00
00f7h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
00fah mov rdx,27D3E496F00h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f00h:imm64]          encoding(10 bytes) = 48 ba 00 6f 49 3e 7d 02 00 00
0104h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0107h movzx edx,byte ptr [rdx+8]    ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 0f b6 52 08
010bh movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
010eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0111h xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0114h mov [rsp+104h],r8d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(8 bytes) = 44 89 84 24 04 01 00 00
011ch mov [rsp+100h],r8d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(8 bytes) = 44 89 84 24 00 01 00 00
0124h mov [rsp+100h],r8d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(8 bytes) = 44 89 84 24 00 01 00 00
012ch test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
012eh je short 0142h                ; JE(Je_rel8_64) [142h:jmp64]                          encoding(2 bytes) = 74 12
0130h movzx ecx,byte ptr [rsp+100h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 00 01 00 00
0138h or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
013bh mov [rsp+100h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 00 01 00 00
0142h test al,al                    ; TEST(Test_rm8_r8) [AL,AL]                            encoding(2 bytes) = 84 c0
0144h je short 0158h                ; JE(Je_rel8_64) [158h:jmp64]                          encoding(2 bytes) = 74 12
0146h movzx ecx,byte ptr [rsp+100h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 00 01 00 00
014eh or ecx,2                      ; OR(Or_rm32_imm8) [ECX,2h:imm32]                      encoding(3 bytes) = 83 c9 02
0151h mov [rsp+100h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 00 01 00 00
0158h mov ecx,[rsp+100h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 00 01 00 00
015fh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0162h mov [rsp+104h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 04 01 00 00
0169h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
016bh je short 017fh                ; JE(Je_rel8_64) [17Fh:jmp64]                          encoding(2 bytes) = 74 12
016dh movzx ecx,byte ptr [rsp+104h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 04 01 00 00
0175h or ecx,4                      ; OR(Or_rm32_imm8) [ECX,4h:imm32]                      encoding(3 bytes) = 83 c9 04
0178h mov [rsp+104h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 04 01 00 00
017fh mov ecx,[rsp+104h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 04 01 00 00
0186h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0189h mov [rdi+10h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 10
018ch lea rcx,[rsp+0F0h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 f0 00 00 00
0194h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0198h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
019ch add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
01a0h mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
01a5h lea rcx,[rsp+0F0h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 f0 00 00 00
01adh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
01b1h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
01b5h movsxd r14,ebp                ; MOVSXD(Movsxd_r64_rm32) [R14,EBP]                    encoding(3 bytes) = 4c 63 f5
01b8h mov rcx,7FFDD0737EE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0737ee0h:imm64]         encoding(10 bytes) = 48 b9 e0 7e 73 d0 fd 7f 00 00
01c2h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
01c7h call 7FFE300BF3E0h            ; CALL(Call_rel32_64) [5F20F750h:jmp64]                encoding(5 bytes) = e8 84 f5 20 5f
01cch mov r9,27D3E49F430h           ; MOV(Mov_r64_imm64) [R9,27d3e49f430h:imm64]           encoding(10 bytes) = 49 b9 30 f4 49 3e 7d 02 00 00
01d6h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
01d9h mov r9,[r9+8]                 ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(4 bytes) = 4d 8b 49 08
01ddh imul r9,r14                   ; IMUL(Imul_r64_rm64) [R9,R14]                         encoding(4 bytes) = 4d 0f af ce
01e1h mov rdx,27D3E49F438h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f438h:imm64]          encoding(10 bytes) = 48 ba 38 f4 49 3e 7d 02 00 00
01ebh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
01eeh mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
01f2h cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
01f5h setge r9b                     ; SETGE(Setge_rm8) [R9L]                               encoding(4 bytes) = 41 0f 9d c1
01f9h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
01fdh mov edx,96h                   ; MOV(Mov_r32_imm32) [EDX,96h:imm32]                   encoding(5 bytes) = ba 96 00 00 00
0202h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
0208h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
020bh jne short 023bh               ; JNE(Jne_rel8_64) [23Bh:jmp64]                        encoding(2 bytes) = 75 2e
020dh mov r9,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R9,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b9 a8 e9 4a 3e 7d 02 00 00
0217h mov rcx,[r9]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 09
021ah mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
021dh lea r9,[rsp+20h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 20
0222h mov [r9],r8b                  ; MOV(Mov_rm8_r8) [mem(8u,R9:br,DS:sr),R8L]            encoding(3 bytes) = 45 88 01
0225h mov [r9+4],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 04
0229h mov r9,[rsp+20h]              ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 4c 24 20
022eh mov rdx,rcx                   ; MOV(Mov_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 8b d1
0231h mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0234h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0236h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF733BA0h:jmp64]        encoding(5 bytes) = e8 65 39 73 ff
023bh lea rcx,[rsp+0F0h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 f0 00 00 00
0243h mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0246h mov [rcx+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBP]        encoding(3 bytes) = 89 69 08
0249h vmovdqu xmm0,xmmword ptr [rsp+0F0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 f0 00 00 00
0252h vmovdqu xmmword ptr [rsp+160h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 60 01 00 00
025bh vmovdqu xmm0,xmmword ptr [rsp+160h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 60 01 00 00
0264h vmovdqu xmmword ptr [rsp+0E0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 e0 00 00 00
026dh vmovdqu xmm0,xmmword ptr [rsp+0E0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 e0 00 00 00
0276h vmovdqu xmmword ptr [rsp+0D0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 d0 00 00 00
027fh lea rcx,[rsp+0D0h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 d0 00 00 00
0287h mov rdi,[rcx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 39
028ah mov ebp,[rcx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 69 08
028dh lea rcx,[rsp+178h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 78 01 00 00
0295h mov r14,[rcx]                 ; MOV(Mov_r64_rm64) [R14,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 31
0298h mov r15d,[rcx+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RCX:br,DS:sr)]       encoding(4 bytes) = 44 8b 79 08
029ch mov rcx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 b9 28 f4 49 3e 7d 02 00 00
02a6h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
02a9h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
02adh mov r11,7FFDD04B0E20h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e20h:imm64]         encoding(10 bytes) = 49 bb 20 0e 4b d0 fd 7f 00 00
02b7h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
02b9h mov rax,7FFDD04B0E20h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e20h:imm64]         encoding(10 bytes) = 48 b8 20 0e 4b d0 fd 7f 00 00
02c3h cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
02c5h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
02c7h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
02cah jne short 02d2h               ; JNE(Jne_rel8_64) [2D2h:jmp64]                        encoding(2 bytes) = 75 06
02cch xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
02ceh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
02d0h jmp short 02d9h               ; JMP(Jmp_rel8_64) [2D9h:jmp64]                        encoding(2 bytes) = eb 07
02d2h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
02d6h mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
02d9h cmp edx,0                     ; CMP(Cmp_rm32_imm8) [EDX,0h:imm32]                    encoding(3 bytes) = 83 fa 00
02dch jbe near ptr 0aafh            ; JBE(Jbe_rel32_64) [AAFh:jmp64]                       encoding(6 bytes) = 0f 86 cd 07 00 00
02e2h movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
02e5h mov rdx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 ba 28 f4 49 3e 7d 02 00 00
02efh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
02f2h mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
02f5h mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
02f8h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
02fah add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
02fdh mov eax,r15d                  ; MOV(Mov_r32_rm32) [EAX,R15D]                         encoding(3 bytes) = 41 8b c7
0300h cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
0303h ja near ptr 0a7fh             ; JA(Ja_rel32_64) [A7Fh:jmp64]                         encoding(6 bytes) = 0f 87 76 07 00 00
0309h movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
030ch add rcx,r14                   ; ADD(Add_r64_rm64) [RCX,R14]                          encoding(3 bytes) = 49 03 ce
030fh cmp ebp,edx                   ; CMP(Cmp_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 3b ea
0311h ja near ptr 0a85h             ; JA(Ja_rel32_64) [A85h:jmp64]                         encoding(6 bytes) = 0f 87 6e 07 00 00
0317h mov rdx,rdi                   ; MOV(Mov_r64_rm64) [RDX,RDI]                          encoding(3 bytes) = 48 8b d7
031ah movsxd r8,ebp                 ; MOVSXD(Movsxd_r64_rm32) [R8,EBP]                     encoding(3 bytes) = 4c 63 c5
031dh call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39689270h:jmp64]                encoding(5 bytes) = e8 4e 8f 68 39
0322h mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
032ch mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
0331h call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F244950h:jmp64]                encoding(5 bytes) = e8 1a 46 24 5f
0336h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0339h mov rdx,27D3E496F08h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f08h:imm64]          encoding(10 bytes) = 48 ba 08 6f 49 3e 7d 02 00 00
0343h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0346h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
034bh mov r8,27D3E496F00h           ; MOV(Mov_r64_imm64) [R8,27d3e496f00h:imm64]           encoding(10 bytes) = 49 b8 00 6f 49 3e 7d 02 00 00
0355h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0358h movsx r8,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 40 08
035dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0360h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
0364h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
0367h mov [rsp+158h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 58 01 00 00
036eh mov r9d,[rsp+158h]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 8c 24 58 01 00 00
0376h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
037ah mov rdx,27D3E496F00h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f00h:imm64]          encoding(10 bytes) = 48 ba 00 6f 49 3e 7d 02 00 00
0384h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0387h movzx edx,byte ptr [rdx+8]    ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 0f b6 52 08
038bh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
038eh mov r8,27D3E496F08h           ; MOV(Mov_r64_imm64) [R8,27d3e496f08h:imm64]           encoding(10 bytes) = 49 b8 08 6f 49 3e 7d 02 00 00
0398h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
039bh movzx r8d,byte ptr [r8+8]     ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,R8:br,DS:sr)]       encoding(5 bytes) = 45 0f b6 40 08
03a0h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
03a2h mov [rsp+0CCh],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 cc 00 00 00
03a9h mov [rsp+0C8h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 c8 00 00 00
03b0h mov [rsp+0C8h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 c8 00 00 00
03b7h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
03bah je short 03d1h                ; JE(Je_rel8_64) [3D1h:jmp64]                          encoding(2 bytes) = 74 15
03bch movzx r9d,byte ptr [rsp+0C8h] ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 c8 00 00 00
03c5h or r9d,1                      ; OR(Or_rm32_imm8) [R9D,1h:imm32]                      encoding(4 bytes) = 41 83 c9 01
03c9h mov [rsp+0C8h],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 c8 00 00 00
03d1h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
03d3h je short 03eah                ; JE(Je_rel8_64) [3EAh:jmp64]                          encoding(2 bytes) = 74 15
03d5h movzx r9d,byte ptr [rsp+0C8h] ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 c8 00 00 00
03deh or r9d,2                      ; OR(Or_rm32_imm8) [R9D,2h:imm32]                      encoding(4 bytes) = 41 83 c9 02
03e2h mov [rsp+0C8h],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 c8 00 00 00
03eah mov r9d,[rsp+0C8h]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 8c 24 c8 00 00 00
03f2h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
03f6h mov [rsp+0CCh],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 cc 00 00 00
03feh test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0401h je short 0418h                ; JE(Je_rel8_64) [418h:jmp64]                          encoding(2 bytes) = 74 15
0403h movzx r9d,byte ptr [rsp+0CCh] ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 cc 00 00 00
040ch or r9d,4                      ; OR(Or_rm32_imm8) [R9D,4h:imm32]                      encoding(4 bytes) = 41 83 c9 04
0410h mov [rsp+0CCh],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 cc 00 00 00
0418h mov r9d,[rsp+0CCh]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 8c 24 cc 00 00 00
0420h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0424h mov [rdi+10h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R9L]           encoding(4 bytes) = 44 88 4f 10
0428h lea r9,[rsp+0B8h]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 8c 24 b8 00 00 00
0430h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0434h vmovdqu xmmword ptr [r9],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R9:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 01
0439h add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
043dh mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
0442h lea r9,[rsp+0B8h]             ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 8c 24 b8 00 00 00
044ah vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
044eh vmovdqu xmmword ptr [r9],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R9:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 01
0453h movsxd r9,ebp                 ; MOVSXD(Movsxd_r64_rm32) [R9,EBP]                     encoding(3 bytes) = 4c 63 cd
0456h mov rdx,27D3E49F430h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f430h:imm64]          encoding(10 bytes) = 48 ba 30 f4 49 3e 7d 02 00 00
0460h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0463h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
0467h imul r9,rdx                   ; IMUL(Imul_r64_rm64) [R9,RDX]                         encoding(4 bytes) = 4c 0f af ca
046bh mov rdx,27D3E49F438h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f438h:imm64]          encoding(10 bytes) = 48 ba 38 f4 49 3e 7d 02 00 00
0475h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0478h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
047ch cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
047fh setge r9b                     ; SETGE(Setge_rm8) [R9L]                               encoding(4 bytes) = 41 0f 9d c1
0483h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0487h mov edx,96h                   ; MOV(Mov_r32_imm32) [EDX,96h:imm32]                   encoding(5 bytes) = ba 96 00 00 00
048ch mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
0492h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
0495h jne short 04c5h               ; JNE(Jne_rel8_64) [4C5h:jmp64]                        encoding(2 bytes) = 75 2e
0497h mov r9,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R9,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b9 a8 e9 4a 3e 7d 02 00 00
04a1h mov rcx,[r9]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 09
04a4h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
04a7h lea r9,[rsp+20h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 20
04ach mov [r9],r8b                  ; MOV(Mov_rm8_r8) [mem(8u,R9:br,DS:sr),R8L]            encoding(3 bytes) = 45 88 01
04afh mov [r9+4],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 04
04b3h mov r9,[rsp+20h]              ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 4c 24 20
04b8h mov rdx,rcx                   ; MOV(Mov_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 8b d1
04bbh mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
04beh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
04c0h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF733BA0h:jmp64]        encoding(5 bytes) = e8 db 36 73 ff
04c5h lea rcx,[rsp+0B8h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 b8 00 00 00
04cdh mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
04d0h mov [rcx+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBP]        encoding(3 bytes) = 89 69 08
04d3h vmovdqu xmm0,xmmword ptr [rsp+0B8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 b8 00 00 00
04dch vmovdqu xmmword ptr [rsp+148h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 48 01 00 00
04e5h vmovdqu xmm0,xmmword ptr [rsp+148h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 48 01 00 00
04eeh vmovdqu xmmword ptr [rsp+0A8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 a8 00 00 00
04f7h vmovdqu xmm0,xmmword ptr [rsp+0A8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 a8 00 00 00
0500h vmovdqu xmmword ptr [rsp+98h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 98 00 00 00
0509h lea rcx,[rsp+98h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 98 00 00 00
0511h mov rdi,[rcx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 39
0514h mov ebp,[rcx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 69 08
0517h lea rcx,[rsp+178h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 78 01 00 00
051fh mov r14,[rcx]                 ; MOV(Mov_r64_rm64) [R14,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 31
0522h mov r15d,[rcx+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RCX:br,DS:sr)]       encoding(4 bytes) = 44 8b 79 08
0526h mov rcx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 b9 28 f4 49 3e 7d 02 00 00
0530h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
0533h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
0537h mov r11,7FFDD04B0E28h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e28h:imm64]         encoding(10 bytes) = 49 bb 28 0e 4b d0 fd 7f 00 00
0541h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
0546h mov rax,7FFDD04B0E28h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e28h:imm64]         encoding(10 bytes) = 48 b8 28 0e 4b d0 fd 7f 00 00
0550h cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
0552h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
0554h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
0557h jne short 055fh               ; JNE(Jne_rel8_64) [55Fh:jmp64]                        encoding(2 bytes) = 75 06
0559h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
055bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
055dh jmp short 0566h               ; JMP(Jmp_rel8_64) [566h:jmp64]                        encoding(2 bytes) = eb 07
055fh lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
0563h mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
0566h cmp edx,0                     ; CMP(Cmp_rm32_imm8) [EDX,0h:imm32]                    encoding(3 bytes) = 83 fa 00
0569h jbe near ptr 0aafh            ; JBE(Jbe_rel32_64) [AAFh:jmp64]                       encoding(6 bytes) = 0f 86 40 05 00 00
056fh movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
0572h mov rdx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 ba 28 f4 49 3e 7d 02 00 00
057ch mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
057fh mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
0582h mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
0585h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0587h add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
058ah mov eax,r15d                  ; MOV(Mov_r32_rm32) [EAX,R15D]                         encoding(3 bytes) = 41 8b c7
058dh cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
0590h ja near ptr 0a8bh             ; JA(Ja_rel32_64) [A8Bh:jmp64]                         encoding(6 bytes) = 0f 87 f5 04 00 00
0596h movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
0599h add rcx,r14                   ; ADD(Add_r64_rm64) [RCX,R14]                          encoding(3 bytes) = 49 03 ce
059ch cmp ebp,edx                   ; CMP(Cmp_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 3b ea
059eh ja near ptr 0a91h             ; JA(Ja_rel32_64) [A91h:jmp64]                         encoding(6 bytes) = 0f 87 ed 04 00 00
05a4h mov rdx,rdi                   ; MOV(Mov_r64_rm64) [RDX,RDI]                          encoding(3 bytes) = 48 8b d7
05a7h movsxd r8,ebp                 ; MOVSXD(Movsxd_r64_rm32) [R8,EBP]                     encoding(3 bytes) = 4c 63 c5
05aah call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39689270h:jmp64]                encoding(5 bytes) = e8 c1 8c 68 39
05afh mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
05b9h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
05beh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F244950h:jmp64]                encoding(5 bytes) = e8 8d 43 24 5f
05c3h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
05c6h mov rdx,27D3E496F00h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f00h:imm64]          encoding(10 bytes) = 48 ba 00 6f 49 3e 7d 02 00 00
05d0h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
05d3h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
05d8h mov r8,27D3E496F08h           ; MOV(Mov_r64_imm64) [R8,27d3e496f08h:imm64]           encoding(10 bytes) = 49 b8 08 6f 49 3e 7d 02 00 00
05e2h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
05e5h movsx r8,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 40 08
05eah mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
05edh mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
05f1h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
05f4h mov [rsp+140h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 40 01 00 00
05fbh mov r9d,[rsp+140h]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 8c 24 40 01 00 00
0603h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0607h mov rdx,27D3E496F08h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f08h:imm64]          encoding(10 bytes) = 48 ba 08 6f 49 3e 7d 02 00 00
0611h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0614h movzx edx,byte ptr [rdx+8]    ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 0f b6 52 08
0618h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
061bh mov r8,27D3E496F00h           ; MOV(Mov_r64_imm64) [R8,27d3e496f00h:imm64]           encoding(10 bytes) = 49 b8 00 6f 49 3e 7d 02 00 00
0625h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0628h movzx r8d,byte ptr [r8+8]     ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,R8:br,DS:sr)]       encoding(5 bytes) = 45 0f b6 40 08
062dh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
062fh mov [rsp+94h],ecx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 94 00 00 00
0636h mov [rsp+90h],ecx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 90 00 00 00
063dh mov [rsp+90h],ecx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 90 00 00 00
0644h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
0647h je short 065eh                ; JE(Je_rel8_64) [65Eh:jmp64]                          encoding(2 bytes) = 74 15
0649h movzx r9d,byte ptr [rsp+90h]  ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 90 00 00 00
0652h or r9d,1                      ; OR(Or_rm32_imm8) [R9D,1h:imm32]                      encoding(4 bytes) = 41 83 c9 01
0656h mov [rsp+90h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 90 00 00 00
065eh test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0660h je short 0677h                ; JE(Je_rel8_64) [677h:jmp64]                          encoding(2 bytes) = 74 15
0662h movzx r9d,byte ptr [rsp+90h]  ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 90 00 00 00
066bh or r9d,2                      ; OR(Or_rm32_imm8) [R9D,2h:imm32]                      encoding(4 bytes) = 41 83 c9 02
066fh mov [rsp+90h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 90 00 00 00
0677h mov r9d,[rsp+90h]             ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 8c 24 90 00 00 00
067fh movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0683h mov [rsp+94h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 94 00 00 00
068bh test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
068eh je short 06a5h                ; JE(Je_rel8_64) [6A5h:jmp64]                          encoding(2 bytes) = 74 15
0690h movzx r9d,byte ptr [rsp+94h]  ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 94 00 00 00
0699h or r9d,4                      ; OR(Or_rm32_imm8) [R9D,4h:imm32]                      encoding(4 bytes) = 41 83 c9 04
069dh mov [rsp+94h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 94 00 00 00
06a5h mov r9d,[rsp+94h]             ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 8c 24 94 00 00 00
06adh movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
06b1h mov [rdi+10h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R9L]           encoding(4 bytes) = 44 88 4f 10
06b5h lea r9,[rsp+80h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 8c 24 80 00 00 00
06bdh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
06c1h vmovdqu xmmword ptr [r9],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R9:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 01
06c6h add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
06cah mov ebp,1                     ; MOV(Mov_r32_imm32) [EBP,1h:imm32]                    encoding(5 bytes) = bd 01 00 00 00
06cfh lea r9,[rsp+80h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 8c 24 80 00 00 00
06d7h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
06dbh vmovdqu xmmword ptr [r9],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R9:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 01
06e0h movsxd r9,ebp                 ; MOVSXD(Movsxd_r64_rm32) [R9,EBP]                     encoding(3 bytes) = 4c 63 cd
06e3h mov rdx,27D3E49F430h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f430h:imm64]          encoding(10 bytes) = 48 ba 30 f4 49 3e 7d 02 00 00
06edh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
06f0h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
06f4h imul r9,rdx                   ; IMUL(Imul_r64_rm64) [R9,RDX]                         encoding(4 bytes) = 4c 0f af ca
06f8h mov rdx,27D3E49F438h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f438h:imm64]          encoding(10 bytes) = 48 ba 38 f4 49 3e 7d 02 00 00
0702h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0705h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
0709h cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
070ch setge r9b                     ; SETGE(Setge_rm8) [R9L]                               encoding(4 bytes) = 41 0f 9d c1
0710h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0714h mov edx,96h                   ; MOV(Mov_r32_imm32) [EDX,96h:imm32]                   encoding(5 bytes) = ba 96 00 00 00
0719h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
071fh test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
0722h jne short 0752h               ; JNE(Jne_rel8_64) [752h:jmp64]                        encoding(2 bytes) = 75 2e
0724h mov r9,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R9,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b9 a8 e9 4a 3e 7d 02 00 00
072eh mov rcx,[r9]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 09
0731h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
0734h lea r9,[rsp+20h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 20
0739h mov [r9],r8b                  ; MOV(Mov_rm8_r8) [mem(8u,R9:br,DS:sr),R8L]            encoding(3 bytes) = 45 88 01
073ch mov [r9+4],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 04
0740h mov r9,[rsp+20h]              ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 4c 24 20
0745h mov rdx,rcx                   ; MOV(Mov_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 8b d1
0748h mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
074bh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
074dh call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF733BA0h:jmp64]        encoding(5 bytes) = e8 4e 34 73 ff
0752h lea rcx,[rsp+80h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 80 00 00 00
075ah mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
075dh mov [rcx+8],ebp               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EBP]        encoding(3 bytes) = 89 69 08
0760h vmovdqu xmm0,xmmword ptr [rsp+80h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 80 00 00 00
0769h vmovdqu xmmword ptr [rsp+130h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 30 01 00 00
0772h vmovdqu xmm0,xmmword ptr [rsp+130h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 30 01 00 00
077bh vmovdqu xmmword ptr [rsp+70h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 70
0781h vmovdqu xmm0,xmmword ptr [rsp+70h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 6f 44 24 70
0787h vmovdqu xmmword ptr [rsp+60h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 60
078dh lea rcx,[rsp+60h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 60
0792h mov rdi,[rcx]                 ; MOV(Mov_r64_rm64) [RDI,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 39
0795h mov ebp,[rcx+8]               ; MOV(Mov_r32_rm32) [EBP,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 69 08
0798h lea rcx,[rsp+178h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 78 01 00 00
07a0h mov r14,[rcx]                 ; MOV(Mov_r64_rm64) [R14,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 4c 8b 31
07a3h mov r15d,[rcx+8]              ; MOV(Mov_r32_rm32) [R15D,mem(32u,RCX:br,DS:sr)]       encoding(4 bytes) = 44 8b 79 08
07a7h mov rcx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 b9 28 f4 49 3e 7d 02 00 00
07b1h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
07b4h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
07b8h mov r11,7FFDD04B0E30h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e30h:imm64]         encoding(10 bytes) = 49 bb 30 0e 4b d0 fd 7f 00 00
07c2h mov edx,2                     ; MOV(Mov_r32_imm32) [EDX,2h:imm32]                    encoding(5 bytes) = ba 02 00 00 00
07c7h mov rax,7FFDD04B0E30h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e30h:imm64]         encoding(10 bytes) = 48 b8 30 0e 4b d0 fd 7f 00 00
07d1h cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
07d3h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
07d5h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
07d8h jne short 07e0h               ; JNE(Jne_rel8_64) [7E0h:jmp64]                        encoding(2 bytes) = 75 06
07dah xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
07dch xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
07deh jmp short 07e7h               ; JMP(Jmp_rel8_64) [7E7h:jmp64]                        encoding(2 bytes) = eb 07
07e0h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
07e4h mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
07e7h cmp edx,0                     ; CMP(Cmp_rm32_imm8) [EDX,0h:imm32]                    encoding(3 bytes) = 83 fa 00
07eah jbe near ptr 0aafh            ; JBE(Jbe_rel32_64) [AAFh:jmp64]                       encoding(6 bytes) = 0f 86 bf 02 00 00
07f0h movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
07f3h mov rdx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 ba 28 f4 49 3e 7d 02 00 00
07fdh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0800h mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
0803h mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
0806h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0808h add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
080bh mov eax,r15d                  ; MOV(Mov_r32_rm32) [EAX,R15D]                         encoding(3 bytes) = 41 8b c7
080eh cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
0811h ja near ptr 0a97h             ; JA(Ja_rel32_64) [A97h:jmp64]                         encoding(6 bytes) = 0f 87 80 02 00 00
0817h movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
081ah add rcx,r14                   ; ADD(Add_r64_rm64) [RCX,R14]                          encoding(3 bytes) = 49 03 ce
081dh cmp ebp,edx                   ; CMP(Cmp_r32_rm32) [EBP,EDX]                          encoding(2 bytes) = 3b ea
081fh ja near ptr 0a9dh             ; JA(Ja_rel32_64) [A9Dh:jmp64]                         encoding(6 bytes) = 0f 87 78 02 00 00
0825h mov rdx,rdi                   ; MOV(Mov_r64_rm64) [RDX,RDI]                          encoding(3 bytes) = 48 8b d7
0828h movsxd r8,ebp                 ; MOVSXD(Movsxd_r64_rm32) [R8,EBP]                     encoding(3 bytes) = 4c 63 c5
082bh call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39689270h:jmp64]                encoding(5 bytes) = e8 40 8a 68 39
0830h mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
083ah mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
083fh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F244950h:jmp64]                encoding(5 bytes) = e8 0c 41 24 5f
0844h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0847h mov rdx,27D3E496F08h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f08h:imm64]          encoding(10 bytes) = 48 ba 08 6f 49 3e 7d 02 00 00
0851h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0854h movsx r8,byte ptr [rdx+8]     ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4c 0f be 42 08
0859h mov edx,r8d                   ; MOV(Mov_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 8b d0
085ch mov rcx,[rsi+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSI:br,DS:sr)]        encoding(4 bytes) = 48 8b 4e 08
0860h call qword ptr [rsi+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RSI:br,DS:sr)]      encoding(3 bytes) = ff 56 18
0863h mov [rsp+128h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 28 01 00 00
086ah mov r9d,[rsp+128h]            ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 8c 24 28 01 00 00
0872h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0876h mov rdx,27D3E496F08h          ; MOV(Mov_r64_imm64) [RDX,27d3e496f08h:imm64]          encoding(10 bytes) = 48 ba 08 6f 49 3e 7d 02 00 00
0880h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0883h movzx edx,byte ptr [rdx+8]    ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RDX:br,DS:sr)]      encoding(4 bytes) = 0f b6 52 08
0887h movzx r8d,dl                  ; MOVZX(Movzx_r32_rm8) [R8D,DL]                        encoding(4 bytes) = 44 0f b6 c2
088bh movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
088fh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0891h mov [rsp+5Ch],ecx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 5c
0895h mov [rsp+58h],ecx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 58
0899h mov [rsp+58h],ecx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(4 bytes) = 89 4c 24 58
089dh test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
08a0h je short 08b1h                ; JE(Je_rel8_64) [8B1h:jmp64]                          encoding(2 bytes) = 74 0f
08a2h movzx r9d,byte ptr [rsp+58h]  ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(6 bytes) = 44 0f b6 4c 24 58
08a8h or r9d,1                      ; OR(Or_rm32_imm8) [R9D,1h:imm32]                      encoding(4 bytes) = 41 83 c9 01
08ach mov [rsp+58h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(5 bytes) = 44 88 4c 24 58
08b1h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
08b4h je short 08c5h                ; JE(Je_rel8_64) [8C5h:jmp64]                          encoding(2 bytes) = 74 0f
08b6h movzx r9d,byte ptr [rsp+58h]  ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(6 bytes) = 44 0f b6 4c 24 58
08bch or r9d,2                      ; OR(Or_rm32_imm8) [R9D,2h:imm32]                      encoding(4 bytes) = 41 83 c9 02
08c0h mov [rsp+58h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(5 bytes) = 44 88 4c 24 58
08c5h mov r9d,[rsp+58h]             ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(5 bytes) = 44 8b 4c 24 58
08cah movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
08ceh mov [rsp+5Ch],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(5 bytes) = 44 88 4c 24 5c
08d3h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
08d5h je short 08e6h                ; JE(Je_rel8_64) [8E6h:jmp64]                          encoding(2 bytes) = 74 0f
08d7h movzx r9d,byte ptr [rsp+5Ch]  ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(6 bytes) = 44 0f b6 4c 24 5c
08ddh or r9d,4                      ; OR(Or_rm32_imm8) [R9D,4h:imm32]                      encoding(4 bytes) = 41 83 c9 04
08e1h mov [rsp+5Ch],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(5 bytes) = 44 88 4c 24 5c
08e6h mov r9d,[rsp+5Ch]             ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,SS:sr)]        encoding(5 bytes) = 44 8b 4c 24 5c
08ebh movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
08efh mov [rdi+10h],r9b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R9L]           encoding(4 bytes) = 44 88 4f 10
08f3h lea r9,[rsp+48h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 48
08f8h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
08fch vmovdqu xmmword ptr [r9],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R9:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 01
0901h add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
0905h mov esi,1                     ; MOV(Mov_r32_imm32) [ESI,1h:imm32]                    encoding(5 bytes) = be 01 00 00 00
090ah lea r9,[rsp+48h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 48
090fh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0913h vmovdqu xmmword ptr [r9],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R9:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 01
0918h movsxd r9,esi                 ; MOVSXD(Movsxd_r64_rm32) [R9,ESI]                     encoding(3 bytes) = 4c 63 ce
091bh mov rdx,27D3E49F430h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f430h:imm64]          encoding(10 bytes) = 48 ba 30 f4 49 3e 7d 02 00 00
0925h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0928h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
092ch imul r9,rdx                   ; IMUL(Imul_r64_rm64) [R9,RDX]                         encoding(4 bytes) = 4c 0f af ca
0930h mov rdx,27D3E49F438h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f438h:imm64]          encoding(10 bytes) = 48 ba 38 f4 49 3e 7d 02 00 00
093ah mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
093dh mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
0941h cmp r9d,edx                   ; CMP(Cmp_r32_rm32) [R9D,EDX]                          encoding(3 bytes) = 44 3b ca
0944h setge r9b                     ; SETGE(Setge_rm8) [R9L]                               encoding(4 bytes) = 41 0f 9d c1
0948h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
094ch mov edx,96h                   ; MOV(Mov_r32_imm32) [EDX,96h:imm32]                   encoding(5 bytes) = ba 96 00 00 00
0951h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
0957h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
095ah jne short 098ah               ; JNE(Jne_rel8_64) [98Ah:jmp64]                        encoding(2 bytes) = 75 2e
095ch mov r9,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R9,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b9 a8 e9 4a 3e 7d 02 00 00
0966h mov rcx,[r9]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 09
0969h mov rax,[r9]                  ; MOV(Mov_r64_rm64) [RAX,mem(64u,R9:br,DS:sr)]         encoding(3 bytes) = 49 8b 01
096ch lea r9,[rsp+20h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 4c 24 20
0971h mov [r9],r8b                  ; MOV(Mov_rm8_r8) [mem(8u,R9:br,DS:sr),R8L]            encoding(3 bytes) = 45 88 01
0974h mov [r9+4],edx                ; MOV(Mov_rm32_r32) [mem(32u,R9:br,DS:sr),EDX]         encoding(4 bytes) = 41 89 51 04
0978h mov r9,[rsp+20h]              ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 4c 24 20
097dh mov rdx,rcx                   ; MOV(Mov_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 8b d1
0980h mov r8,rax                    ; MOV(Mov_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 8b c0
0983h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0985h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF733BA0h:jmp64]        encoding(5 bytes) = e8 16 32 73 ff
098ah lea rcx,[rsp+48h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 48
098fh mov [rcx],rdi                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDI]        encoding(3 bytes) = 48 89 39
0992h mov [rcx+8],esi               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),ESI]        encoding(3 bytes) = 89 71 08
0995h vmovdqu xmm0,xmmword ptr [rsp+48h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 6f 44 24 48
099bh vmovdqu xmmword ptr [rsp+118h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 18 01 00 00
09a4h vmovdqu xmm0,xmmword ptr [rsp+118h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 18 01 00 00
09adh vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
09b3h vmovdqu xmm0,xmmword ptr [rsp+38h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fa 6f 44 24 38
09b9h vmovdqu xmmword ptr [rsp+28h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 28
09bfh lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
09c4h mov rsi,[rcx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 31
09c7h mov edi,[rcx+8]               ; MOV(Mov_r32_rm32) [EDI,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 79 08
09cah lea rcx,[rsp+178h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 78 01 00 00
09d2h mov rbp,[rcx]                 ; MOV(Mov_r64_rm64) [RBP,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 29
09d5h mov r14d,[rcx+8]              ; MOV(Mov_r32_rm32) [R14D,mem(32u,RCX:br,DS:sr)]       encoding(4 bytes) = 44 8b 71 08
09d9h mov rcx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 b9 28 f4 49 3e 7d 02 00 00
09e3h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
09e6h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
09eah mov r11,7FFDD04B0E38h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e38h:imm64]         encoding(10 bytes) = 49 bb 38 0e 4b d0 fd 7f 00 00
09f4h mov edx,3                     ; MOV(Mov_r32_imm32) [EDX,3h:imm32]                    encoding(5 bytes) = ba 03 00 00 00
09f9h mov rax,7FFDD04B0E38h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e38h:imm64]         encoding(10 bytes) = 48 b8 38 0e 4b d0 fd 7f 00 00
0a03h cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
0a05h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
0a07h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
0a0ah jne short 0a12h               ; JNE(Jne_rel8_64) [A12h:jmp64]                        encoding(2 bytes) = 75 06
0a0ch xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0a0eh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0a10h jmp short 0a19h               ; JMP(Jmp_rel8_64) [A19h:jmp64]                        encoding(2 bytes) = eb 07
0a12h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
0a16h mov edx,[rax+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 50 08
0a19h cmp edx,0                     ; CMP(Cmp_rm32_imm8) [EDX,0h:imm32]                    encoding(3 bytes) = 83 fa 00
0a1ch jbe near ptr 0aafh            ; JBE(Jbe_rel32_64) [AAFh:jmp64]                       encoding(6 bytes) = 0f 86 8d 00 00 00
0a22h movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
0a25h mov rdx,27D3E49F428h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f428h:imm64]          encoding(10 bytes) = 48 ba 28 f4 49 3e 7d 02 00 00
0a2fh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0a32h mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
0a35h mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
0a38h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0a3ah add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
0a3dh mov eax,r14d                  ; MOV(Mov_r32_rm32) [EAX,R14D]                         encoding(3 bytes) = 41 8b c6
0a40h cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
0a43h ja short 0aa3h                ; JA(Ja_rel8_64) [AA3h:jmp64]                          encoding(2 bytes) = 77 5e
0a45h movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
0a48h add rcx,rbp                   ; ADD(Add_r64_rm64) [RCX,RBP]                          encoding(3 bytes) = 48 03 cd
0a4bh cmp edi,edx                   ; CMP(Cmp_r32_rm32) [EDI,EDX]                          encoding(2 bytes) = 3b fa
0a4dh ja short 0aa9h                ; JA(Ja_rel8_64) [AA9h:jmp64]                          encoding(2 bytes) = 77 5a
0a4fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0a52h movsxd r8,edi                 ; MOVSXD(Movsxd_r64_rm32) [R8,EDI]                     encoding(3 bytes) = 4c 63 c7
0a55h call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39689270h:jmp64]                encoding(5 bytes) = e8 16 88 68 39
0a5ah mov rdi,rbx                   ; MOV(Mov_r64_rm64) [RDI,RBX]                          encoding(3 bytes) = 48 8b fb
0a5dh lea rsi,[rsp+178h]            ; LEA(Lea_r64_m) [RSI,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d b4 24 78 01 00 00
0a65h call 7FFE300F3690h            ; CALL(Call_rel32_64) [5F243A00h:jmp64]                encoding(5 bytes) = e8 96 2f 24 5f
0a6ah movsq                         ; MOVSQ(Movsq_m64_m64) [mem(64u),mem(64u,DS:sr)]       encoding(2 bytes) = 48 a5
0a6ch mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
0a6fh add rsp,188h                  ; ADD(Add_rm64_imm32) [RSP,188h:imm64]                 encoding(7 bytes) = 48 81 c4 88 01 00 00
0a76h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0a77h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
0a78h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0a79h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0a7ah pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
0a7ch pop r15                       ; POP(Pop_r64) [R15]                                   encoding(2 bytes) = 41 5f
0a7eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0a7fh call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D00h:jmp64]        encoding(5 bytes) = e8 7c 32 74 ff
0a84h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0a85h call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D08h:jmp64]        encoding(5 bytes) = e8 7e 32 74 ff
0a8ah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0a8bh call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D00h:jmp64]        encoding(5 bytes) = e8 70 32 74 ff
0a90h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0a91h call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D08h:jmp64]        encoding(5 bytes) = e8 72 32 74 ff
0a96h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0a97h call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D00h:jmp64]        encoding(5 bytes) = e8 64 32 74 ff
0a9ch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0a9dh call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D08h:jmp64]        encoding(5 bytes) = e8 66 32 74 ff
0aa2h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0aa3h call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D00h:jmp64]        encoding(5 bytes) = e8 58 32 74 ff
0aa8h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0aa9h call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF743D08h:jmp64]        encoding(5 bytes) = e8 5a 32 74 ff
0aaeh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
0aafh call 7FFE3021EF00h            ; CALL(Call_rel32_64) [5F36F270h:jmp64]                encoding(5 bytes) = e8 bc e7 36 5f
0ab4h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> tableBytes => new byte[2741]{0x41,0x57,0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x81,0xEC,0x88,0x01,0x00,0x00,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x58,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x8B,0xF2,0x48,0x8D,0x8C,0x24,0x08,0x01,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0xB9,0xE0,0x7E,0x73,0xD0,0xFD,0x7F,0x00,0x00,0x33,0xD2,0xE8,0x04,0xF7,0x20,0x5F,0x48,0xBA,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x1C,0x48,0x63,0xD2,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xE2,0x48,0x24,0x5F,0x48,0x8D,0x48,0x10,0x8B,0x40,0x08,0x48,0x8D,0x94,0x24,0x08,0x01,0x00,0x00,0x48,0x89,0x0A,0x89,0x42,0x08,0xC5,0xFA,0x6F,0x84,0x24,0x08,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x78,0x01,0x00,0x00,0x8B,0xCE,0xE8,0xA4,0xDB,0xFF,0xFF,0x48,0x8B,0xF0,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x9D,0x48,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xB9,0x18,0x4A,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x05,0x00,0x00,0x00,0xE8,0x56,0x4B,0x24,0x5F,0x48,0xBA,0x00,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x0F,0xBE,0x42,0x08,0x41,0x8B,0xD0,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0x70,0x01,0x00,0x00,0x8B,0x8C,0x24,0x70,0x01,0x00,0x00,0x0F,0xB6,0xC9,0x48,0xBA,0x00,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x0F,0xB6,0x52,0x08,0x0F,0xB6,0xC2,0x0F,0xB6,0xC0,0x45,0x33,0xC0,0x44,0x89,0x84,0x24,0x04,0x01,0x00,0x00,0x44,0x89,0x84,0x24,0x00,0x01,0x00,0x00,0x44,0x89,0x84,0x24,0x00,0x01,0x00,0x00,0x84,0xC9,0x74,0x12,0x0F,0xB6,0x8C,0x24,0x00,0x01,0x00,0x00,0x83,0xC9,0x01,0x88,0x8C,0x24,0x00,0x01,0x00,0x00,0x84,0xC0,0x74,0x12,0x0F,0xB6,0x8C,0x24,0x00,0x01,0x00,0x00,0x83,0xC9,0x02,0x88,0x8C,0x24,0x00,0x01,0x00,0x00,0x8B,0x8C,0x24,0x00,0x01,0x00,0x00,0x0F,0xB6,0xC9,0x88,0x8C,0x24,0x04,0x01,0x00,0x00,0x84,0xD2,0x74,0x12,0x0F,0xB6,0x8C,0x24,0x04,0x01,0x00,0x00,0x83,0xC9,0x04,0x88,0x8C,0x24,0x04,0x01,0x00,0x00,0x8B,0x8C,0x24,0x04,0x01,0x00,0x00,0x0F,0xB6,0xC9,0x88,0x4F,0x10,0x48,0x8D,0x8C,0x24,0xF0,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x83,0xC7,0x10,0xBD,0x01,0x00,0x00,0x00,0x48,0x8D,0x8C,0x24,0xF0,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x4C,0x63,0xF5,0x48,0xB9,0xE0,0x7E,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x84,0xF5,0x20,0x5F,0x49,0xB9,0x30,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x8B,0x49,0x08,0x4D,0x0F,0xAF,0xCE,0x48,0xBA,0x38,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x44,0x3B,0xCA,0x41,0x0F,0x9D,0xC1,0x45,0x0F,0xB6,0xC9,0xBA,0x96,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0x45,0x84,0xC9,0x75,0x2E,0x49,0xB9,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x49,0x8B,0x09,0x49,0x8B,0x01,0x4C,0x8D,0x4C,0x24,0x20,0x45,0x88,0x01,0x41,0x89,0x51,0x04,0x4C,0x8B,0x4C,0x24,0x20,0x48,0x8B,0xD1,0x4C,0x8B,0xC0,0x33,0xC9,0xE8,0x65,0x39,0x73,0xFF,0x48,0x8D,0x8C,0x24,0xF0,0x00,0x00,0x00,0x48,0x89,0x39,0x89,0x69,0x08,0xC5,0xFA,0x6F,0x84,0x24,0xF0,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x60,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x60,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xD0,0x00,0x00,0x00,0x48,0x8D,0x8C,0x24,0xD0,0x00,0x00,0x00,0x48,0x8B,0x39,0x8B,0x69,0x08,0x48,0x8D,0x8C,0x24,0x78,0x01,0x00,0x00,0x4C,0x8B,0x31,0x44,0x8B,0x79,0x08,0x48,0xB9,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x20,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x33,0xD2,0x48,0xB8,0x20,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x85,0xC0,0x75,0x06,0x33,0xC9,0x33,0xD2,0xEB,0x07,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x83,0xFA,0x00,0x0F,0x86,0xCD,0x07,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x41,0x8B,0xC7,0x4C,0x3B,0xC0,0x0F,0x87,0x76,0x07,0x00,0x00,0x48,0x63,0xC9,0x49,0x03,0xCE,0x3B,0xEA,0x0F,0x87,0x6E,0x07,0x00,0x00,0x48,0x8B,0xD7,0x4C,0x63,0xC5,0xE8,0x4E,0x8F,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x1A,0x46,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x08,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x49,0xB8,0x00,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x40,0x08,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0x58,0x01,0x00,0x00,0x44,0x8B,0x8C,0x24,0x58,0x01,0x00,0x00,0x45,0x0F,0xB6,0xC9,0x48,0xBA,0x00,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x0F,0xB6,0x52,0x08,0x0F,0xB6,0xD2,0x49,0xB8,0x08,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x45,0x0F,0xB6,0x40,0x08,0x33,0xC9,0x89,0x8C,0x24,0xCC,0x00,0x00,0x00,0x89,0x8C,0x24,0xC8,0x00,0x00,0x00,0x89,0x8C,0x24,0xC8,0x00,0x00,0x00,0x45,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x8C,0x24,0xC8,0x00,0x00,0x00,0x41,0x83,0xC9,0x01,0x44,0x88,0x8C,0x24,0xC8,0x00,0x00,0x00,0x84,0xD2,0x74,0x15,0x44,0x0F,0xB6,0x8C,0x24,0xC8,0x00,0x00,0x00,0x41,0x83,0xC9,0x02,0x44,0x88,0x8C,0x24,0xC8,0x00,0x00,0x00,0x44,0x8B,0x8C,0x24,0xC8,0x00,0x00,0x00,0x45,0x0F,0xB6,0xC9,0x44,0x88,0x8C,0x24,0xCC,0x00,0x00,0x00,0x45,0x84,0xC0,0x74,0x15,0x44,0x0F,0xB6,0x8C,0x24,0xCC,0x00,0x00,0x00,0x41,0x83,0xC9,0x04,0x44,0x88,0x8C,0x24,0xCC,0x00,0x00,0x00,0x44,0x8B,0x8C,0x24,0xCC,0x00,0x00,0x00,0x45,0x0F,0xB6,0xC9,0x44,0x88,0x4F,0x10,0x4C,0x8D,0x8C,0x24,0xB8,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x01,0x48,0x83,0xC7,0x10,0xBD,0x01,0x00,0x00,0x00,0x4C,0x8D,0x8C,0x24,0xB8,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x01,0x4C,0x63,0xCD,0x48,0xBA,0x30,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x4C,0x0F,0xAF,0xCA,0x48,0xBA,0x38,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x44,0x3B,0xCA,0x41,0x0F,0x9D,0xC1,0x45,0x0F,0xB6,0xC9,0xBA,0x96,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0x45,0x84,0xC9,0x75,0x2E,0x49,0xB9,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x49,0x8B,0x09,0x49,0x8B,0x01,0x4C,0x8D,0x4C,0x24,0x20,0x45,0x88,0x01,0x41,0x89,0x51,0x04,0x4C,0x8B,0x4C,0x24,0x20,0x48,0x8B,0xD1,0x4C,0x8B,0xC0,0x33,0xC9,0xE8,0xDB,0x36,0x73,0xFF,0x48,0x8D,0x8C,0x24,0xB8,0x00,0x00,0x00,0x48,0x89,0x39,0x89,0x69,0x08,0xC5,0xFA,0x6F,0x84,0x24,0xB8,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x48,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x48,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xA8,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xA8,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x98,0x00,0x00,0x00,0x48,0x8D,0x8C,0x24,0x98,0x00,0x00,0x00,0x48,0x8B,0x39,0x8B,0x69,0x08,0x48,0x8D,0x8C,0x24,0x78,0x01,0x00,0x00,0x4C,0x8B,0x31,0x44,0x8B,0x79,0x08,0x48,0xB9,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x28,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0x48,0xB8,0x28,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x85,0xC0,0x75,0x06,0x33,0xC9,0x33,0xD2,0xEB,0x07,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x83,0xFA,0x00,0x0F,0x86,0x40,0x05,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x41,0x8B,0xC7,0x4C,0x3B,0xC0,0x0F,0x87,0xF5,0x04,0x00,0x00,0x48,0x63,0xC9,0x49,0x03,0xCE,0x3B,0xEA,0x0F,0x87,0xED,0x04,0x00,0x00,0x48,0x8B,0xD7,0x4C,0x63,0xC5,0xE8,0xC1,0x8C,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x8D,0x43,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x00,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x49,0xB8,0x08,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x40,0x08,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0x40,0x01,0x00,0x00,0x44,0x8B,0x8C,0x24,0x40,0x01,0x00,0x00,0x45,0x0F,0xB6,0xC9,0x48,0xBA,0x08,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x0F,0xB6,0x52,0x08,0x0F,0xB6,0xD2,0x49,0xB8,0x00,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x45,0x0F,0xB6,0x40,0x08,0x33,0xC9,0x89,0x8C,0x24,0x94,0x00,0x00,0x00,0x89,0x8C,0x24,0x90,0x00,0x00,0x00,0x89,0x8C,0x24,0x90,0x00,0x00,0x00,0x45,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x8C,0x24,0x90,0x00,0x00,0x00,0x41,0x83,0xC9,0x01,0x44,0x88,0x8C,0x24,0x90,0x00,0x00,0x00,0x84,0xD2,0x74,0x15,0x44,0x0F,0xB6,0x8C,0x24,0x90,0x00,0x00,0x00,0x41,0x83,0xC9,0x02,0x44,0x88,0x8C,0x24,0x90,0x00,0x00,0x00,0x44,0x8B,0x8C,0x24,0x90,0x00,0x00,0x00,0x45,0x0F,0xB6,0xC9,0x44,0x88,0x8C,0x24,0x94,0x00,0x00,0x00,0x45,0x84,0xC0,0x74,0x15,0x44,0x0F,0xB6,0x8C,0x24,0x94,0x00,0x00,0x00,0x41,0x83,0xC9,0x04,0x44,0x88,0x8C,0x24,0x94,0x00,0x00,0x00,0x44,0x8B,0x8C,0x24,0x94,0x00,0x00,0x00,0x45,0x0F,0xB6,0xC9,0x44,0x88,0x4F,0x10,0x4C,0x8D,0x8C,0x24,0x80,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x01,0x48,0x83,0xC7,0x10,0xBD,0x01,0x00,0x00,0x00,0x4C,0x8D,0x8C,0x24,0x80,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x01,0x4C,0x63,0xCD,0x48,0xBA,0x30,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x4C,0x0F,0xAF,0xCA,0x48,0xBA,0x38,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x44,0x3B,0xCA,0x41,0x0F,0x9D,0xC1,0x45,0x0F,0xB6,0xC9,0xBA,0x96,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0x45,0x84,0xC9,0x75,0x2E,0x49,0xB9,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x49,0x8B,0x09,0x49,0x8B,0x01,0x4C,0x8D,0x4C,0x24,0x20,0x45,0x88,0x01,0x41,0x89,0x51,0x04,0x4C,0x8B,0x4C,0x24,0x20,0x48,0x8B,0xD1,0x4C,0x8B,0xC0,0x33,0xC9,0xE8,0x4E,0x34,0x73,0xFF,0x48,0x8D,0x8C,0x24,0x80,0x00,0x00,0x00,0x48,0x89,0x39,0x89,0x69,0x08,0xC5,0xFA,0x6F,0x84,0x24,0x80,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x30,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x30,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x44,0x24,0x70,0xC5,0xFA,0x6F,0x44,0x24,0x70,0xC5,0xFA,0x7F,0x44,0x24,0x60,0x48,0x8D,0x4C,0x24,0x60,0x48,0x8B,0x39,0x8B,0x69,0x08,0x48,0x8D,0x8C,0x24,0x78,0x01,0x00,0x00,0x4C,0x8B,0x31,0x44,0x8B,0x79,0x08,0x48,0xB9,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x30,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x02,0x00,0x00,0x00,0x48,0xB8,0x30,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x85,0xC0,0x75,0x06,0x33,0xC9,0x33,0xD2,0xEB,0x07,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x83,0xFA,0x00,0x0F,0x86,0xBF,0x02,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x41,0x8B,0xC7,0x4C,0x3B,0xC0,0x0F,0x87,0x80,0x02,0x00,0x00,0x48,0x63,0xC9,0x49,0x03,0xCE,0x3B,0xEA,0x0F,0x87,0x78,0x02,0x00,0x00,0x48,0x8B,0xD7,0x4C,0x63,0xC5,0xE8,0x40,0x8A,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x0C,0x41,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x08,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x0F,0xBE,0x42,0x08,0x41,0x8B,0xD0,0x48,0x8B,0x4E,0x08,0xFF,0x56,0x18,0x89,0x84,0x24,0x28,0x01,0x00,0x00,0x44,0x8B,0x8C,0x24,0x28,0x01,0x00,0x00,0x45,0x0F,0xB6,0xC9,0x48,0xBA,0x08,0x6F,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x0F,0xB6,0x52,0x08,0x44,0x0F,0xB6,0xC2,0x45,0x0F,0xB6,0xC0,0x33,0xC9,0x89,0x4C,0x24,0x5C,0x89,0x4C,0x24,0x58,0x89,0x4C,0x24,0x58,0x45,0x84,0xC9,0x74,0x0F,0x44,0x0F,0xB6,0x4C,0x24,0x58,0x41,0x83,0xC9,0x01,0x44,0x88,0x4C,0x24,0x58,0x45,0x84,0xC0,0x74,0x0F,0x44,0x0F,0xB6,0x4C,0x24,0x58,0x41,0x83,0xC9,0x02,0x44,0x88,0x4C,0x24,0x58,0x44,0x8B,0x4C,0x24,0x58,0x45,0x0F,0xB6,0xC9,0x44,0x88,0x4C,0x24,0x5C,0x84,0xD2,0x74,0x0F,0x44,0x0F,0xB6,0x4C,0x24,0x5C,0x41,0x83,0xC9,0x04,0x44,0x88,0x4C,0x24,0x5C,0x44,0x8B,0x4C,0x24,0x5C,0x45,0x0F,0xB6,0xC9,0x44,0x88,0x4F,0x10,0x4C,0x8D,0x4C,0x24,0x48,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x01,0x48,0x83,0xC7,0x10,0xBE,0x01,0x00,0x00,0x00,0x4C,0x8D,0x4C,0x24,0x48,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x01,0x4C,0x63,0xCE,0x48,0xBA,0x30,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x4C,0x0F,0xAF,0xCA,0x48,0xBA,0x38,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x44,0x3B,0xCA,0x41,0x0F,0x9D,0xC1,0x45,0x0F,0xB6,0xC9,0xBA,0x96,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0x45,0x84,0xC9,0x75,0x2E,0x49,0xB9,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x49,0x8B,0x09,0x49,0x8B,0x01,0x4C,0x8D,0x4C,0x24,0x20,0x45,0x88,0x01,0x41,0x89,0x51,0x04,0x4C,0x8B,0x4C,0x24,0x20,0x48,0x8B,0xD1,0x4C,0x8B,0xC0,0x33,0xC9,0xE8,0x16,0x32,0x73,0xFF,0x48,0x8D,0x4C,0x24,0x48,0x48,0x89,0x39,0x89,0x71,0x08,0xC5,0xFA,0x6F,0x44,0x24,0x48,0xC5,0xFA,0x7F,0x84,0x24,0x18,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x18,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x44,0x24,0x38,0xC5,0xFA,0x6F,0x44,0x24,0x38,0xC5,0xFA,0x7F,0x44,0x24,0x28,0x48,0x8D,0x4C,0x24,0x28,0x48,0x8B,0x31,0x8B,0x79,0x08,0x48,0x8D,0x8C,0x24,0x78,0x01,0x00,0x00,0x48,0x8B,0x29,0x44,0x8B,0x71,0x08,0x48,0xB9,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x38,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x03,0x00,0x00,0x00,0x48,0xB8,0x38,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x85,0xC0,0x75,0x06,0x33,0xC9,0x33,0xD2,0xEB,0x07,0x48,0x8D,0x48,0x10,0x8B,0x50,0x08,0x83,0xFA,0x00,0x0F,0x86,0x8D,0x00,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0x28,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x41,0x8B,0xC6,0x4C,0x3B,0xC0,0x77,0x5E,0x48,0x63,0xC9,0x48,0x03,0xCD,0x3B,0xFA,0x77,0x5A,0x48,0x8B,0xD6,0x4C,0x63,0xC7,0xE8,0x16,0x88,0x68,0x39,0x48,0x8B,0xFB,0x48,0x8D,0xB4,0x24,0x78,0x01,0x00,0x00,0xE8,0x96,0x2F,0x24,0x5F,0x48,0xA5,0x48,0x8B,0xC3,0x48,0x81,0xC4,0x88,0x01,0x00,0x00,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0x41,0x5F,0xC3,0xE8,0x7C,0x32,0x74,0xFF,0xCC,0xE8,0x7E,0x32,0x74,0xFF,0xCC,0xE8,0x70,0x32,0x74,0xFF,0xCC,0xE8,0x72,0x32,0x74,0xFF,0xCC,0xE8,0x64,0x32,0x74,0xFF,0xCC,0xE8,0x66,0x32,0x74,0xFF,0xCC,0xE8,0x58,0x32,0x74,0xFF,0xCC,0xE8,0x5A,0x32,0x74,0xFF,0xCC,0xE8,0xBC,0xE7,0x36,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<N8,N4,byte> table(TernaryLogic:byte op)
; location: [7FFDD0EB0AA0h, 7FFDD0EB2C39h]
0000h push r14                      ; PUSH(Push_r64) [R14]                                 encoding(2 bytes) = 41 56
0002h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0003h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0004h push rbp                      ; PUSH(Push_r64) [RBP]                                 encoding(1 byte ) = 55
0005h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0006h sub rsp,0A50h                 ; SUB(Sub_rm64_imm32) [RSP,a50h:imm64]                 encoding(7 bytes) = 48 81 ec 50 0a 00 00
000dh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0010h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0013h lea rdi,[rsp+28h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 28
0018h mov ecx,28Ah                  ; MOV(Mov_r32_imm32) [ECX,28ah:imm32]                  encoding(5 bytes) = b9 8a 02 00 00
001dh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
001fh rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0021h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
0024h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
0027h mov esi,edx                   ; MOV(Mov_r32_rm32) [ESI,EDX]                          encoding(2 bytes) = 8b f2
0029h mov rcx,7FFDD0737EE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0737ee0h:imm64]         encoding(10 bytes) = 48 b9 e0 7e 73 d0 fd 7f 00 00
0033h mov edx,2                     ; MOV(Mov_r32_imm32) [EDX,2h:imm32]                    encoding(5 bytes) = ba 02 00 00 00
0038h call 7FFE300BF3E0h            ; CALL(Call_rel32_64) [5F20E940h:jmp64]                encoding(5 bytes) = e8 03 e9 20 5f
003dh mov rdx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 ba b0 f4 49 3e 7d 02 00 00
0047h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
004ah mov edx,[rdx+1Ch]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 1c
004dh movsxd rdx,edx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EDX]                    encoding(3 bytes) = 48 63 d2
0050h mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
005ah call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 e1 3a 24 5f
005fh lea rcx,[rsp+960h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 60 09 00 00
0067h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
006bh vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
006fh lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
0073h mov [rsp+958h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 58 09 00 00
007bh mov rcx,[rsp+958h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 58 09 00 00
0083h lea rdx,[rsp+960h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 60 09 00 00
008bh mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
008eh mov ecx,[rax+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 48 08
0091h mov [rsp+968h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 68 09 00 00
0098h vmovdqu xmm0,xmmword ptr [rsp+960h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 60 09 00 00
00a1h vmovdqu xmmword ptr [rsp+970h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 70 09 00 00
00aah vmovdqu xmm0,xmmword ptr [rsp+970h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 70 09 00 00
00b3h vmovdqu xmmword ptr [rsp+0A40h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 40 0a 00 00
00bch movzx ecx,sil                 ; MOVZX(Movzx_r32_rm8) [ECX,SIL]                       encoding(4 bytes) = 40 0f b6 ce
00c0h call 7FFDD0EADBC0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFD120h:jmp64]        encoding(5 bytes) = e8 5b d0 ff ff
00c5h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c8h mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
00d2h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
00d7h call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 64 3a 24 5f
00dch mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
00dfh mov rcx,7FFDD0737EE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0737ee0h:imm64]         encoding(10 bytes) = 48 b9 e0 7e 73 d0 fd 7f 00 00
00e9h mov edx,33h                   ; MOV(Mov_r32_imm32) [EDX,33h:imm32]                   encoding(5 bytes) = ba 33 00 00 00
00eeh call 7FFE300F48B0h            ; CALL(Call_rel32_64) [5F243E10h:jmp64]                encoding(5 bytes) = e8 1d 3d 24 5f
00f3h mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
00fdh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0100h movsx r9,byte ptr [rdx+8]     ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4c 0f be 4a 08
0105h mov edx,r9d                   ; MOV(Mov_r32_rm32) [EDX,R9D]                          encoding(3 bytes) = 41 8b d1
0108h mov r8d,r9d                   ; MOV(Mov_r32_rm32) [R8D,R9D]                          encoding(3 bytes) = 45 8b c1
010bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
010eh mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
0112h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
0115h mov [rsp+0A38h],eax           ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 38 0a 00 00
011ch movsx rcx,byte ptr [rsp+0A38h]; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSP:br,SS:sr)]      encoding(9 bytes) = 48 0f be 8c 24 38 0a 00 00
0125h mov [rsp+950h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 50 09 00 00
012ch movzx ecx,byte ptr [rsp+950h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 50 09 00 00
0134h mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
013eh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0141h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
0146h mov [rsp+948h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 48 09 00 00
014dh movzx eax,byte ptr [rsp+948h] ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 84 24 48 09 00 00
0155h mov [rsp+940h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 40 09 00 00
015ch movzx r8d,byte ptr [rsp+940h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 40 09 00 00
0165h mov [rsp+938h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 38 09 00 00
016ch xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
016eh mov [rsp+934h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 34 09 00 00
0175h mov [rsp+930h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 30 09 00 00
017ch mov [rsp+92Ch],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 2c 09 00 00
0183h mov [rsp+92Ch],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 2c 09 00 00
018ah test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
018ch je short 01a0h                ; JE(Je_rel8_64) [1A0h:jmp64]                          encoding(2 bytes) = 74 12
018eh movzx ecx,byte ptr [rsp+92Ch] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 2c 09 00 00
0196h or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
0199h mov [rsp+92Ch],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 2c 09 00 00
01a0h test al,al                    ; TEST(Test_rm8_r8) [AL,AL]                            encoding(2 bytes) = 84 c0
01a2h je short 01b6h                ; JE(Je_rel8_64) [1B6h:jmp64]                          encoding(2 bytes) = 74 12
01a4h movzx ecx,byte ptr [rsp+92Ch] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 2c 09 00 00
01ach or ecx,2                      ; OR(Or_rm32_imm8) [ECX,2h:imm32]                      encoding(3 bytes) = 83 c9 02
01afh mov [rsp+92Ch],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 2c 09 00 00
01b6h mov ecx,[rsp+92Ch]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 2c 09 00 00
01bdh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
01c0h mov [rsp+930h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 30 09 00 00
01c7h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
01cah je short 01deh                ; JE(Je_rel8_64) [1DEh:jmp64]                          encoding(2 bytes) = 74 12
01cch movzx ecx,byte ptr [rsp+930h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 30 09 00 00
01d4h or ecx,4                      ; OR(Or_rm32_imm8) [ECX,4h:imm32]                      encoding(3 bytes) = 83 c9 04
01d7h mov [rsp+930h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 30 09 00 00
01deh mov ecx,[rsp+930h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 30 09 00 00
01e5h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
01e8h mov [rsp+934h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 34 09 00 00
01efh cmp byte ptr [rsp+938h],0     ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(8 bytes) = 80 bc 24 38 09 00 00 00
01f7h je short 020bh                ; JE(Je_rel8_64) [20Bh:jmp64]                          encoding(2 bytes) = 74 12
01f9h movzx ecx,byte ptr [rsp+934h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 34 09 00 00
0201h or ecx,8                      ; OR(Or_rm32_imm8) [ECX,8h:imm32]                      encoding(3 bytes) = 83 c9 08
0204h mov [rsp+934h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 34 09 00 00
020bh mov ecx,[rsp+934h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 34 09 00 00
0212h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0215h mov [rdi+10h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 10
0218h lea rcx,[rsp+8F8h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 f8 08 00 00
0220h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0224h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
0228h add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
022ch mov [rsp+8F0h],rdi            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDI]        encoding(8 bytes) = 48 89 bc 24 f0 08 00 00
0234h mov rcx,[rsp+8F0h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 f0 08 00 00
023ch lea rdx,[rsp+8F8h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 f8 08 00 00
0244h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
0247h mov dword ptr [rsp+900h],1    ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),1h:imm32] encoding(11 bytes) = c7 84 24 00 09 00 00 01 00 00 00
0252h vmovdqu xmm0,xmmword ptr [rsp+8F8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 f8 08 00 00
025bh vmovdqu xmmword ptr [rsp+908h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 08 09 00 00
0264h vmovdqu xmm0,xmmword ptr [rsp+908h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 08 09 00 00
026dh vmovdqu xmmword ptr [rsp+8E0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 e0 08 00 00
0276h mov ecx,[rsp+8E8h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 e8 08 00 00
027dh movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
0280h mov [rsp+8C0h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 c0 08 00 00
0288h mov rcx,[rsp+8C0h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 c0 08 00 00
0290h mov [rsp+8D8h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 d8 08 00 00
0298h mov rcx,[rsp+8D8h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 d8 08 00 00
02a0h mov [rsp+8B8h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 b8 08 00 00
02a8h mov rcx,7FFDD0737EE0h         ; MOV(Mov_r64_imm64) [RCX,7ffdd0737ee0h:imm64]         encoding(10 bytes) = 48 b9 e0 7e 73 d0 fd 7f 00 00
02b2h mov edx,3                     ; MOV(Mov_r32_imm32) [EDX,3h:imm32]                    encoding(5 bytes) = ba 03 00 00 00
02b7h call 7FFE300BF3E0h            ; CALL(Call_rel32_64) [5F20E940h:jmp64]                encoding(5 bytes) = e8 84 e6 20 5f
02bch mov r8,27D3E49F4B8h           ; MOV(Mov_r64_imm64) [R8,27d3e49f4b8h:imm64]           encoding(10 bytes) = 49 b8 b8 f4 49 3e 7d 02 00 00
02c6h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
02c9h mov r8,[r8+8]                 ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(4 bytes) = 4d 8b 40 08
02cdh mov [rsp+8B0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 b0 08 00 00
02d5h mov r8,[rsp+8B8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 b8 08 00 00
02ddh imul r8,[rsp+8B0h]            ; IMUL(Imul_r64_rm64) [R8,mem(64i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f af 84 24 b0 08 00 00
02e6h mov [rsp+8A8h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 a8 08 00 00
02eeh mov r8,[rsp+8A8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 a8 08 00 00
02f6h mov [rsp+8D0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 d0 08 00 00
02feh mov r8,[rsp+8D0h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 d0 08 00 00
0306h mov [rsp+8A0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 a0 08 00 00
030eh mov r8d,[rsp+8A0h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 a0 08 00 00
0316h mov rdx,27D3E49F4C0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4c0h:imm64]          encoding(10 bytes) = 48 ba c0 f4 49 3e 7d 02 00 00
0320h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0323h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
0327h mov [rsp+898h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 98 08 00 00
032fh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0331h mov [rsp+8C8h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 c8 08 00 00
0339h cmp r8d,[rsp+898h]            ; CMP(Cmp_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 3b 84 24 98 08 00 00
0341h setge r8b                     ; SETGE(Setge_rm8) [R8L]                               encoding(4 bytes) = 41 0f 9d c0
0345h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0349h mov dword ptr [rsp+8CCh],96h  ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),96h:imm32] encoding(11 bytes) = c7 84 24 cc 08 00 00 96 00 00 00
0354h mov byte ptr [rsp+8C8h],1     ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(8 bytes) = c6 84 24 c8 08 00 00 01
035ch mov rdx,[rsp+8C8h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 c8 08 00 00
0364h mov [rsp+890h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 90 08 00 00
036ch test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
036fh jne short 039ah               ; JNE(Jne_rel8_64) [39Ah:jmp64]                        encoding(2 bytes) = 75 29
0371h mov r8,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R8,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b8 a8 e9 4a 3e 7d 02 00 00
037bh mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
037eh mov rdx,27D3E4AE9A8h          ; MOV(Mov_r64_imm64) [RDX,27d3e4ae9a8h:imm64]          encoding(10 bytes) = 48 ba a8 e9 4a 3e 7d 02 00 00
0388h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
038bh mov r9,[rsp+890h]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 8c 24 90 08 00 00
0393h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0395h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF732D90h:jmp64]        encoding(5 bytes) = e8 f6 29 73 ff
039ah vmovdqu xmm0,xmmword ptr [rsp+8E0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 e0 08 00 00
03a3h vmovdqu xmmword ptr [rsp+918h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 18 09 00 00
03ach vmovdqu xmm0,xmmword ptr [rsp+918h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 18 09 00 00
03b5h vmovdqu xmmword ptr [rsp+0A28h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 28 0a 00 00
03beh vmovdqu xmm0,xmmword ptr [rsp+0A28h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 28 0a 00 00
03c7h vmovdqu xmmword ptr [rsp+880h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 80 08 00 00
03d0h vmovdqu xmm0,xmmword ptr [rsp+880h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 80 08 00 00
03d9h vmovdqu xmmword ptr [rsp+870h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 70 08 00 00
03e2h vmovdqu xmm0,xmmword ptr [rsp+870h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 70 08 00 00
03ebh vmovdqu xmmword ptr [rsp+860h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 60 08 00 00
03f4h vmovdqu xmm0,xmmword ptr [rsp+0A40h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 0a 00 00
03fdh vmovdqu xmmword ptr [rsp+850h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 50 08 00 00
0406h mov rcx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 b9 b0 f4 49 3e 7d 02 00 00
0410h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
0413h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
0417h mov r11,7FFDD04B0E40h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e40h:imm64]         encoding(10 bytes) = 49 bb 40 0e 4b d0 fd 7f 00 00
0421h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0423h mov rax,7FFDD04B0E40h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e40h:imm64]         encoding(10 bytes) = 48 b8 40 0e 4b d0 fd 7f 00 00
042dh cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
042fh call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
0431h lea rcx,[rsp+820h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 20 08 00 00
0439h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
043dh vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
0441h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
0444h jne short 0458h               ; JNE(Jne_rel8_64) [458h:jmp64]                        encoding(2 bytes) = 75 12
0446h lea rax,[rsp+820h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 20 08 00 00
044eh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0452h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
0456h jmp short 0481h               ; JMP(Jmp_rel8_64) [481h:jmp64]                        encoding(2 bytes) = eb 29
0458h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
045ch mov [rsp+818h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 18 08 00 00
0464h mov rcx,[rsp+818h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 18 08 00 00
046ch lea rdx,[rsp+820h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 20 08 00 00
0474h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
0477h mov ecx,[rax+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 48 08
047ah mov [rsp+828h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 28 08 00 00
0481h vmovdqu xmm0,xmmword ptr [rsp+820h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 20 08 00 00
048ah vmovdqu xmmword ptr [rsp+830h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 30 08 00 00
0493h cmp dword ptr [rsp+838h],0    ; CMP(Cmp_rm32_imm8) [mem(32u,RSP:br,SS:sr),0h:imm32]  encoding(8 bytes) = 83 bc 24 38 08 00 00 00
049bh jbe near ptr 2194h            ; JBE(Jbe_rel32_64) [2194h:jmp64]                      encoding(6 bytes) = 0f 86 f3 1c 00 00
04a1h mov rcx,[rsp+830h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 30 08 00 00
04a9h movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
04ach mov rdx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 ba b0 f4 49 3e 7d 02 00 00
04b6h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
04b9h mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
04bch mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
04bfh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
04c1h add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
04c4h mov eax,[rsp+858h]            ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 84 24 58 08 00 00
04cbh cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
04ceh ja near ptr 214ch             ; JA(Ja_rel32_64) [214Ch:jmp64]                        encoding(6 bytes) = 0f 87 78 1c 00 00
04d4h mov r8,[rsp+850h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 50 08 00 00
04dch lea rax,[rsp+808h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 08 08 00 00
04e4h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
04e8h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
04ech movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
04efh add rcx,r8                    ; ADD(Add_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 03 c8
04f2h mov [rsp+800h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 00 08 00 00
04fah mov rcx,[rsp+800h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 00 08 00 00
0502h lea r8,[rsp+808h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 08 08 00 00
050ah mov [r8],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 08
050dh mov [rsp+810h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 10 08 00 00
0514h vmovdqu xmm0,xmmword ptr [rsp+808h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 08 08 00 00
051dh vmovdqu xmmword ptr [rsp+840h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 40 08 00 00
0526h vmovdqu xmm0,xmmword ptr [rsp+840h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 08 00 00
052fh vmovdqu xmmword ptr [rsp+7F0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 f0 07 00 00
0538h mov ecx,[rsp+868h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 68 08 00 00
053fh cmp ecx,[rsp+7F8h]            ; CMP(Cmp_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 3b 8c 24 f8 07 00 00
0546h ja near ptr 2152h             ; JA(Ja_rel32_64) [2152h:jmp64]                        encoding(6 bytes) = 0f 87 06 1c 00 00
054ch mov rcx,[rsp+7F0h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 f0 07 00 00
0554h mov rdx,[rsp+860h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 60 08 00 00
055ch mov r8d,[rsp+868h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 68 08 00 00
0564h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
0567h call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39688460h:jmp64]                encoding(5 bytes) = e8 f4 7e 68 39
056ch mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
0576h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
057bh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 c0 35 24 5f
0580h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0583h mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
058dh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0590h movsx r8,byte ptr [rdx+8]     ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4c 0f be 42 08
0595h mov edx,r8d                   ; MOV(Mov_r32_rm32) [EDX,R8D]                          encoding(3 bytes) = 41 8b d0
0598h mov r9,27D3E497220h           ; MOV(Mov_r64_imm64) [R9,27d3e497220h:imm64]           encoding(10 bytes) = 49 b9 20 72 49 3e 7d 02 00 00
05a2h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
05a5h movsx r9,byte ptr [r9+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R9:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 49 08
05aah mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
05adh mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
05b1h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
05b4h mov [rsp+0A20h],eax           ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 20 0a 00 00
05bbh movsx r8,byte ptr [rsp+0A20h] ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f be 84 24 20 0a 00 00
05c4h mov [rsp+7E8h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 e8 07 00 00
05cch movzx r8d,byte ptr [rsp+7E8h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 e8 07 00 00
05d5h mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
05dfh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
05e2h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
05e7h mov [rsp+7E0h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 e0 07 00 00
05eeh movzx r9d,byte ptr [rsp+7E0h] ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 e0 07 00 00
05f7h mov [rsp+7D8h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 d8 07 00 00
05feh movzx edx,byte ptr [rsp+7D8h] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 d8 07 00 00
0606h mov rcx,27D3E497220h          ; MOV(Mov_r64_imm64) [RCX,27d3e497220h:imm64]          encoding(10 bytes) = 48 b9 20 72 49 3e 7d 02 00 00
0610h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
0613h movsx rcx,byte ptr [rcx+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RCX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 49 08
0618h mov [rsp+7D0h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 d0 07 00 00
061fh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0621h mov [rsp+7CCh],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 cc 07 00 00
0628h mov [rsp+7C8h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 c8 07 00 00
062fh mov [rsp+7C4h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 c4 07 00 00
0636h mov [rsp+7C4h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 c4 07 00 00
063dh test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0640h je short 0657h                ; JE(Je_rel8_64) [657h:jmp64]                          encoding(2 bytes) = 74 15
0642h movzx r8d,byte ptr [rsp+7C4h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 c4 07 00 00
064bh or r8d,1                      ; OR(Or_rm32_imm8) [R8D,1h:imm32]                      encoding(4 bytes) = 41 83 c8 01
064fh mov [rsp+7C4h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 c4 07 00 00
0657h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
065ah je short 0671h                ; JE(Je_rel8_64) [671h:jmp64]                          encoding(2 bytes) = 74 15
065ch movzx r8d,byte ptr [rsp+7C4h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 c4 07 00 00
0665h or r8d,2                      ; OR(Or_rm32_imm8) [R8D,2h:imm32]                      encoding(4 bytes) = 41 83 c8 02
0669h mov [rsp+7C4h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 c4 07 00 00
0671h mov r8d,[rsp+7C4h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 c4 07 00 00
0679h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
067dh mov [rsp+7C8h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 c8 07 00 00
0685h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0687h je short 069eh                ; JE(Je_rel8_64) [69Eh:jmp64]                          encoding(2 bytes) = 74 15
0689h movzx r8d,byte ptr [rsp+7C8h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 c8 07 00 00
0692h or r8d,4                      ; OR(Or_rm32_imm8) [R8D,4h:imm32]                      encoding(4 bytes) = 41 83 c8 04
0696h mov [rsp+7C8h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 c8 07 00 00
069eh mov r8d,[rsp+7C8h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 c8 07 00 00
06a6h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
06aah mov [rsp+7CCh],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 cc 07 00 00
06b2h cmp byte ptr [rsp+7D0h],0     ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(8 bytes) = 80 bc 24 d0 07 00 00 00
06bah je short 06d1h                ; JE(Je_rel8_64) [6D1h:jmp64]                          encoding(2 bytes) = 74 15
06bch movzx r8d,byte ptr [rsp+7CCh] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 cc 07 00 00
06c5h or r8d,8                      ; OR(Or_rm32_imm8) [R8D,8h:imm32]                      encoding(4 bytes) = 41 83 c8 08
06c9h mov [rsp+7CCh],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 cc 07 00 00
06d1h mov r8d,[rsp+7CCh]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 cc 07 00 00
06d9h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
06ddh mov [rdi+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R8L]           encoding(4 bytes) = 44 88 47 10
06e1h lea r8,[rsp+790h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 90 07 00 00
06e9h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
06edh vmovdqu xmmword ptr [r8],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 00
06f2h add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
06f6h mov [rsp+788h],rdi            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDI]        encoding(8 bytes) = 48 89 bc 24 88 07 00 00
06feh mov r8,[rsp+788h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 88 07 00 00
0706h lea rdx,[rsp+790h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 90 07 00 00
070eh mov [rdx],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),R8]         encoding(3 bytes) = 4c 89 02
0711h mov dword ptr [rsp+798h],1    ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),1h:imm32] encoding(11 bytes) = c7 84 24 98 07 00 00 01 00 00 00
071ch vmovdqu xmm0,xmmword ptr [rsp+790h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 90 07 00 00
0725h vmovdqu xmmword ptr [rsp+7A0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 a0 07 00 00
072eh vmovdqu xmm0,xmmword ptr [rsp+7A0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 a0 07 00 00
0737h vmovdqu xmmword ptr [rsp+778h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 78 07 00 00
0740h mov r8d,[rsp+780h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 80 07 00 00
0748h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
074bh mov [rsp+758h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 58 07 00 00
0753h mov r8,[rsp+758h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 58 07 00 00
075bh mov [rsp+770h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 70 07 00 00
0763h mov r8,[rsp+770h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 70 07 00 00
076bh mov [rsp+750h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 50 07 00 00
0773h mov r8,27D3E49F4B8h           ; MOV(Mov_r64_imm64) [R8,27d3e49f4b8h:imm64]           encoding(10 bytes) = 49 b8 b8 f4 49 3e 7d 02 00 00
077dh mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0780h mov r8,[r8+8]                 ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(4 bytes) = 4d 8b 40 08
0784h mov [rsp+748h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 48 07 00 00
078ch mov r8,[rsp+750h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 50 07 00 00
0794h imul r8,[rsp+748h]            ; IMUL(Imul_r64_rm64) [R8,mem(64i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f af 84 24 48 07 00 00
079dh mov [rsp+740h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 40 07 00 00
07a5h mov r8,[rsp+740h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 40 07 00 00
07adh mov [rsp+768h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 68 07 00 00
07b5h mov r8,[rsp+768h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 68 07 00 00
07bdh mov [rsp+738h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 38 07 00 00
07c5h mov r8d,[rsp+738h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 38 07 00 00
07cdh mov rdx,27D3E49F4C0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4c0h:imm64]          encoding(10 bytes) = 48 ba c0 f4 49 3e 7d 02 00 00
07d7h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
07dah mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
07deh mov [rsp+730h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 30 07 00 00
07e6h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
07e8h mov [rsp+760h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 60 07 00 00
07f0h cmp r8d,[rsp+730h]            ; CMP(Cmp_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 3b 84 24 30 07 00 00
07f8h setge r8b                     ; SETGE(Setge_rm8) [R8L]                               encoding(4 bytes) = 41 0f 9d c0
07fch movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0800h mov dword ptr [rsp+764h],96h  ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),96h:imm32] encoding(11 bytes) = c7 84 24 64 07 00 00 96 00 00 00
080bh mov byte ptr [rsp+760h],1     ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(8 bytes) = c6 84 24 60 07 00 00 01
0813h mov rdx,[rsp+760h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 60 07 00 00
081bh mov [rsp+728h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 28 07 00 00
0823h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0826h jne short 0851h               ; JNE(Jne_rel8_64) [851h:jmp64]                        encoding(2 bytes) = 75 29
0828h mov r8,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R8,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b8 a8 e9 4a 3e 7d 02 00 00
0832h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0835h mov rdx,27D3E4AE9A8h          ; MOV(Mov_r64_imm64) [RDX,27d3e4ae9a8h:imm64]          encoding(10 bytes) = 48 ba a8 e9 4a 3e 7d 02 00 00
083fh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0842h mov r9,[rsp+728h]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 8c 24 28 07 00 00
084ah xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
084ch call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF732D90h:jmp64]        encoding(5 bytes) = e8 3f 25 73 ff
0851h vmovdqu xmm0,xmmword ptr [rsp+778h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 78 07 00 00
085ah vmovdqu xmmword ptr [rsp+7B0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 b0 07 00 00
0863h vmovdqu xmm0,xmmword ptr [rsp+7B0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 b0 07 00 00
086ch vmovdqu xmmword ptr [rsp+0A10h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 10 0a 00 00
0875h vmovdqu xmm0,xmmword ptr [rsp+0A10h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 10 0a 00 00
087eh vmovdqu xmmword ptr [rsp+718h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 18 07 00 00
0887h vmovdqu xmm0,xmmword ptr [rsp+718h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 18 07 00 00
0890h vmovdqu xmmword ptr [rsp+708h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 08 07 00 00
0899h vmovdqu xmm0,xmmword ptr [rsp+708h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 08 07 00 00
08a2h vmovdqu xmmword ptr [rsp+6F8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 f8 06 00 00
08abh vmovdqu xmm0,xmmword ptr [rsp+0A40h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 0a 00 00
08b4h vmovdqu xmmword ptr [rsp+6E8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 e8 06 00 00
08bdh mov rcx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 b9 b0 f4 49 3e 7d 02 00 00
08c7h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
08cah mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
08ceh mov r11,7FFDD04B0E48h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e48h:imm64]         encoding(10 bytes) = 49 bb 48 0e 4b d0 fd 7f 00 00
08d8h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
08ddh mov rax,7FFDD04B0E48h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e48h:imm64]         encoding(10 bytes) = 48 b8 48 0e 4b d0 fd 7f 00 00
08e7h cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
08e9h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
08ebh lea rcx,[rsp+6B8h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 b8 06 00 00
08f3h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
08f7h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
08fbh test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
08feh jne short 0912h               ; JNE(Jne_rel8_64) [912h:jmp64]                        encoding(2 bytes) = 75 12
0900h lea rax,[rsp+6B8h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 b8 06 00 00
0908h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
090ch vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
0910h jmp short 093bh               ; JMP(Jmp_rel8_64) [93Bh:jmp64]                        encoding(2 bytes) = eb 29
0912h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
0916h mov [rsp+6B0h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 b0 06 00 00
091eh mov rcx,[rsp+6B0h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 b0 06 00 00
0926h lea rdx,[rsp+6B8h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 b8 06 00 00
092eh mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
0931h mov ecx,[rax+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 48 08
0934h mov [rsp+6C0h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 c0 06 00 00
093bh vmovdqu xmm0,xmmword ptr [rsp+6B8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 b8 06 00 00
0944h vmovdqu xmmword ptr [rsp+6C8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 c8 06 00 00
094dh cmp dword ptr [rsp+6D0h],0    ; CMP(Cmp_rm32_imm8) [mem(32u,RSP:br,SS:sr),0h:imm32]  encoding(8 bytes) = 83 bc 24 d0 06 00 00 00
0955h jbe near ptr 2194h            ; JBE(Jbe_rel32_64) [2194h:jmp64]                      encoding(6 bytes) = 0f 86 39 18 00 00
095bh mov rcx,[rsp+6C8h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 c8 06 00 00
0963h movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
0966h mov rdx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 ba b0 f4 49 3e 7d 02 00 00
0970h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0973h mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
0976h mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
0979h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
097bh add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
097eh mov eax,[rsp+6F0h]            ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 84 24 f0 06 00 00
0985h cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
0988h ja near ptr 2158h             ; JA(Ja_rel32_64) [2158h:jmp64]                        encoding(6 bytes) = 0f 87 ca 17 00 00
098eh mov r8,[rsp+6E8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 e8 06 00 00
0996h lea rax,[rsp+6A0h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 a0 06 00 00
099eh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
09a2h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
09a6h movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
09a9h add rcx,r8                    ; ADD(Add_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 03 c8
09ach mov [rsp+698h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 98 06 00 00
09b4h mov rcx,[rsp+698h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 98 06 00 00
09bch lea r8,[rsp+6A0h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 a0 06 00 00
09c4h mov [r8],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 08
09c7h mov [rsp+6A8h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 a8 06 00 00
09ceh vmovdqu xmm0,xmmword ptr [rsp+6A0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 a0 06 00 00
09d7h vmovdqu xmmword ptr [rsp+6D8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 d8 06 00 00
09e0h vmovdqu xmm0,xmmword ptr [rsp+6D8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 d8 06 00 00
09e9h vmovdqu xmmword ptr [rsp+688h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 88 06 00 00
09f2h mov ecx,[rsp+700h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 00 07 00 00
09f9h cmp ecx,[rsp+690h]            ; CMP(Cmp_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 3b 8c 24 90 06 00 00
0a00h ja near ptr 215eh             ; JA(Ja_rel32_64) [215Eh:jmp64]                        encoding(6 bytes) = 0f 87 58 17 00 00
0a06h mov rcx,[rsp+688h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 88 06 00 00
0a0eh mov rdx,[rsp+6F8h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 f8 06 00 00
0a16h mov r8d,[rsp+700h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 00 07 00 00
0a1eh movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
0a21h call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39688460h:jmp64]                encoding(5 bytes) = e8 3a 7a 68 39
0a26h mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
0a30h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
0a35h call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 06 31 24 5f
0a3ah mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0a3dh mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
0a47h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0a4ah movsx r9,byte ptr [rdx+8]     ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RDX:br,DS:sr)]       encoding(5 bytes) = 4c 0f be 4a 08
0a4fh mov edx,r9d                   ; MOV(Mov_r32_rm32) [EDX,R9D]                          encoding(3 bytes) = 41 8b d1
0a52h mov r8,27D3E497220h           ; MOV(Mov_r64_imm64) [R8,27d3e497220h:imm64]           encoding(10 bytes) = 49 b8 20 72 49 3e 7d 02 00 00
0a5ch mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0a5fh movsx r8,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 40 08
0a64h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0a67h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
0a6bh call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
0a6eh mov [rsp+0A08h],eax           ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 08 0a 00 00
0a75h movsx r8,byte ptr [rsp+0A08h] ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f be 84 24 08 0a 00 00
0a7eh mov [rsp+680h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 80 06 00 00
0a86h movzx r8d,byte ptr [rsp+680h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 80 06 00 00
0a8fh mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
0a99h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0a9ch movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
0aa1h mov [rsp+678h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 78 06 00 00
0aa8h movzx r9d,byte ptr [rsp+678h] ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 78 06 00 00
0ab1h mov rcx,27D3E497220h          ; MOV(Mov_r64_imm64) [RCX,27d3e497220h:imm64]          encoding(10 bytes) = 48 b9 20 72 49 3e 7d 02 00 00
0abbh mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
0abeh movsx rcx,byte ptr [rcx+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RCX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 49 08
0ac3h mov [rsp+670h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 70 06 00 00
0acah movzx ecx,byte ptr [rsp+670h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 70 06 00 00
0ad2h mov [rsp+668h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 68 06 00 00
0ad9h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0adbh mov [rsp+664h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 64 06 00 00
0ae2h mov [rsp+660h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 60 06 00 00
0ae9h mov [rsp+65Ch],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 5c 06 00 00
0af0h mov [rsp+65Ch],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 5c 06 00 00
0af7h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0afah je short 0b11h                ; JE(Je_rel8_64) [B11h:jmp64]                          encoding(2 bytes) = 74 15
0afch movzx r8d,byte ptr [rsp+65Ch] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 5c 06 00 00
0b05h or r8d,1                      ; OR(Or_rm32_imm8) [R8D,1h:imm32]                      encoding(4 bytes) = 41 83 c8 01
0b09h mov [rsp+65Ch],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 5c 06 00 00
0b11h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
0b14h je short 0b2bh                ; JE(Je_rel8_64) [B2Bh:jmp64]                          encoding(2 bytes) = 74 15
0b16h movzx r8d,byte ptr [rsp+65Ch] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 5c 06 00 00
0b1fh or r8d,2                      ; OR(Or_rm32_imm8) [R8D,2h:imm32]                      encoding(4 bytes) = 41 83 c8 02
0b23h mov [rsp+65Ch],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 5c 06 00 00
0b2bh mov r8d,[rsp+65Ch]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 5c 06 00 00
0b33h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0b37h mov [rsp+660h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 60 06 00 00
0b3fh test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0b41h je short 0b58h                ; JE(Je_rel8_64) [B58h:jmp64]                          encoding(2 bytes) = 74 15
0b43h movzx r8d,byte ptr [rsp+660h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 60 06 00 00
0b4ch or r8d,4                      ; OR(Or_rm32_imm8) [R8D,4h:imm32]                      encoding(4 bytes) = 41 83 c8 04
0b50h mov [rsp+660h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 60 06 00 00
0b58h mov r8d,[rsp+660h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 60 06 00 00
0b60h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0b64h mov [rsp+664h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 64 06 00 00
0b6ch cmp byte ptr [rsp+668h],0     ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(8 bytes) = 80 bc 24 68 06 00 00 00
0b74h je short 0b8bh                ; JE(Je_rel8_64) [B8Bh:jmp64]                          encoding(2 bytes) = 74 15
0b76h movzx r8d,byte ptr [rsp+664h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 64 06 00 00
0b7fh or r8d,8                      ; OR(Or_rm32_imm8) [R8D,8h:imm32]                      encoding(4 bytes) = 41 83 c8 08
0b83h mov [rsp+664h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 64 06 00 00
0b8bh mov r8d,[rsp+664h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 64 06 00 00
0b93h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0b97h mov [rdi+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R8L]           encoding(4 bytes) = 44 88 47 10
0b9bh lea r8,[rsp+628h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 28 06 00 00
0ba3h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0ba7h vmovdqu xmmword ptr [r8],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 00
0bach add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
0bb0h mov [rsp+620h],rdi            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDI]        encoding(8 bytes) = 48 89 bc 24 20 06 00 00
0bb8h mov r8,[rsp+620h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 20 06 00 00
0bc0h lea rdx,[rsp+628h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 28 06 00 00
0bc8h mov [rdx],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),R8]         encoding(3 bytes) = 4c 89 02
0bcbh mov dword ptr [rsp+630h],1    ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),1h:imm32] encoding(11 bytes) = c7 84 24 30 06 00 00 01 00 00 00
0bd6h vmovdqu xmm0,xmmword ptr [rsp+628h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 28 06 00 00
0bdfh vmovdqu xmmword ptr [rsp+638h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 38 06 00 00
0be8h vmovdqu xmm0,xmmword ptr [rsp+638h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 38 06 00 00
0bf1h vmovdqu xmmword ptr [rsp+610h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 10 06 00 00
0bfah mov r8d,[rsp+618h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 18 06 00 00
0c02h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
0c05h mov [rsp+5F0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 f0 05 00 00
0c0dh mov r8,[rsp+5F0h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 f0 05 00 00
0c15h mov [rsp+608h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 08 06 00 00
0c1dh mov r8,[rsp+608h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 08 06 00 00
0c25h mov [rsp+5E8h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 e8 05 00 00
0c2dh mov r8,27D3E49F4B8h           ; MOV(Mov_r64_imm64) [R8,27d3e49f4b8h:imm64]           encoding(10 bytes) = 49 b8 b8 f4 49 3e 7d 02 00 00
0c37h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0c3ah mov r8,[r8+8]                 ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(4 bytes) = 4d 8b 40 08
0c3eh mov [rsp+5E0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 e0 05 00 00
0c46h mov r8,[rsp+5E8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 e8 05 00 00
0c4eh imul r8,[rsp+5E0h]            ; IMUL(Imul_r64_rm64) [R8,mem(64i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f af 84 24 e0 05 00 00
0c57h mov [rsp+5D8h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 d8 05 00 00
0c5fh mov r8,[rsp+5D8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 d8 05 00 00
0c67h mov [rsp+600h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 00 06 00 00
0c6fh mov r8,[rsp+600h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 00 06 00 00
0c77h mov [rsp+5D0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 d0 05 00 00
0c7fh mov r8d,[rsp+5D0h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 d0 05 00 00
0c87h mov rdx,27D3E49F4C0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4c0h:imm64]          encoding(10 bytes) = 48 ba c0 f4 49 3e 7d 02 00 00
0c91h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0c94h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
0c98h mov [rsp+5C8h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 c8 05 00 00
0ca0h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0ca2h mov [rsp+5F8h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 f8 05 00 00
0caah cmp r8d,[rsp+5C8h]            ; CMP(Cmp_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 3b 84 24 c8 05 00 00
0cb2h setge r8b                     ; SETGE(Setge_rm8) [R8L]                               encoding(4 bytes) = 41 0f 9d c0
0cb6h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0cbah mov dword ptr [rsp+5FCh],96h  ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),96h:imm32] encoding(11 bytes) = c7 84 24 fc 05 00 00 96 00 00 00
0cc5h mov byte ptr [rsp+5F8h],1     ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(8 bytes) = c6 84 24 f8 05 00 00 01
0ccdh mov rdx,[rsp+5F8h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 f8 05 00 00
0cd5h mov [rsp+5C0h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 c0 05 00 00
0cddh test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0ce0h jne short 0d0bh               ; JNE(Jne_rel8_64) [D0Bh:jmp64]                        encoding(2 bytes) = 75 29
0ce2h mov r8,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R8,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b8 a8 e9 4a 3e 7d 02 00 00
0cech mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0cefh mov rdx,27D3E4AE9A8h          ; MOV(Mov_r64_imm64) [RDX,27d3e4ae9a8h:imm64]          encoding(10 bytes) = 48 ba a8 e9 4a 3e 7d 02 00 00
0cf9h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0cfch mov r9,[rsp+5C0h]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 8c 24 c0 05 00 00
0d04h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
0d06h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF732D90h:jmp64]        encoding(5 bytes) = e8 85 20 73 ff
0d0bh vmovdqu xmm0,xmmword ptr [rsp+610h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 10 06 00 00
0d14h vmovdqu xmmword ptr [rsp+648h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 48 06 00 00
0d1dh vmovdqu xmm0,xmmword ptr [rsp+648h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 48 06 00 00
0d26h vmovdqu xmmword ptr [rsp+9F8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 f8 09 00 00
0d2fh vmovdqu xmm0,xmmword ptr [rsp+9F8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 f8 09 00 00
0d38h vmovdqu xmmword ptr [rsp+5B0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 b0 05 00 00
0d41h vmovdqu xmm0,xmmword ptr [rsp+5B0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 b0 05 00 00
0d4ah vmovdqu xmmword ptr [rsp+5A0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 a0 05 00 00
0d53h vmovdqu xmm0,xmmword ptr [rsp+5A0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 a0 05 00 00
0d5ch vmovdqu xmmword ptr [rsp+590h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 90 05 00 00
0d65h vmovdqu xmm0,xmmword ptr [rsp+0A40h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 0a 00 00
0d6eh vmovdqu xmmword ptr [rsp+580h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 80 05 00 00
0d77h mov rcx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 b9 b0 f4 49 3e 7d 02 00 00
0d81h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
0d84h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
0d88h mov r11,7FFDD04B0E50h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e50h:imm64]         encoding(10 bytes) = 49 bb 50 0e 4b d0 fd 7f 00 00
0d92h mov edx,2                     ; MOV(Mov_r32_imm32) [EDX,2h:imm32]                    encoding(5 bytes) = ba 02 00 00 00
0d97h mov rax,7FFDD04B0E50h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e50h:imm64]         encoding(10 bytes) = 48 b8 50 0e 4b d0 fd 7f 00 00
0da1h cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
0da3h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
0da5h lea rcx,[rsp+550h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 50 05 00 00
0dadh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0db1h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
0db5h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
0db8h jne short 0dcch               ; JNE(Jne_rel8_64) [DCCh:jmp64]                        encoding(2 bytes) = 75 12
0dbah lea rax,[rsp+550h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 50 05 00 00
0dc2h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0dc6h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
0dcah jmp short 0df5h               ; JMP(Jmp_rel8_64) [DF5h:jmp64]                        encoding(2 bytes) = eb 29
0dcch lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
0dd0h mov [rsp+548h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 48 05 00 00
0dd8h mov rcx,[rsp+548h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 48 05 00 00
0de0h lea rdx,[rsp+550h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 50 05 00 00
0de8h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
0debh mov ecx,[rax+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 48 08
0deeh mov [rsp+558h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 58 05 00 00
0df5h vmovdqu xmm0,xmmword ptr [rsp+550h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 50 05 00 00
0dfeh vmovdqu xmmword ptr [rsp+560h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 60 05 00 00
0e07h cmp dword ptr [rsp+568h],0    ; CMP(Cmp_rm32_imm8) [mem(32u,RSP:br,SS:sr),0h:imm32]  encoding(8 bytes) = 83 bc 24 68 05 00 00 00
0e0fh jbe near ptr 2194h            ; JBE(Jbe_rel32_64) [2194h:jmp64]                      encoding(6 bytes) = 0f 86 7f 13 00 00
0e15h mov rcx,[rsp+560h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 60 05 00 00
0e1dh movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
0e20h mov rdx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 ba b0 f4 49 3e 7d 02 00 00
0e2ah mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0e2dh mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
0e30h mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
0e33h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
0e35h add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
0e38h mov eax,[rsp+588h]            ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 84 24 88 05 00 00
0e3fh cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
0e42h ja near ptr 2164h             ; JA(Ja_rel32_64) [2164h:jmp64]                        encoding(6 bytes) = 0f 87 1c 13 00 00
0e48h mov r8,[rsp+580h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 80 05 00 00
0e50h lea rax,[rsp+538h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 38 05 00 00
0e58h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0e5ch vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
0e60h movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
0e63h add rcx,r8                    ; ADD(Add_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 03 c8
0e66h mov [rsp+530h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 30 05 00 00
0e6eh mov rcx,[rsp+530h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 30 05 00 00
0e76h lea r8,[rsp+538h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 38 05 00 00
0e7eh mov [r8],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 08
0e81h mov [rsp+540h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 40 05 00 00
0e88h vmovdqu xmm0,xmmword ptr [rsp+538h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 38 05 00 00
0e91h vmovdqu xmmword ptr [rsp+570h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 70 05 00 00
0e9ah vmovdqu xmm0,xmmword ptr [rsp+570h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 70 05 00 00
0ea3h vmovdqu xmmword ptr [rsp+520h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 20 05 00 00
0each mov ecx,[rsp+598h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 98 05 00 00
0eb3h cmp ecx,[rsp+528h]            ; CMP(Cmp_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 3b 8c 24 28 05 00 00
0ebah ja near ptr 216ah             ; JA(Ja_rel32_64) [216Ah:jmp64]                        encoding(6 bytes) = 0f 87 aa 12 00 00
0ec0h mov rcx,[rsp+520h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 20 05 00 00
0ec8h mov rdx,[rsp+590h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 90 05 00 00
0ed0h mov r8d,[rsp+598h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 98 05 00 00
0ed8h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
0edbh call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39688460h:jmp64]                encoding(5 bytes) = e8 80 75 68 39
0ee0h mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
0eeah mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
0eefh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 4c 2c 24 5f
0ef4h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0ef7h mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
0f01h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0f04h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
0f09h mov r8,27D3E497220h           ; MOV(Mov_r64_imm64) [R8,27d3e497220h:imm64]           encoding(10 bytes) = 49 b8 20 72 49 3e 7d 02 00 00
0f13h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
0f16h movsx r9,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 48 08
0f1bh mov r8d,r9d                   ; MOV(Mov_r32_rm32) [R8D,R9D]                          encoding(3 bytes) = 45 8b c1
0f1eh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0f21h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
0f25h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
0f28h mov [rsp+9F0h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 f0 09 00 00
0f2fh movsx r8,byte ptr [rsp+9F0h]  ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f be 84 24 f0 09 00 00
0f38h mov [rsp+518h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 18 05 00 00
0f40h movzx r8d,byte ptr [rsp+518h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 18 05 00 00
0f49h mov rdx,27D3E497218h          ; MOV(Mov_r64_imm64) [RDX,27d3e497218h:imm64]          encoding(10 bytes) = 48 ba 18 72 49 3e 7d 02 00 00
0f53h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0f56h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
0f5bh mov [rsp+510h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 10 05 00 00
0f62h movzx edx,byte ptr [rsp+510h] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 10 05 00 00
0f6ah mov r9,27D3E497220h           ; MOV(Mov_r64_imm64) [R9,27d3e497220h:imm64]           encoding(10 bytes) = 49 b9 20 72 49 3e 7d 02 00 00
0f74h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
0f77h movsx r9,byte ptr [r9+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R9:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 49 08
0f7ch mov [rsp+508h],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 08 05 00 00
0f84h movzx ecx,byte ptr [rsp+508h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 08 05 00 00
0f8ch mov [rsp+500h],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 00 05 00 00
0f94h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
0f97h mov [rsp+4FCh],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 fc 04 00 00
0f9fh mov [rsp+4F8h],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 f8 04 00 00
0fa7h mov [rsp+4F4h],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 f4 04 00 00
0fafh mov [rsp+4F4h],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 f4 04 00 00
0fb7h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0fbah je short 0fd1h                ; JE(Je_rel8_64) [FD1h:jmp64]                          encoding(2 bytes) = 74 15
0fbch movzx r8d,byte ptr [rsp+4F4h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 f4 04 00 00
0fc5h or r8d,1                      ; OR(Or_rm32_imm8) [R8D,1h:imm32]                      encoding(4 bytes) = 41 83 c8 01
0fc9h mov [rsp+4F4h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 f4 04 00 00
0fd1h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0fd3h je short 0feah                ; JE(Je_rel8_64) [FEAh:jmp64]                          encoding(2 bytes) = 74 15
0fd5h movzx r8d,byte ptr [rsp+4F4h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 f4 04 00 00
0fdeh or r8d,2                      ; OR(Or_rm32_imm8) [R8D,2h:imm32]                      encoding(4 bytes) = 41 83 c8 02
0fe2h mov [rsp+4F4h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 f4 04 00 00
0feah mov r8d,[rsp+4F4h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 f4 04 00 00
0ff2h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0ff6h mov [rsp+4F8h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 f8 04 00 00
0ffeh test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
1000h je short 1017h                ; JE(Je_rel8_64) [1017h:jmp64]                         encoding(2 bytes) = 74 15
1002h movzx r8d,byte ptr [rsp+4F8h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 f8 04 00 00
100bh or r8d,4                      ; OR(Or_rm32_imm8) [R8D,4h:imm32]                      encoding(4 bytes) = 41 83 c8 04
100fh mov [rsp+4F8h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 f8 04 00 00
1017h mov r8d,[rsp+4F8h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 f8 04 00 00
101fh movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
1023h mov [rsp+4FCh],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 fc 04 00 00
102bh cmp byte ptr [rsp+500h],0     ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(8 bytes) = 80 bc 24 00 05 00 00 00
1033h je short 104ah                ; JE(Je_rel8_64) [104Ah:jmp64]                         encoding(2 bytes) = 74 15
1035h movzx r8d,byte ptr [rsp+4FCh] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 fc 04 00 00
103eh or r8d,8                      ; OR(Or_rm32_imm8) [R8D,8h:imm32]                      encoding(4 bytes) = 41 83 c8 08
1042h mov [rsp+4FCh],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 fc 04 00 00
104ah mov r8d,[rsp+4FCh]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 fc 04 00 00
1052h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
1056h mov [rdi+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R8L]           encoding(4 bytes) = 44 88 47 10
105ah lea r8,[rsp+4C0h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 c0 04 00 00
1062h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1066h vmovdqu xmmword ptr [r8],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 00
106bh add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
106fh mov [rsp+4B8h],rdi            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDI]        encoding(8 bytes) = 48 89 bc 24 b8 04 00 00
1077h mov r8,[rsp+4B8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 b8 04 00 00
107fh lea rdx,[rsp+4C0h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 c0 04 00 00
1087h mov [rdx],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),R8]         encoding(3 bytes) = 4c 89 02
108ah mov dword ptr [rsp+4C8h],1    ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),1h:imm32] encoding(11 bytes) = c7 84 24 c8 04 00 00 01 00 00 00
1095h vmovdqu xmm0,xmmword ptr [rsp+4C0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 c0 04 00 00
109eh vmovdqu xmmword ptr [rsp+4D0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 d0 04 00 00
10a7h vmovdqu xmm0,xmmword ptr [rsp+4D0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 d0 04 00 00
10b0h vmovdqu xmmword ptr [rsp+4A8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 a8 04 00 00
10b9h mov r8d,[rsp+4B0h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 b0 04 00 00
10c1h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
10c4h mov [rsp+488h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 88 04 00 00
10cch mov r8,[rsp+488h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 88 04 00 00
10d4h mov [rsp+4A0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 a0 04 00 00
10dch mov r8,[rsp+4A0h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 a0 04 00 00
10e4h mov [rsp+480h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 80 04 00 00
10ech mov r8,27D3E49F4B8h           ; MOV(Mov_r64_imm64) [R8,27d3e49f4b8h:imm64]           encoding(10 bytes) = 49 b8 b8 f4 49 3e 7d 02 00 00
10f6h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
10f9h mov r8,[r8+8]                 ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(4 bytes) = 4d 8b 40 08
10fdh mov [rsp+478h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 78 04 00 00
1105h mov r8,[rsp+480h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 80 04 00 00
110dh imul r8,[rsp+478h]            ; IMUL(Imul_r64_rm64) [R8,mem(64i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f af 84 24 78 04 00 00
1116h mov [rsp+470h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 70 04 00 00
111eh mov r8,[rsp+470h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 70 04 00 00
1126h mov [rsp+498h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 98 04 00 00
112eh mov r8,[rsp+498h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 98 04 00 00
1136h mov [rsp+468h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 68 04 00 00
113eh mov r8d,[rsp+468h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 68 04 00 00
1146h mov rdx,27D3E49F4C0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4c0h:imm64]          encoding(10 bytes) = 48 ba c0 f4 49 3e 7d 02 00 00
1150h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1153h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
1157h mov [rsp+460h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 60 04 00 00
115fh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
1161h mov [rsp+490h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 90 04 00 00
1169h cmp r8d,[rsp+460h]            ; CMP(Cmp_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 3b 84 24 60 04 00 00
1171h setge r8b                     ; SETGE(Setge_rm8) [R8L]                               encoding(4 bytes) = 41 0f 9d c0
1175h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
1179h mov dword ptr [rsp+494h],96h  ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),96h:imm32] encoding(11 bytes) = c7 84 24 94 04 00 00 96 00 00 00
1184h mov byte ptr [rsp+490h],1     ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(8 bytes) = c6 84 24 90 04 00 00 01
118ch mov rdx,[rsp+490h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 90 04 00 00
1194h mov [rsp+458h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 58 04 00 00
119ch test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
119fh jne short 11cah               ; JNE(Jne_rel8_64) [11CAh:jmp64]                       encoding(2 bytes) = 75 29
11a1h mov r8,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R8,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b8 a8 e9 4a 3e 7d 02 00 00
11abh mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
11aeh mov rdx,27D3E4AE9A8h          ; MOV(Mov_r64_imm64) [RDX,27d3e4ae9a8h:imm64]          encoding(10 bytes) = 48 ba a8 e9 4a 3e 7d 02 00 00
11b8h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
11bbh mov r9,[rsp+458h]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 8c 24 58 04 00 00
11c3h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
11c5h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF732D90h:jmp64]        encoding(5 bytes) = e8 c6 1b 73 ff
11cah vmovdqu xmm0,xmmword ptr [rsp+4A8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 a8 04 00 00
11d3h vmovdqu xmmword ptr [rsp+4E0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 e0 04 00 00
11dch vmovdqu xmm0,xmmword ptr [rsp+4E0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 e0 04 00 00
11e5h vmovdqu xmmword ptr [rsp+9E0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 e0 09 00 00
11eeh vmovdqu xmm0,xmmword ptr [rsp+9E0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 e0 09 00 00
11f7h vmovdqu xmmword ptr [rsp+448h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 48 04 00 00
1200h vmovdqu xmm0,xmmword ptr [rsp+448h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 48 04 00 00
1209h vmovdqu xmmword ptr [rsp+438h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 38 04 00 00
1212h vmovdqu xmm0,xmmword ptr [rsp+438h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 38 04 00 00
121bh vmovdqu xmmword ptr [rsp+428h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 28 04 00 00
1224h vmovdqu xmm0,xmmword ptr [rsp+0A40h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 0a 00 00
122dh vmovdqu xmmword ptr [rsp+418h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 18 04 00 00
1236h mov rcx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 b9 b0 f4 49 3e 7d 02 00 00
1240h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
1243h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
1247h mov r11,7FFDD04B0E58h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e58h:imm64]         encoding(10 bytes) = 49 bb 58 0e 4b d0 fd 7f 00 00
1251h mov edx,3                     ; MOV(Mov_r32_imm32) [EDX,3h:imm32]                    encoding(5 bytes) = ba 03 00 00 00
1256h mov rax,7FFDD04B0E58h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e58h:imm64]         encoding(10 bytes) = 48 b8 58 0e 4b d0 fd 7f 00 00
1260h cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
1262h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
1264h lea rcx,[rsp+3E8h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 e8 03 00 00
126ch vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1270h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
1274h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
1277h jne short 128bh               ; JNE(Jne_rel8_64) [128Bh:jmp64]                       encoding(2 bytes) = 75 12
1279h lea rax,[rsp+3E8h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 e8 03 00 00
1281h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1285h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
1289h jmp short 12b4h               ; JMP(Jmp_rel8_64) [12B4h:jmp64]                       encoding(2 bytes) = eb 29
128bh lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
128fh mov [rsp+3E0h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 e0 03 00 00
1297h mov rcx,[rsp+3E0h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 e0 03 00 00
129fh lea rdx,[rsp+3E8h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 e8 03 00 00
12a7h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
12aah mov ecx,[rax+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 48 08
12adh mov [rsp+3F0h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 f0 03 00 00
12b4h vmovdqu xmm0,xmmword ptr [rsp+3E8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 e8 03 00 00
12bdh vmovdqu xmmword ptr [rsp+3F8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 f8 03 00 00
12c6h cmp dword ptr [rsp+400h],0    ; CMP(Cmp_rm32_imm8) [mem(32u,RSP:br,SS:sr),0h:imm32]  encoding(8 bytes) = 83 bc 24 00 04 00 00 00
12ceh jbe near ptr 2194h            ; JBE(Jbe_rel32_64) [2194h:jmp64]                      encoding(6 bytes) = 0f 86 c0 0e 00 00
12d4h mov rcx,[rsp+3F8h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 f8 03 00 00
12dch movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
12dfh mov rdx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 ba b0 f4 49 3e 7d 02 00 00
12e9h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
12ech mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
12efh mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
12f2h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
12f4h add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
12f7h mov eax,[rsp+420h]            ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 84 24 20 04 00 00
12feh cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
1301h ja near ptr 2170h             ; JA(Ja_rel32_64) [2170h:jmp64]                        encoding(6 bytes) = 0f 87 69 0e 00 00
1307h mov r8,[rsp+418h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 18 04 00 00
130fh lea rax,[rsp+3D0h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 d0 03 00 00
1317h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
131bh vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
131fh movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
1322h add rcx,r8                    ; ADD(Add_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 03 c8
1325h mov [rsp+3C8h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 c8 03 00 00
132dh mov rcx,[rsp+3C8h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 c8 03 00 00
1335h lea r8,[rsp+3D0h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 d0 03 00 00
133dh mov [r8],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 08
1340h mov [rsp+3D8h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 d8 03 00 00
1347h vmovdqu xmm0,xmmword ptr [rsp+3D0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 d0 03 00 00
1350h vmovdqu xmmword ptr [rsp+408h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 08 04 00 00
1359h vmovdqu xmm0,xmmword ptr [rsp+408h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 08 04 00 00
1362h vmovdqu xmmword ptr [rsp+3B8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 b8 03 00 00
136bh mov ecx,[rsp+430h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 30 04 00 00
1372h cmp ecx,[rsp+3C0h]            ; CMP(Cmp_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 3b 8c 24 c0 03 00 00
1379h ja near ptr 2176h             ; JA(Ja_rel32_64) [2176h:jmp64]                        encoding(6 bytes) = 0f 87 f7 0d 00 00
137fh mov rcx,[rsp+3B8h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 b8 03 00 00
1387h mov rdx,[rsp+428h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 28 04 00 00
138fh mov r8d,[rsp+430h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 30 04 00 00
1397h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
139ah call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39688460h:jmp64]                encoding(5 bytes) = e8 c1 70 68 39
139fh mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
13a9h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
13aeh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 8d 27 24 5f
13b3h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
13b6h mov rdx,27D3E497220h          ; MOV(Mov_r64_imm64) [RDX,27d3e497220h:imm64]          encoding(10 bytes) = 48 ba 20 72 49 3e 7d 02 00 00
13c0h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
13c3h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
13c8h mov r8,27D3E497218h           ; MOV(Mov_r64_imm64) [R8,27d3e497218h:imm64]           encoding(10 bytes) = 49 b8 18 72 49 3e 7d 02 00 00
13d2h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
13d5h movsx r9,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 48 08
13dah mov r8d,r9d                   ; MOV(Mov_r32_rm32) [R8D,R9D]                          encoding(3 bytes) = 45 8b c1
13ddh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
13e0h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
13e4h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
13e7h mov [rsp+9D8h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 d8 09 00 00
13eeh movsx r8,byte ptr [rsp+9D8h]  ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f be 84 24 d8 09 00 00
13f7h mov [rsp+3B0h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 b0 03 00 00
13ffh movzx r8d,byte ptr [rsp+3B0h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 b0 03 00 00
1408h mov rdx,27D3E497220h          ; MOV(Mov_r64_imm64) [RDX,27d3e497220h:imm64]          encoding(10 bytes) = 48 ba 20 72 49 3e 7d 02 00 00
1412h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1415h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
141ah mov [rsp+3A8h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 a8 03 00 00
1421h movzx edx,byte ptr [rsp+3A8h] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 a8 03 00 00
1429h mov r9,27D3E497218h           ; MOV(Mov_r64_imm64) [R9,27d3e497218h:imm64]           encoding(10 bytes) = 49 b9 18 72 49 3e 7d 02 00 00
1433h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
1436h movsx r9,byte ptr [r9+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R9:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 49 08
143bh mov [rsp+3A0h],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 a0 03 00 00
1443h movzx ecx,byte ptr [rsp+3A0h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 a0 03 00 00
144bh mov [rsp+398h],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 98 03 00 00
1453h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
1456h mov [rsp+394h],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 94 03 00 00
145eh mov [rsp+390h],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 90 03 00 00
1466h mov [rsp+38Ch],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 8c 03 00 00
146eh mov [rsp+38Ch],r9d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R9D]        encoding(8 bytes) = 44 89 8c 24 8c 03 00 00
1476h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
1479h je short 1490h                ; JE(Je_rel8_64) [1490h:jmp64]                         encoding(2 bytes) = 74 15
147bh movzx r8d,byte ptr [rsp+38Ch] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 8c 03 00 00
1484h or r8d,1                      ; OR(Or_rm32_imm8) [R8D,1h:imm32]                      encoding(4 bytes) = 41 83 c8 01
1488h mov [rsp+38Ch],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 8c 03 00 00
1490h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
1492h je short 14a9h                ; JE(Je_rel8_64) [14A9h:jmp64]                         encoding(2 bytes) = 74 15
1494h movzx r8d,byte ptr [rsp+38Ch] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 8c 03 00 00
149dh or r8d,2                      ; OR(Or_rm32_imm8) [R8D,2h:imm32]                      encoding(4 bytes) = 41 83 c8 02
14a1h mov [rsp+38Ch],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 8c 03 00 00
14a9h mov r8d,[rsp+38Ch]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 8c 03 00 00
14b1h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
14b5h mov [rsp+390h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 90 03 00 00
14bdh test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
14bfh je short 14d6h                ; JE(Je_rel8_64) [14D6h:jmp64]                         encoding(2 bytes) = 74 15
14c1h movzx r8d,byte ptr [rsp+390h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 90 03 00 00
14cah or r8d,4                      ; OR(Or_rm32_imm8) [R8D,4h:imm32]                      encoding(4 bytes) = 41 83 c8 04
14ceh mov [rsp+390h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 90 03 00 00
14d6h mov r8d,[rsp+390h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 90 03 00 00
14deh movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
14e2h mov [rsp+394h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 94 03 00 00
14eah cmp byte ptr [rsp+398h],0     ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(8 bytes) = 80 bc 24 98 03 00 00 00
14f2h je short 1509h                ; JE(Je_rel8_64) [1509h:jmp64]                         encoding(2 bytes) = 74 15
14f4h movzx r8d,byte ptr [rsp+394h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 94 03 00 00
14fdh or r8d,8                      ; OR(Or_rm32_imm8) [R8D,8h:imm32]                      encoding(4 bytes) = 41 83 c8 08
1501h mov [rsp+394h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 94 03 00 00
1509h mov r8d,[rsp+394h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 94 03 00 00
1511h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
1515h mov [rdi+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R8L]           encoding(4 bytes) = 44 88 47 10
1519h lea r8,[rsp+358h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 58 03 00 00
1521h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1525h vmovdqu xmmword ptr [r8],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 00
152ah add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
152eh mov [rsp+350h],rdi            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDI]        encoding(8 bytes) = 48 89 bc 24 50 03 00 00
1536h mov r8,[rsp+350h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 50 03 00 00
153eh lea rdx,[rsp+358h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 58 03 00 00
1546h mov [rdx],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),R8]         encoding(3 bytes) = 4c 89 02
1549h mov dword ptr [rsp+360h],1    ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),1h:imm32] encoding(11 bytes) = c7 84 24 60 03 00 00 01 00 00 00
1554h vmovdqu xmm0,xmmword ptr [rsp+358h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 58 03 00 00
155dh vmovdqu xmmword ptr [rsp+368h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 68 03 00 00
1566h vmovdqu xmm0,xmmword ptr [rsp+368h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 68 03 00 00
156fh vmovdqu xmmword ptr [rsp+340h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 40 03 00 00
1578h mov r8d,[rsp+348h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 48 03 00 00
1580h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
1583h mov [rsp+320h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 20 03 00 00
158bh mov r8,[rsp+320h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 20 03 00 00
1593h mov [rsp+338h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 38 03 00 00
159bh mov r8,[rsp+338h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 38 03 00 00
15a3h mov [rsp+318h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 18 03 00 00
15abh mov r8,27D3E49F4B8h           ; MOV(Mov_r64_imm64) [R8,27d3e49f4b8h:imm64]           encoding(10 bytes) = 49 b8 b8 f4 49 3e 7d 02 00 00
15b5h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
15b8h mov r8,[r8+8]                 ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(4 bytes) = 4d 8b 40 08
15bch mov [rsp+310h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 10 03 00 00
15c4h mov r8,[rsp+318h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 18 03 00 00
15cch imul r8,[rsp+310h]            ; IMUL(Imul_r64_rm64) [R8,mem(64i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f af 84 24 10 03 00 00
15d5h mov [rsp+308h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 08 03 00 00
15ddh mov r8,[rsp+308h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 08 03 00 00
15e5h mov [rsp+330h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 30 03 00 00
15edh mov r8,[rsp+330h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 30 03 00 00
15f5h mov [rsp+300h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 00 03 00 00
15fdh mov r8d,[rsp+300h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 00 03 00 00
1605h mov rdx,27D3E49F4C0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4c0h:imm64]          encoding(10 bytes) = 48 ba c0 f4 49 3e 7d 02 00 00
160fh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1612h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
1616h mov [rsp+2F8h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 f8 02 00 00
161eh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
1620h mov [rsp+328h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 28 03 00 00
1628h cmp r8d,[rsp+2F8h]            ; CMP(Cmp_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 3b 84 24 f8 02 00 00
1630h setge r8b                     ; SETGE(Setge_rm8) [R8L]                               encoding(4 bytes) = 41 0f 9d c0
1634h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
1638h mov dword ptr [rsp+32Ch],96h  ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),96h:imm32] encoding(11 bytes) = c7 84 24 2c 03 00 00 96 00 00 00
1643h mov byte ptr [rsp+328h],1     ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(8 bytes) = c6 84 24 28 03 00 00 01
164bh mov rdx,[rsp+328h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 28 03 00 00
1653h mov [rsp+2F0h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 f0 02 00 00
165bh test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
165eh jne short 1689h               ; JNE(Jne_rel8_64) [1689h:jmp64]                       encoding(2 bytes) = 75 29
1660h mov r8,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R8,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b8 a8 e9 4a 3e 7d 02 00 00
166ah mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
166dh mov rdx,27D3E4AE9A8h          ; MOV(Mov_r64_imm64) [RDX,27d3e4ae9a8h:imm64]          encoding(10 bytes) = 48 ba a8 e9 4a 3e 7d 02 00 00
1677h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
167ah mov r9,[rsp+2F0h]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 8c 24 f0 02 00 00
1682h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
1684h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF732D90h:jmp64]        encoding(5 bytes) = e8 07 17 73 ff
1689h vmovdqu xmm0,xmmword ptr [rsp+340h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 03 00 00
1692h vmovdqu xmmword ptr [rsp+378h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 78 03 00 00
169bh vmovdqu xmm0,xmmword ptr [rsp+378h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 78 03 00 00
16a4h vmovdqu xmmword ptr [rsp+9C8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 c8 09 00 00
16adh vmovdqu xmm0,xmmword ptr [rsp+9C8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 c8 09 00 00
16b6h vmovdqu xmmword ptr [rsp+2E0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 e0 02 00 00
16bfh vmovdqu xmm0,xmmword ptr [rsp+2E0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 e0 02 00 00
16c8h vmovdqu xmmword ptr [rsp+2D0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 d0 02 00 00
16d1h vmovdqu xmm0,xmmword ptr [rsp+2D0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 d0 02 00 00
16dah vmovdqu xmmword ptr [rsp+2C0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 c0 02 00 00
16e3h vmovdqu xmm0,xmmword ptr [rsp+0A40h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 0a 00 00
16ech vmovdqu xmmword ptr [rsp+2B0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 b0 02 00 00
16f5h mov rcx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 b9 b0 f4 49 3e 7d 02 00 00
16ffh mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
1702h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
1706h mov r11,7FFDD04B0E60h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e60h:imm64]         encoding(10 bytes) = 49 bb 60 0e 4b d0 fd 7f 00 00
1710h mov edx,4                     ; MOV(Mov_r32_imm32) [EDX,4h:imm32]                    encoding(5 bytes) = ba 04 00 00 00
1715h mov rax,7FFDD04B0E60h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e60h:imm64]         encoding(10 bytes) = 48 b8 60 0e 4b d0 fd 7f 00 00
171fh cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
1721h call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
1723h lea rcx,[rsp+280h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 80 02 00 00
172bh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
172fh vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
1733h test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
1736h jne short 174ah               ; JNE(Jne_rel8_64) [174Ah:jmp64]                       encoding(2 bytes) = 75 12
1738h lea rax,[rsp+280h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 80 02 00 00
1740h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1744h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
1748h jmp short 1773h               ; JMP(Jmp_rel8_64) [1773h:jmp64]                       encoding(2 bytes) = eb 29
174ah lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
174eh mov [rsp+278h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 78 02 00 00
1756h mov rcx,[rsp+278h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 78 02 00 00
175eh lea rdx,[rsp+280h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 80 02 00 00
1766h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
1769h mov ecx,[rax+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 48 08
176ch mov [rsp+288h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 88 02 00 00
1773h vmovdqu xmm0,xmmword ptr [rsp+280h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 80 02 00 00
177ch vmovdqu xmmword ptr [rsp+290h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 90 02 00 00
1785h cmp dword ptr [rsp+298h],0    ; CMP(Cmp_rm32_imm8) [mem(32u,RSP:br,SS:sr),0h:imm32]  encoding(8 bytes) = 83 bc 24 98 02 00 00 00
178dh jbe near ptr 2194h            ; JBE(Jbe_rel32_64) [2194h:jmp64]                      encoding(6 bytes) = 0f 86 01 0a 00 00
1793h mov rcx,[rsp+290h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 90 02 00 00
179bh movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
179eh mov rdx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 ba b0 f4 49 3e 7d 02 00 00
17a8h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
17abh mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
17aeh mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
17b1h mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
17b3h add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
17b6h mov eax,[rsp+2B8h]            ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 84 24 b8 02 00 00
17bdh cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
17c0h ja near ptr 217ch             ; JA(Ja_rel32_64) [217Ch:jmp64]                        encoding(6 bytes) = 0f 87 b6 09 00 00
17c6h mov r8,[rsp+2B0h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 b0 02 00 00
17ceh lea rax,[rsp+268h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 68 02 00 00
17d6h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
17dah vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
17deh movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
17e1h add rcx,r8                    ; ADD(Add_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 03 c8
17e4h mov [rsp+260h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 60 02 00 00
17ech mov rcx,[rsp+260h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 60 02 00 00
17f4h lea r8,[rsp+268h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 68 02 00 00
17fch mov [r8],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 08
17ffh mov [rsp+270h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 70 02 00 00
1806h vmovdqu xmm0,xmmword ptr [rsp+268h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 68 02 00 00
180fh vmovdqu xmmword ptr [rsp+2A0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 a0 02 00 00
1818h vmovdqu xmm0,xmmword ptr [rsp+2A0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 a0 02 00 00
1821h vmovdqu xmmword ptr [rsp+250h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 50 02 00 00
182ah mov ecx,[rsp+2C8h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 c8 02 00 00
1831h cmp ecx,[rsp+258h]            ; CMP(Cmp_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 3b 8c 24 58 02 00 00
1838h ja near ptr 2182h             ; JA(Ja_rel32_64) [2182h:jmp64]                        encoding(6 bytes) = 0f 87 44 09 00 00
183eh mov rcx,[rsp+250h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 50 02 00 00
1846h mov rdx,[rsp+2C0h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 c0 02 00 00
184eh mov r8d,[rsp+2C8h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 c8 02 00 00
1856h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
1859h call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39688460h:jmp64]                encoding(5 bytes) = e8 02 6c 68 39
185eh mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
1868h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
186dh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 ce 22 24 5f
1872h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
1875h mov rdx,27D3E497220h          ; MOV(Mov_r64_imm64) [RDX,27d3e497220h:imm64]          encoding(10 bytes) = 48 ba 20 72 49 3e 7d 02 00 00
187fh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1882h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
1887h mov r8,27D3E497218h           ; MOV(Mov_r64_imm64) [R8,27d3e497218h:imm64]           encoding(10 bytes) = 49 b8 18 72 49 3e 7d 02 00 00
1891h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
1894h movsx r8,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 40 08
1899h mov r9,27D3E497220h           ; MOV(Mov_r64_imm64) [R9,27d3e497220h:imm64]           encoding(10 bytes) = 49 b9 20 72 49 3e 7d 02 00 00
18a3h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
18a6h movsx r9,byte ptr [r9+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R9:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 49 08
18abh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
18aeh mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
18b2h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
18b5h mov [rsp+9C0h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 c0 09 00 00
18bch movsx r8,byte ptr [rsp+9C0h]  ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f be 84 24 c0 09 00 00
18c5h mov [rsp+248h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 48 02 00 00
18cdh movzx r8d,byte ptr [rsp+248h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 48 02 00 00
18d6h mov rdx,27D3E497220h          ; MOV(Mov_r64_imm64) [RDX,27d3e497220h:imm64]          encoding(10 bytes) = 48 ba 20 72 49 3e 7d 02 00 00
18e0h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
18e3h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
18e8h mov [rsp+240h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 40 02 00 00
18efh movzx edx,byte ptr [rsp+240h] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 40 02 00 00
18f7h mov r9,27D3E497218h           ; MOV(Mov_r64_imm64) [R9,27d3e497218h:imm64]           encoding(10 bytes) = 49 b9 18 72 49 3e 7d 02 00 00
1901h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
1904h movsx r9,byte ptr [r9+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R9:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 49 08
1909h mov [rsp+238h],r9b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R9L]           encoding(8 bytes) = 44 88 8c 24 38 02 00 00
1911h movzx r9d,byte ptr [rsp+238h] ; MOVZX(Movzx_r32_rm8) [R9D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 8c 24 38 02 00 00
191ah mov rcx,27D3E497220h          ; MOV(Mov_r64_imm64) [RCX,27d3e497220h:imm64]          encoding(10 bytes) = 48 b9 20 72 49 3e 7d 02 00 00
1924h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
1927h movsx rcx,byte ptr [rcx+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RCX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 49 08
192ch mov [rsp+230h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 30 02 00 00
1933h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
1935h mov [rsp+22Ch],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 2c 02 00 00
193ch mov [rsp+228h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 28 02 00 00
1943h mov [rsp+224h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 24 02 00 00
194ah mov [rsp+224h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 24 02 00 00
1951h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
1954h je short 196bh                ; JE(Je_rel8_64) [196Bh:jmp64]                         encoding(2 bytes) = 74 15
1956h movzx r8d,byte ptr [rsp+224h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 24 02 00 00
195fh or r8d,1                      ; OR(Or_rm32_imm8) [R8D,1h:imm32]                      encoding(4 bytes) = 41 83 c8 01
1963h mov [rsp+224h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 24 02 00 00
196bh test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
196dh je short 1984h                ; JE(Je_rel8_64) [1984h:jmp64]                         encoding(2 bytes) = 74 15
196fh movzx r8d,byte ptr [rsp+224h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 24 02 00 00
1978h or r8d,2                      ; OR(Or_rm32_imm8) [R8D,2h:imm32]                      encoding(4 bytes) = 41 83 c8 02
197ch mov [rsp+224h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 24 02 00 00
1984h mov r8d,[rsp+224h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 24 02 00 00
198ch movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
1990h mov [rsp+228h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 28 02 00 00
1998h test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
199bh je short 19b2h                ; JE(Je_rel8_64) [19B2h:jmp64]                         encoding(2 bytes) = 74 15
199dh movzx r8d,byte ptr [rsp+228h] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 28 02 00 00
19a6h or r8d,4                      ; OR(Or_rm32_imm8) [R8D,4h:imm32]                      encoding(4 bytes) = 41 83 c8 04
19aah mov [rsp+228h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 28 02 00 00
19b2h mov r8d,[rsp+228h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 28 02 00 00
19bah movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
19beh mov [rsp+22Ch],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 2c 02 00 00
19c6h cmp byte ptr [rsp+230h],0     ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(8 bytes) = 80 bc 24 30 02 00 00 00
19ceh je short 19e5h                ; JE(Je_rel8_64) [19E5h:jmp64]                         encoding(2 bytes) = 74 15
19d0h movzx r8d,byte ptr [rsp+22Ch] ; MOVZX(Movzx_r32_rm8) [R8D,mem(8u,RSP:br,SS:sr)]      encoding(9 bytes) = 44 0f b6 84 24 2c 02 00 00
19d9h or r8d,8                      ; OR(Or_rm32_imm8) [R8D,8h:imm32]                      encoding(4 bytes) = 41 83 c8 08
19ddh mov [rsp+22Ch],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 2c 02 00 00
19e5h mov r8d,[rsp+22Ch]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 2c 02 00 00
19edh movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
19f1h mov [rdi+10h],r8b             ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),R8L]           encoding(4 bytes) = 44 88 47 10
19f5h lea r8,[rsp+1F0h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 f0 01 00 00
19fdh vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1a01h vmovdqu xmmword ptr [r8],xmm0 ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,R8:br,DS:sr),XMM0] encoding(VEX, 5 bytes) = c4 c1 7a 7f 00
1a06h add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
1a0ah mov [rsp+1E8h],rdi            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDI]        encoding(8 bytes) = 48 89 bc 24 e8 01 00 00
1a12h mov r8,[rsp+1E8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 e8 01 00 00
1a1ah lea rdx,[rsp+1F0h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 f0 01 00 00
1a22h mov [rdx],r8                  ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),R8]         encoding(3 bytes) = 4c 89 02
1a25h mov dword ptr [rsp+1F8h],1    ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),1h:imm32] encoding(11 bytes) = c7 84 24 f8 01 00 00 01 00 00 00
1a30h vmovdqu xmm0,xmmword ptr [rsp+1F0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 f0 01 00 00
1a39h vmovdqu xmmword ptr [rsp+200h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 00 02 00 00
1a42h vmovdqu xmm0,xmmword ptr [rsp+200h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 00 02 00 00
1a4bh vmovdqu xmmword ptr [rsp+1D8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 d8 01 00 00
1a54h mov r8d,[rsp+1E0h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 e0 01 00 00
1a5ch movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
1a5fh mov [rsp+1B8h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 b8 01 00 00
1a67h mov r8,[rsp+1B8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 b8 01 00 00
1a6fh mov [rsp+1D0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 d0 01 00 00
1a77h mov r8,[rsp+1D0h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 d0 01 00 00
1a7fh mov [rsp+1B0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 b0 01 00 00
1a87h mov r8,27D3E49F4B8h           ; MOV(Mov_r64_imm64) [R8,27d3e49f4b8h:imm64]           encoding(10 bytes) = 49 b8 b8 f4 49 3e 7d 02 00 00
1a91h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
1a94h mov r8,[r8+8]                 ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(4 bytes) = 4d 8b 40 08
1a98h mov [rsp+1A8h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 a8 01 00 00
1aa0h mov r8,[rsp+1B0h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 b0 01 00 00
1aa8h imul r8,[rsp+1A8h]            ; IMUL(Imul_r64_rm64) [R8,mem(64i,RSP:br,SS:sr)]       encoding(9 bytes) = 4c 0f af 84 24 a8 01 00 00
1ab1h mov [rsp+1A0h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 a0 01 00 00
1ab9h mov r8,[rsp+1A0h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 a0 01 00 00
1ac1h mov [rsp+1C8h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 c8 01 00 00
1ac9h mov r8,[rsp+1C8h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 c8 01 00 00
1ad1h mov [rsp+198h],r8             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(8 bytes) = 4c 89 84 24 98 01 00 00
1ad9h mov r8d,[rsp+198h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 98 01 00 00
1ae1h mov rdx,27D3E49F4C0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4c0h:imm64]          encoding(10 bytes) = 48 ba c0 f4 49 3e 7d 02 00 00
1aebh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1aeeh mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
1af2h mov [rsp+190h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 90 01 00 00
1afah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
1afch mov [rsp+1C0h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 c0 01 00 00
1b04h cmp r8d,[rsp+190h]            ; CMP(Cmp_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 3b 84 24 90 01 00 00
1b0ch setge r8b                     ; SETGE(Setge_rm8) [R8L]                               encoding(4 bytes) = 41 0f 9d c0
1b10h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
1b14h mov dword ptr [rsp+1C4h],96h  ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),96h:imm32] encoding(11 bytes) = c7 84 24 c4 01 00 00 96 00 00 00
1b1fh mov byte ptr [rsp+1C0h],1     ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),1h:imm8]     encoding(8 bytes) = c6 84 24 c0 01 00 00 01
1b27h mov rdx,[rsp+1C0h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 c0 01 00 00
1b2fh mov [rsp+188h],rdx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(8 bytes) = 48 89 94 24 88 01 00 00
1b37h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
1b3ah jne short 1b65h               ; JNE(Jne_rel8_64) [1B65h:jmp64]                       encoding(2 bytes) = 75 29
1b3ch mov r8,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R8,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b8 a8 e9 4a 3e 7d 02 00 00
1b46h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
1b49h mov rdx,27D3E4AE9A8h          ; MOV(Mov_r64_imm64) [RDX,27d3e4ae9a8h:imm64]          encoding(10 bytes) = 48 ba a8 e9 4a 3e 7d 02 00 00
1b53h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1b56h mov r9,[rsp+188h]             ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 8c 24 88 01 00 00
1b5eh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
1b60h call 7FFDD05E3830h            ; CALL(Call_rel32_64) [FFFFFFFFFF732D90h:jmp64]        encoding(5 bytes) = e8 2b 12 73 ff
1b65h vmovdqu xmm0,xmmword ptr [rsp+1D8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 d8 01 00 00
1b6eh vmovdqu xmmword ptr [rsp+210h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 10 02 00 00
1b77h vmovdqu xmm0,xmmword ptr [rsp+210h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 10 02 00 00
1b80h vmovdqu xmmword ptr [rsp+9B0h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 b0 09 00 00
1b89h vmovdqu xmm0,xmmword ptr [rsp+9B0h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 b0 09 00 00
1b92h vmovdqu xmmword ptr [rsp+178h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 78 01 00 00
1b9bh vmovdqu xmm0,xmmword ptr [rsp+178h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 78 01 00 00
1ba4h vmovdqu xmmword ptr [rsp+168h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 68 01 00 00
1badh vmovdqu xmm0,xmmword ptr [rsp+168h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 68 01 00 00
1bb6h vmovdqu xmmword ptr [rsp+158h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 58 01 00 00
1bbfh vmovdqu xmm0,xmmword ptr [rsp+0A40h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 40 0a 00 00
1bc8h vmovdqu xmmword ptr [rsp+148h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 48 01 00 00
1bd1h mov rcx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 b9 b0 f4 49 3e 7d 02 00 00
1bdbh mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
1bdeh mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
1be2h mov r11,7FFDD04B0E68h         ; MOV(Mov_r64_imm64) [R11,7ffdd04b0e68h:imm64]         encoding(10 bytes) = 49 bb 68 0e 4b d0 fd 7f 00 00
1bech mov edx,5                     ; MOV(Mov_r32_imm32) [EDX,5h:imm32]                    encoding(5 bytes) = ba 05 00 00 00
1bf1h mov rax,7FFDD04B0E68h         ; MOV(Mov_r64_imm64) [RAX,7ffdd04b0e68h:imm64]         encoding(10 bytes) = 48 b8 68 0e 4b d0 fd 7f 00 00
1bfbh cmp [rcx],ecx                 ; CMP(Cmp_rm32_r32) [mem(32u,RCX:br,DS:sr),ECX]        encoding(2 bytes) = 39 09
1bfdh call qword ptr [rax]          ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(2 bytes) = ff 10
1bffh lea rcx,[rsp+118h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 18 01 00 00
1c07h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1c0bh vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
1c0fh test rax,rax                  ; TEST(Test_rm64_r64) [RAX,RAX]                        encoding(3 bytes) = 48 85 c0
1c12h jne short 1c26h               ; JNE(Jne_rel8_64) [1C26h:jmp64]                       encoding(2 bytes) = 75 12
1c14h lea rax,[rsp+118h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 18 01 00 00
1c1ch vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1c20h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
1c24h jmp short 1c4fh               ; JMP(Jmp_rel8_64) [1C4Fh:jmp64]                       encoding(2 bytes) = eb 29
1c26h lea rcx,[rax+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RAX:br,DS:sr)]       encoding(4 bytes) = 48 8d 48 10
1c2ah mov [rsp+110h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 10 01 00 00
1c32h mov rcx,[rsp+110h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 10 01 00 00
1c3ah lea rdx,[rsp+118h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 18 01 00 00
1c42h mov [rdx],rcx                 ; MOV(Mov_rm64_r64) [mem(64u,RDX:br,DS:sr),RCX]        encoding(3 bytes) = 48 89 0a
1c45h mov ecx,[rax+8]               ; MOV(Mov_r32_rm32) [ECX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 48 08
1c48h mov [rsp+120h],ecx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),ECX]        encoding(7 bytes) = 89 8c 24 20 01 00 00
1c4fh vmovdqu xmm0,xmmword ptr [rsp+118h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 18 01 00 00
1c58h vmovdqu xmmword ptr [rsp+128h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 28 01 00 00
1c61h cmp dword ptr [rsp+130h],0    ; CMP(Cmp_rm32_imm8) [mem(32u,RSP:br,SS:sr),0h:imm32]  encoding(8 bytes) = 83 bc 24 30 01 00 00 00
1c69h jbe near ptr 2194h            ; JBE(Jbe_rel32_64) [2194h:jmp64]                      encoding(6 bytes) = 0f 86 25 05 00 00
1c6fh mov rcx,[rsp+128h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 28 01 00 00
1c77h movzx ecx,word ptr [rcx]      ; MOVZX(Movzx_r32_rm16) [ECX,mem(16u,RCX:br,DS:sr)]    encoding(3 bytes) = 0f b7 09
1c7ah mov rdx,27D3E49F4B0h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b0h:imm64]          encoding(10 bytes) = 48 ba b0 f4 49 3e 7d 02 00 00
1c84h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1c87h mov edx,[rdx+18h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RDX:br,DS:sr)]        encoding(3 bytes) = 8b 52 18
1c8ah mov r8d,ecx                   ; MOV(Mov_r32_rm32) [R8D,ECX]                          encoding(3 bytes) = 44 8b c1
1c8dh mov eax,edx                   ; MOV(Mov_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 8b c2
1c8fh add r8,rax                    ; ADD(Add_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 03 c0
1c92h mov eax,[rsp+150h]            ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 84 24 50 01 00 00
1c99h cmp r8,rax                    ; CMP(Cmp_r64_rm64) [R8,RAX]                           encoding(3 bytes) = 4c 3b c0
1c9ch ja near ptr 2188h             ; JA(Ja_rel32_64) [2188h:jmp64]                        encoding(6 bytes) = 0f 87 e6 04 00 00
1ca2h mov r8,[rsp+148h]             ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(8 bytes) = 4c 8b 84 24 48 01 00 00
1caah lea rax,[rsp+100h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 00 01 00 00
1cb2h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1cb6h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
1cbah movsxd rcx,ecx                ; MOVSXD(Movsxd_r64_rm32) [RCX,ECX]                    encoding(3 bytes) = 48 63 c9
1cbdh add rcx,r8                    ; ADD(Add_r64_rm64) [RCX,R8]                           encoding(3 bytes) = 49 03 c8
1cc0h mov [rsp+0F8h],rcx            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(8 bytes) = 48 89 8c 24 f8 00 00 00
1cc8h mov rcx,[rsp+0F8h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 f8 00 00 00
1cd0h lea r8,[rsp+100h]             ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(8 bytes) = 4c 8d 84 24 00 01 00 00
1cd8h mov [r8],rcx                  ; MOV(Mov_rm64_r64) [mem(64u,R8:br,DS:sr),RCX]         encoding(3 bytes) = 49 89 08
1cdbh mov [rsp+108h],edx            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(7 bytes) = 89 94 24 08 01 00 00
1ce2h vmovdqu xmm0,xmmword ptr [rsp+100h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 00 01 00 00
1cebh vmovdqu xmmword ptr [rsp+138h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 38 01 00 00
1cf4h vmovdqu xmm0,xmmword ptr [rsp+138h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 38 01 00 00
1cfdh vmovdqu xmmword ptr [rsp+0E8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 e8 00 00 00
1d06h mov ecx,[rsp+160h]            ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 8c 24 60 01 00 00
1d0dh cmp ecx,[rsp+0F0h]            ; CMP(Cmp_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 3b 8c 24 f0 00 00 00
1d14h ja near ptr 218eh             ; JA(Ja_rel32_64) [218Eh:jmp64]                        encoding(6 bytes) = 0f 87 74 04 00 00
1d1ah mov rcx,[rsp+0E8h]            ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 8c 24 e8 00 00 00
1d22h mov rdx,[rsp+158h]            ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 58 01 00 00
1d2ah mov r8d,[rsp+160h]            ; MOV(Mov_r32_rm32) [R8D,mem(32u,RSP:br,SS:sr)]        encoding(8 bytes) = 44 8b 84 24 60 01 00 00
1d32h movsxd r8,r8d                 ; MOVSXD(Movsxd_r64_rm32) [R8,R8D]                     encoding(3 bytes) = 4d 63 c0
1d35h call 7FFE0A538F00h            ; CALL(Call_rel32_64) [39688460h:jmp64]                encoding(5 bytes) = e8 26 67 68 39
1d3ah mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
1d44h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
1d49h call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 f2 1d 24 5f
1d4eh mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
1d51h mov rdx,27D3E497220h          ; MOV(Mov_r64_imm64) [RDX,27d3e497220h:imm64]          encoding(10 bytes) = 48 ba 20 72 49 3e 7d 02 00 00
1d5bh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1d5eh movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
1d63h mov r8,27D3E497220h           ; MOV(Mov_r64_imm64) [R8,27d3e497220h:imm64]           encoding(10 bytes) = 49 b8 20 72 49 3e 7d 02 00 00
1d6dh mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
1d70h movsx r8,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 40 08
1d75h mov r9,27D3E497218h           ; MOV(Mov_r64_imm64) [R9,27d3e497218h:imm64]           encoding(10 bytes) = 49 b9 18 72 49 3e 7d 02 00 00
1d7fh mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
1d82h movsx r9,byte ptr [r9+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R9:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 49 08
1d87h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
1d8ah mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
1d8eh call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
1d91h mov [rsp+9A8h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 a8 09 00 00
1d98h movsx rdx,byte ptr [rsp+9A8h] ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RSP:br,SS:sr)]      encoding(9 bytes) = 48 0f be 94 24 a8 09 00 00
1da1h mov [rsp+0E0h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 e0 00 00 00
1da8h movzx edx,byte ptr [rsp+0E0h] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 e0 00 00 00
1db0h mov rcx,27D3E497218h          ; MOV(Mov_r64_imm64) [RCX,27d3e497218h:imm64]          encoding(10 bytes) = 48 b9 18 72 49 3e 7d 02 00 00
1dbah mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
1dbdh movsx rcx,byte ptr [rcx+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RCX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 49 08
1dc2h mov [rsp+0D8h],cl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 d8 00 00 00
1dc9h movzx ecx,byte ptr [rsp+0D8h] ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 8c 24 d8 00 00 00
1dd1h mov rax,27D3E497220h          ; MOV(Mov_r64_imm64) [RAX,27d3e497220h:imm64]          encoding(10 bytes) = 48 b8 20 72 49 3e 7d 02 00 00
1ddbh mov rax,[rax]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RAX:br,DS:sr)]        encoding(3 bytes) = 48 8b 00
1ddeh movsx rax,byte ptr [rax+8]    ; MOVSX(Movsx_r64_rm8) [RAX,mem(8i,RAX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 40 08
1de3h mov [rsp+0D0h],al             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(7 bytes) = 88 84 24 d0 00 00 00
1deah movzx eax,byte ptr [rsp+0D0h] ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 84 24 d0 00 00 00
1df2h mov r8,27D3E497220h           ; MOV(Mov_r64_imm64) [R8,27d3e497220h:imm64]           encoding(10 bytes) = 49 b8 20 72 49 3e 7d 02 00 00
1dfch mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
1dffh movsx r8,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 40 08
1e04h mov [rsp+0C8h],r8b            ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),R8L]           encoding(8 bytes) = 44 88 84 24 c8 00 00 00
1e0ch xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
1e0fh mov [rsp+0C4h],r8d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(8 bytes) = 44 89 84 24 c4 00 00 00
1e17h mov [rsp+0C0h],r8d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(8 bytes) = 44 89 84 24 c0 00 00 00
1e1fh mov [rsp+0BCh],r8d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(8 bytes) = 44 89 84 24 bc 00 00 00
1e27h mov [rsp+0BCh],r8d            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),R8D]        encoding(8 bytes) = 44 89 84 24 bc 00 00 00
1e2fh test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
1e31h je short 1e45h                ; JE(Je_rel8_64) [1E45h:jmp64]                         encoding(2 bytes) = 74 12
1e33h movzx edx,byte ptr [rsp+0BCh] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 bc 00 00 00
1e3bh or edx,1                      ; OR(Or_rm32_imm8) [EDX,1h:imm32]                      encoding(3 bytes) = 83 ca 01
1e3eh mov [rsp+0BCh],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 bc 00 00 00
1e45h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
1e47h je short 1e5bh                ; JE(Je_rel8_64) [1E5Bh:jmp64]                         encoding(2 bytes) = 74 12
1e49h movzx edx,byte ptr [rsp+0BCh] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 bc 00 00 00
1e51h or edx,2                      ; OR(Or_rm32_imm8) [EDX,2h:imm32]                      encoding(3 bytes) = 83 ca 02
1e54h mov [rsp+0BCh],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 bc 00 00 00
1e5bh mov edx,[rsp+0BCh]            ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 94 24 bc 00 00 00
1e62h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
1e65h mov [rsp+0C0h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 c0 00 00 00
1e6ch test al,al                    ; TEST(Test_rm8_r8) [AL,AL]                            encoding(2 bytes) = 84 c0
1e6eh je short 1e82h                ; JE(Je_rel8_64) [1E82h:jmp64]                         encoding(2 bytes) = 74 12
1e70h movzx edx,byte ptr [rsp+0C0h] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 c0 00 00 00
1e78h or edx,4                      ; OR(Or_rm32_imm8) [EDX,4h:imm32]                      encoding(3 bytes) = 83 ca 04
1e7bh mov [rsp+0C0h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 c0 00 00 00
1e82h mov edx,[rsp+0C0h]            ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 94 24 c0 00 00 00
1e89h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
1e8ch mov [rsp+0C4h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 c4 00 00 00
1e93h cmp byte ptr [rsp+0C8h],0     ; CMP(Cmp_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(8 bytes) = 80 bc 24 c8 00 00 00 00
1e9bh je short 1eafh                ; JE(Je_rel8_64) [1EAFh:jmp64]                         encoding(2 bytes) = 74 12
1e9dh movzx edx,byte ptr [rsp+0C4h] ; MOVZX(Movzx_r32_rm8) [EDX,mem(8u,RSP:br,SS:sr)]      encoding(8 bytes) = 0f b6 94 24 c4 00 00 00
1ea5h or edx,8                      ; OR(Or_rm32_imm8) [EDX,8h:imm32]                      encoding(3 bytes) = 83 ca 08
1ea8h mov [rsp+0C4h],dl             ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),DL]            encoding(7 bytes) = 88 94 24 c4 00 00 00
1eafh mov edx,[rsp+0C4h]            ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(7 bytes) = 8b 94 24 c4 00 00 00
1eb6h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
1eb9h mov [rdi+10h],dl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),DL]            encoding(3 bytes) = 88 57 10
1ebch lea rdx,[rsp+88h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 88 00 00 00
1ec4h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
1ec8h vmovdqu xmmword ptr [rdx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RDX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 02
1ecch add rdi,10h                   ; ADD(Add_rm64_imm8) [RDI,10h:imm64]                   encoding(4 bytes) = 48 83 c7 10
1ed0h mov [rsp+80h],rdi             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDI]        encoding(8 bytes) = 48 89 bc 24 80 00 00 00
1ed8h mov rdx,[rsp+80h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(8 bytes) = 48 8b 94 24 80 00 00 00
1ee0h lea rcx,[rsp+88h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 88 00 00 00
1ee8h mov [rcx],rdx                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RDX]        encoding(3 bytes) = 48 89 11
1eebh mov dword ptr [rsp+90h],1     ; MOV(Mov_rm32_imm32) [mem(32u,RSP:br,SS:sr),1h:imm32] encoding(11 bytes) = c7 84 24 90 00 00 00 01 00 00 00
1ef6h vmovdqu xmm0,xmmword ptr [rsp+88h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 88 00 00 00
1effh vmovdqu xmmword ptr [rsp+98h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 98 00 00 00
1f08h vmovdqu xmm0,xmmword ptr [rsp+98h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 98 00 00 00
1f11h vmovdqu xmmword ptr [rsp+70h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 70
1f17h mov edx,[rsp+78h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 78
1f1bh movsxd rdx,edx                ; MOVSXD(Movsxd_r64_rm32) [RDX,EDX]                    encoding(3 bytes) = 48 63 d2
1f1eh mov [rsp+50h],rdx             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(5 bytes) = 48 89 54 24 50
1f23h mov rdx,[rsp+50h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 50
1f28h mov [rsp+68h],rdx             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(5 bytes) = 48 89 54 24 68
1f2dh mov rdx,[rsp+68h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 68
1f32h mov [rsp+48h],rdx             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(5 bytes) = 48 89 54 24 48
1f37h mov rdx,27D3E49F4B8h          ; MOV(Mov_r64_imm64) [RDX,27d3e49f4b8h:imm64]          encoding(10 bytes) = 48 ba b8 f4 49 3e 7d 02 00 00
1f41h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
1f44h mov rdx,[rdx+8]               ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(4 bytes) = 48 8b 52 08
1f48h mov [rsp+40h],rdx             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(5 bytes) = 48 89 54 24 40
1f4dh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
1f4fh mov [rsp+38h],rdx             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RDX]        encoding(5 bytes) = 48 89 54 24 38
1f54h mov rdx,[rsp+48h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 48
1f59h imul rdx,[rsp+40h]            ; IMUL(Imul_r64_rm64) [RDX,mem(64i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f af 54 24 40
1f5fh lea rcx,[rsp+38h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 38
1f64h call 7FFDD0B812A0h            ; CALL(Call_rel32_64) [FFFFFFFFFFCD0800h:jmp64]        encoding(5 bytes) = e8 97 e8 cc ff
1f69h mov rcx,[rsp+38h]             ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 4c 24 38
1f6eh mov [rsp+60h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(5 bytes) = 48 89 4c 24 60
1f73h mov rcx,[rsp+60h]             ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 4c 24 60
1f78h call 7FFDD0B811E8h            ; CALL(Call_rel32_64) [FFFFFFFFFFCD0748h:jmp64]        encoding(5 bytes) = e8 cb e7 cc ff
1f7dh mov edi,eax                   ; MOV(Mov_r32_rm32) [EDI,EAX]                          encoding(2 bytes) = 8b f8
1f7fh xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
1f81h mov [rsp+58h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RCX]        encoding(5 bytes) = 48 89 4c 24 58
1f86h mov rcx,27D3E49F4C0h          ; MOV(Mov_r64_imm64) [RCX,27d3e49f4c0h:imm64]          encoding(10 bytes) = 48 b9 c0 f4 49 3e 7d 02 00 00
1f90h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
1f93h mov rcx,[rcx+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(4 bytes) = 48 8b 49 08
1f97h call 7FFDD0B811E8h            ; CALL(Call_rel32_64) [FFFFFFFFFFCD0748h:jmp64]        encoding(5 bytes) = e8 ac e7 cc ff
1f9ch cmp eax,edi                   ; CMP(Cmp_r32_rm32) [EAX,EDI]                          encoding(2 bytes) = 3b c7
1f9eh setle dil                     ; SETLE(Setle_rm8) [DIL]                               encoding(4 bytes) = 40 0f 9e c7
1fa2h movzx edi,dil                 ; MOVZX(Movzx_r32_rm8) [EDI,DIL]                       encoding(4 bytes) = 40 0f b6 ff
1fa6h lea rcx,[rsp+58h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 58
1fabh mov edx,96h                   ; MOV(Mov_r32_imm32) [EDX,96h:imm32]                   encoding(5 bytes) = ba 96 00 00 00
1fb0h call 7FFE0A84AFD0h            ; CALL(Call_rel32_64) [3999A530h:jmp64]                encoding(5 bytes) = e8 7b 85 99 39
1fb5h mov r8,[rsp+58h]              ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 44 24 58
1fbah mov [rsp+20h],r8              ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R8]         encoding(5 bytes) = 4c 89 44 24 20
1fbfh mov r8,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R8,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b8 a8 e9 4a 3e 7d 02 00 00
1fc9h mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
1fcch mov r9,27D3E4AE9A8h           ; MOV(Mov_r64_imm64) [R9,27d3e4ae9a8h:imm64]           encoding(10 bytes) = 49 b9 a8 e9 4a 3e 7d 02 00 00
1fd6h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
1fd9h mov ecx,edi                   ; MOV(Mov_r32_rm32) [ECX,EDI]                          encoding(2 bytes) = 8b cf
1fdbh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
1fddh call 7FFDD05E3838h            ; CALL(Call_rel32_64) [FFFFFFFFFF732D98h:jmp64]        encoding(5 bytes) = e8 b6 0d 73 ff
1fe2h vmovdqu xmm0,xmmword ptr [rsp+88h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 88 00 00 00
1febh vmovdqu xmmword ptr [rsp+0A8h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 a8 00 00 00
1ff4h vmovdqu xmm0,xmmword ptr [rsp+0A8h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 a8 00 00 00
1ffdh vmovdqu xmmword ptr [rsp+998h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 98 09 00 00
2006h lea rcx,[rsp+0A40h]           ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 40 0a 00 00
200eh vmovdqu xmm0,xmmword ptr [rsp+998h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 98 09 00 00
2017h vmovdqu xmmword ptr [rsp+28h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 28
201dh lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
2022h mov edx,6                     ; MOV(Mov_r32_imm32) [EDX,6h:imm32]                    encoding(5 bytes) = ba 06 00 00 00
2027h call 7FFDD0EB0800h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFD60h:jmp64]        encoding(5 bytes) = e8 34 dd ff ff
202ch mov rcx,7FFDD05AEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffdd05aea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5a d0 fd 7f 00 00
2036h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
203bh call 7FFE300F45E0h            ; CALL(Call_rel32_64) [5F243B40h:jmp64]                encoding(5 bytes) = e8 00 1b 24 5f
2040h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
2043h mov rdx,27D3E497220h          ; MOV(Mov_r64_imm64) [RDX,27d3e497220h:imm64]          encoding(10 bytes) = 48 ba 20 72 49 3e 7d 02 00 00
204dh mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
2050h movsx rdx,byte ptr [rdx+8]    ; MOVSX(Movsx_r64_rm8) [RDX,mem(8i,RDX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 52 08
2055h mov r8,27D3E497220h           ; MOV(Mov_r64_imm64) [R8,27d3e497220h:imm64]           encoding(10 bytes) = 49 b8 20 72 49 3e 7d 02 00 00
205fh mov r8,[r8]                   ; MOV(Mov_r64_rm64) [R8,mem(64u,R8:br,DS:sr)]          encoding(3 bytes) = 4d 8b 00
2062h movsx r8,byte ptr [r8+8]      ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,R8:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 40 08
2067h mov r9,27D3E497220h           ; MOV(Mov_r64_imm64) [R9,27d3e497220h:imm64]           encoding(10 bytes) = 49 b9 20 72 49 3e 7d 02 00 00
2071h mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
2074h movsx r9,byte ptr [r9+8]      ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,R9:br,DS:sr)]        encoding(5 bytes) = 4d 0f be 49 08
2079h mov rcx,[rsi+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSI:br,DS:sr)]        encoding(4 bytes) = 48 8b 4e 08
207dh call qword ptr [rsi+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RSI:br,DS:sr)]      encoding(3 bytes) = ff 56 18
2080h mov [rsp+990h],eax            ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EAX]        encoding(7 bytes) = 89 84 24 90 09 00 00
2087h movsx rcx,byte ptr [rsp+990h] ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSP:br,SS:sr)]      encoding(9 bytes) = 48 0f be 8c 24 90 09 00 00
2090h call 7FFDD05EC638h            ; CALL(Call_rel32_64) [FFFFFFFFFF73BB98h:jmp64]        encoding(5 bytes) = e8 03 9b 73 ff
2095h mov esi,eax                   ; MOV(Mov_r32_rm32) [ESI,EAX]                          encoding(2 bytes) = 8b f0
2097h mov rcx,27D3E497220h          ; MOV(Mov_r64_imm64) [RCX,27d3e497220h:imm64]          encoding(10 bytes) = 48 b9 20 72 49 3e 7d 02 00 00
20a1h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
20a4h movsx rcx,byte ptr [rcx+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RCX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 49 08
20a9h call 7FFDD05EC638h            ; CALL(Call_rel32_64) [FFFFFFFFFF73BB98h:jmp64]        encoding(5 bytes) = e8 ea 9a 73 ff
20aeh mov ebp,eax                   ; MOV(Mov_r32_rm32) [EBP,EAX]                          encoding(2 bytes) = 8b e8
20b0h mov rcx,27D3E497220h          ; MOV(Mov_r64_imm64) [RCX,27d3e497220h:imm64]          encoding(10 bytes) = 48 b9 20 72 49 3e 7d 02 00 00
20bah mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
20bdh movsx rcx,byte ptr [rcx+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RCX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 49 08
20c2h call 7FFDD05EC638h            ; CALL(Call_rel32_64) [FFFFFFFFFF73BB98h:jmp64]        encoding(5 bytes) = e8 d1 9a 73 ff
20c7h mov r14d,eax                  ; MOV(Mov_r32_rm32) [R14D,EAX]                         encoding(3 bytes) = 44 8b f0
20cah mov rcx,27D3E497220h          ; MOV(Mov_r64_imm64) [RCX,27d3e497220h:imm64]          encoding(10 bytes) = 48 b9 20 72 49 3e 7d 02 00 00
20d4h mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
20d7h movsx rcx,byte ptr [rcx+8]    ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RCX:br,DS:sr)]      encoding(5 bytes) = 48 0f be 49 08
20dch call 7FFDD05EC638h            ; CALL(Call_rel32_64) [FFFFFFFFFF73BB98h:jmp64]        encoding(5 bytes) = e8 b7 9a 73 ff
20e1h mov r9d,eax                   ; MOV(Mov_r32_rm32) [R9D,EAX]                          encoding(3 bytes) = 44 8b c8
20e4h mov edx,ebp                   ; MOV(Mov_r32_rm32) [EDX,EBP]                          encoding(2 bytes) = 8b d5
20e6h mov r8d,r14d                  ; MOV(Mov_r32_rm32) [R8D,R14D]                         encoding(3 bytes) = 45 8b c6
20e9h mov ecx,esi                   ; MOV(Mov_r32_rm32) [ECX,ESI]                          encoding(2 bytes) = 8b ce
20ebh call 7FFDD0C89908h            ; CALL(Call_rel32_64) [FFFFFFFFFFDD8E68h:jmp64]        encoding(5 bytes) = e8 78 6d dd ff
20f0h mov [rdi+10h],al              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),AL]            encoding(3 bytes) = 88 47 10
20f3h lea rcx,[rsp+980h]            ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 80 09 00 00
20fbh mov rdx,rdi                   ; MOV(Mov_r64_rm64) [RDX,RDI]                          encoding(3 bytes) = 48 8b d7
20feh call 7FFDD0EAFC10h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF170h:jmp64]        encoding(5 bytes) = e8 6d d0 ff ff
2103h lea rcx,[rsp+0A40h]           ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 8c 24 40 0a 00 00
210bh vmovdqu xmm0,xmmword ptr [rsp+980h]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fa 6f 84 24 80 09 00 00
2114h vmovdqu xmmword ptr [rsp+28h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 28
211ah lea r8,[rsp+28h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RSP:br,SS:sr)]        encoding(5 bytes) = 4c 8d 44 24 28
211fh mov edx,7                     ; MOV(Mov_r32_imm32) [EDX,7h:imm32]                    encoding(5 bytes) = ba 07 00 00 00
2124h call 7FFDD0EB0800h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFD60h:jmp64]        encoding(5 bytes) = e8 37 dc ff ff
2129h mov rdi,rbx                   ; MOV(Mov_r64_rm64) [RDI,RBX]                          encoding(3 bytes) = 48 8b fb
212ch lea rsi,[rsp+0A40h]           ; LEA(Lea_r64_m) [RSI,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d b4 24 40 0a 00 00
2134h call 7FFE300F3690h            ; CALL(Call_rel32_64) [5F242BF0h:jmp64]                encoding(5 bytes) = e8 b7 0a 24 5f
2139h movsq                         ; MOVSQ(Movsq_m64_m64) [mem(64u),mem(64u,DS:sr)]       encoding(2 bytes) = 48 a5
213bh mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
213eh add rsp,0A50h                 ; ADD(Add_rm64_imm32) [RSP,a50h:imm64]                 encoding(7 bytes) = 48 81 c4 50 0a 00 00
2145h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
2146h pop rbp                       ; POP(Pop_r64) [RBP]                                   encoding(1 byte ) = 5d
2147h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
2148h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
2149h pop r14                       ; POP(Pop_r64) [R14]                                   encoding(2 bytes) = 41 5e
214bh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
214ch call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF0h:jmp64]        encoding(5 bytes) = e8 9f 0d 74 ff
2151h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2152h call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF8h:jmp64]        encoding(5 bytes) = e8 a1 0d 74 ff
2157h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2158h call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF0h:jmp64]        encoding(5 bytes) = e8 93 0d 74 ff
215dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
215eh call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF8h:jmp64]        encoding(5 bytes) = e8 95 0d 74 ff
2163h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2164h call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF0h:jmp64]        encoding(5 bytes) = e8 87 0d 74 ff
2169h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
216ah call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF8h:jmp64]        encoding(5 bytes) = e8 89 0d 74 ff
216fh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2170h call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF0h:jmp64]        encoding(5 bytes) = e8 7b 0d 74 ff
2175h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2176h call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF8h:jmp64]        encoding(5 bytes) = e8 7d 0d 74 ff
217bh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
217ch call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF0h:jmp64]        encoding(5 bytes) = e8 6f 0d 74 ff
2181h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2182h call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF8h:jmp64]        encoding(5 bytes) = e8 71 0d 74 ff
2187h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2188h call 7FFDD05F3990h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF0h:jmp64]        encoding(5 bytes) = e8 63 0d 74 ff
218dh int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
218eh call 7FFDD05F3998h            ; CALL(Call_rel32_64) [FFFFFFFFFF742EF8h:jmp64]        encoding(5 bytes) = e8 65 0d 74 ff
2193h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
2194h call 7FFE3021EF00h            ; CALL(Call_rel32_64) [5F36E460h:jmp64]                encoding(5 bytes) = e8 c7 c2 36 5f
2199h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> tableBytes => new byte[8602]{0x41,0x56,0x57,0x56,0x55,0x53,0x48,0x81,0xEC,0x50,0x0A,0x00,0x00,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x28,0xB9,0x8A,0x02,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x48,0x8B,0xD9,0x8B,0xF2,0x48,0xB9,0xE0,0x7E,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x02,0x00,0x00,0x00,0xE8,0x03,0xE9,0x20,0x5F,0x48,0xBA,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x1C,0x48,0x63,0xD2,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xE8,0xE1,0x3A,0x24,0x5F,0x48,0x8D,0x8C,0x24,0x60,0x09,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x8D,0x48,0x10,0x48,0x89,0x8C,0x24,0x58,0x09,0x00,0x00,0x48,0x8B,0x8C,0x24,0x58,0x09,0x00,0x00,0x48,0x8D,0x94,0x24,0x60,0x09,0x00,0x00,0x48,0x89,0x0A,0x8B,0x48,0x08,0x89,0x8C,0x24,0x68,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x60,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x70,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x70,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x40,0x0A,0x00,0x00,0x40,0x0F,0xB6,0xCE,0xE8,0x5B,0xD0,0xFF,0xFF,0x48,0x8B,0xF0,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x64,0x3A,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xB9,0xE0,0x7E,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x33,0x00,0x00,0x00,0xE8,0x1D,0x3D,0x24,0x5F,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x0F,0xBE,0x4A,0x08,0x41,0x8B,0xD1,0x45,0x8B,0xC1,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0x38,0x0A,0x00,0x00,0x48,0x0F,0xBE,0x8C,0x24,0x38,0x0A,0x00,0x00,0x88,0x8C,0x24,0x50,0x09,0x00,0x00,0x0F,0xB6,0x8C,0x24,0x50,0x09,0x00,0x00,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x88,0x94,0x24,0x48,0x09,0x00,0x00,0x0F,0xB6,0x84,0x24,0x48,0x09,0x00,0x00,0x88,0x94,0x24,0x40,0x09,0x00,0x00,0x44,0x0F,0xB6,0x84,0x24,0x40,0x09,0x00,0x00,0x88,0x94,0x24,0x38,0x09,0x00,0x00,0x33,0xD2,0x89,0x94,0x24,0x34,0x09,0x00,0x00,0x89,0x94,0x24,0x30,0x09,0x00,0x00,0x89,0x94,0x24,0x2C,0x09,0x00,0x00,0x89,0x94,0x24,0x2C,0x09,0x00,0x00,0x84,0xC9,0x74,0x12,0x0F,0xB6,0x8C,0x24,0x2C,0x09,0x00,0x00,0x83,0xC9,0x01,0x88,0x8C,0x24,0x2C,0x09,0x00,0x00,0x84,0xC0,0x74,0x12,0x0F,0xB6,0x8C,0x24,0x2C,0x09,0x00,0x00,0x83,0xC9,0x02,0x88,0x8C,0x24,0x2C,0x09,0x00,0x00,0x8B,0x8C,0x24,0x2C,0x09,0x00,0x00,0x0F,0xB6,0xC9,0x88,0x8C,0x24,0x30,0x09,0x00,0x00,0x45,0x84,0xC0,0x74,0x12,0x0F,0xB6,0x8C,0x24,0x30,0x09,0x00,0x00,0x83,0xC9,0x04,0x88,0x8C,0x24,0x30,0x09,0x00,0x00,0x8B,0x8C,0x24,0x30,0x09,0x00,0x00,0x0F,0xB6,0xC9,0x88,0x8C,0x24,0x34,0x09,0x00,0x00,0x80,0xBC,0x24,0x38,0x09,0x00,0x00,0x00,0x74,0x12,0x0F,0xB6,0x8C,0x24,0x34,0x09,0x00,0x00,0x83,0xC9,0x08,0x88,0x8C,0x24,0x34,0x09,0x00,0x00,0x8B,0x8C,0x24,0x34,0x09,0x00,0x00,0x0F,0xB6,0xC9,0x88,0x4F,0x10,0x48,0x8D,0x8C,0x24,0xF8,0x08,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x83,0xC7,0x10,0x48,0x89,0xBC,0x24,0xF0,0x08,0x00,0x00,0x48,0x8B,0x8C,0x24,0xF0,0x08,0x00,0x00,0x48,0x8D,0x94,0x24,0xF8,0x08,0x00,0x00,0x48,0x89,0x0A,0xC7,0x84,0x24,0x00,0x09,0x00,0x00,0x01,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xF8,0x08,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x08,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x08,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xE0,0x08,0x00,0x00,0x8B,0x8C,0x24,0xE8,0x08,0x00,0x00,0x48,0x63,0xC9,0x48,0x89,0x8C,0x24,0xC0,0x08,0x00,0x00,0x48,0x8B,0x8C,0x24,0xC0,0x08,0x00,0x00,0x48,0x89,0x8C,0x24,0xD8,0x08,0x00,0x00,0x48,0x8B,0x8C,0x24,0xD8,0x08,0x00,0x00,0x48,0x89,0x8C,0x24,0xB8,0x08,0x00,0x00,0x48,0xB9,0xE0,0x7E,0x73,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x03,0x00,0x00,0x00,0xE8,0x84,0xE6,0x20,0x5F,0x49,0xB8,0xB8,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x8B,0x40,0x08,0x4C,0x89,0x84,0x24,0xB0,0x08,0x00,0x00,0x4C,0x8B,0x84,0x24,0xB8,0x08,0x00,0x00,0x4C,0x0F,0xAF,0x84,0x24,0xB0,0x08,0x00,0x00,0x4C,0x89,0x84,0x24,0xA8,0x08,0x00,0x00,0x4C,0x8B,0x84,0x24,0xA8,0x08,0x00,0x00,0x4C,0x89,0x84,0x24,0xD0,0x08,0x00,0x00,0x4C,0x8B,0x84,0x24,0xD0,0x08,0x00,0x00,0x4C,0x89,0x84,0x24,0xA0,0x08,0x00,0x00,0x44,0x8B,0x84,0x24,0xA0,0x08,0x00,0x00,0x48,0xBA,0xC0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x48,0x89,0x94,0x24,0x98,0x08,0x00,0x00,0x33,0xD2,0x48,0x89,0x94,0x24,0xC8,0x08,0x00,0x00,0x44,0x3B,0x84,0x24,0x98,0x08,0x00,0x00,0x41,0x0F,0x9D,0xC0,0x45,0x0F,0xB6,0xC0,0xC7,0x84,0x24,0xCC,0x08,0x00,0x00,0x96,0x00,0x00,0x00,0xC6,0x84,0x24,0xC8,0x08,0x00,0x00,0x01,0x48,0x8B,0x94,0x24,0xC8,0x08,0x00,0x00,0x48,0x89,0x94,0x24,0x90,0x08,0x00,0x00,0x45,0x84,0xC0,0x75,0x29,0x49,0xB8,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x48,0xBA,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x8B,0x8C,0x24,0x90,0x08,0x00,0x00,0x33,0xC9,0xE8,0xF6,0x29,0x73,0xFF,0xC5,0xFA,0x6F,0x84,0x24,0xE0,0x08,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x18,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x18,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x28,0x0A,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x28,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x80,0x08,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x80,0x08,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x70,0x08,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x70,0x08,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x60,0x08,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x50,0x08,0x00,0x00,0x48,0xB9,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x40,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x33,0xD2,0x48,0xB8,0x40,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x8D,0x8C,0x24,0x20,0x08,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x85,0xC0,0x75,0x12,0x48,0x8D,0x84,0x24,0x20,0x08,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xEB,0x29,0x48,0x8D,0x48,0x10,0x48,0x89,0x8C,0x24,0x18,0x08,0x00,0x00,0x48,0x8B,0x8C,0x24,0x18,0x08,0x00,0x00,0x48,0x8D,0x94,0x24,0x20,0x08,0x00,0x00,0x48,0x89,0x0A,0x8B,0x48,0x08,0x89,0x8C,0x24,0x28,0x08,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x20,0x08,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x30,0x08,0x00,0x00,0x83,0xBC,0x24,0x38,0x08,0x00,0x00,0x00,0x0F,0x86,0xF3,0x1C,0x00,0x00,0x48,0x8B,0x8C,0x24,0x30,0x08,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x8B,0x84,0x24,0x58,0x08,0x00,0x00,0x4C,0x3B,0xC0,0x0F,0x87,0x78,0x1C,0x00,0x00,0x4C,0x8B,0x84,0x24,0x50,0x08,0x00,0x00,0x48,0x8D,0x84,0x24,0x08,0x08,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0x48,0x63,0xC9,0x49,0x03,0xC8,0x48,0x89,0x8C,0x24,0x00,0x08,0x00,0x00,0x48,0x8B,0x8C,0x24,0x00,0x08,0x00,0x00,0x4C,0x8D,0x84,0x24,0x08,0x08,0x00,0x00,0x49,0x89,0x08,0x89,0x94,0x24,0x10,0x08,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x08,0x08,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x40,0x08,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x08,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xF0,0x07,0x00,0x00,0x8B,0x8C,0x24,0x68,0x08,0x00,0x00,0x3B,0x8C,0x24,0xF8,0x07,0x00,0x00,0x0F,0x87,0x06,0x1C,0x00,0x00,0x48,0x8B,0x8C,0x24,0xF0,0x07,0x00,0x00,0x48,0x8B,0x94,0x24,0x60,0x08,0x00,0x00,0x44,0x8B,0x84,0x24,0x68,0x08,0x00,0x00,0x4D,0x63,0xC0,0xE8,0xF4,0x7E,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0xC0,0x35,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x0F,0xBE,0x42,0x08,0x41,0x8B,0xD0,0x49,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x0F,0xBE,0x49,0x08,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0x20,0x0A,0x00,0x00,0x4C,0x0F,0xBE,0x84,0x24,0x20,0x0A,0x00,0x00,0x44,0x88,0x84,0x24,0xE8,0x07,0x00,0x00,0x44,0x0F,0xB6,0x84,0x24,0xE8,0x07,0x00,0x00,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x88,0x94,0x24,0xE0,0x07,0x00,0x00,0x44,0x0F,0xB6,0x8C,0x24,0xE0,0x07,0x00,0x00,0x88,0x94,0x24,0xD8,0x07,0x00,0x00,0x0F,0xB6,0x94,0x24,0xD8,0x07,0x00,0x00,0x48,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x0F,0xBE,0x49,0x08,0x88,0x8C,0x24,0xD0,0x07,0x00,0x00,0x33,0xC9,0x89,0x8C,0x24,0xCC,0x07,0x00,0x00,0x89,0x8C,0x24,0xC8,0x07,0x00,0x00,0x89,0x8C,0x24,0xC4,0x07,0x00,0x00,0x89,0x8C,0x24,0xC4,0x07,0x00,0x00,0x45,0x84,0xC0,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xC4,0x07,0x00,0x00,0x41,0x83,0xC8,0x01,0x44,0x88,0x84,0x24,0xC4,0x07,0x00,0x00,0x45,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xC4,0x07,0x00,0x00,0x41,0x83,0xC8,0x02,0x44,0x88,0x84,0x24,0xC4,0x07,0x00,0x00,0x44,0x8B,0x84,0x24,0xC4,0x07,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0xC8,0x07,0x00,0x00,0x84,0xD2,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xC8,0x07,0x00,0x00,0x41,0x83,0xC8,0x04,0x44,0x88,0x84,0x24,0xC8,0x07,0x00,0x00,0x44,0x8B,0x84,0x24,0xC8,0x07,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0xCC,0x07,0x00,0x00,0x80,0xBC,0x24,0xD0,0x07,0x00,0x00,0x00,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xCC,0x07,0x00,0x00,0x41,0x83,0xC8,0x08,0x44,0x88,0x84,0x24,0xCC,0x07,0x00,0x00,0x44,0x8B,0x84,0x24,0xCC,0x07,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x47,0x10,0x4C,0x8D,0x84,0x24,0x90,0x07,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x00,0x48,0x83,0xC7,0x10,0x48,0x89,0xBC,0x24,0x88,0x07,0x00,0x00,0x4C,0x8B,0x84,0x24,0x88,0x07,0x00,0x00,0x48,0x8D,0x94,0x24,0x90,0x07,0x00,0x00,0x4C,0x89,0x02,0xC7,0x84,0x24,0x98,0x07,0x00,0x00,0x01,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x90,0x07,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xA0,0x07,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xA0,0x07,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x78,0x07,0x00,0x00,0x44,0x8B,0x84,0x24,0x80,0x07,0x00,0x00,0x4D,0x63,0xC0,0x4C,0x89,0x84,0x24,0x58,0x07,0x00,0x00,0x4C,0x8B,0x84,0x24,0x58,0x07,0x00,0x00,0x4C,0x89,0x84,0x24,0x70,0x07,0x00,0x00,0x4C,0x8B,0x84,0x24,0x70,0x07,0x00,0x00,0x4C,0x89,0x84,0x24,0x50,0x07,0x00,0x00,0x49,0xB8,0xB8,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x8B,0x40,0x08,0x4C,0x89,0x84,0x24,0x48,0x07,0x00,0x00,0x4C,0x8B,0x84,0x24,0x50,0x07,0x00,0x00,0x4C,0x0F,0xAF,0x84,0x24,0x48,0x07,0x00,0x00,0x4C,0x89,0x84,0x24,0x40,0x07,0x00,0x00,0x4C,0x8B,0x84,0x24,0x40,0x07,0x00,0x00,0x4C,0x89,0x84,0x24,0x68,0x07,0x00,0x00,0x4C,0x8B,0x84,0x24,0x68,0x07,0x00,0x00,0x4C,0x89,0x84,0x24,0x38,0x07,0x00,0x00,0x44,0x8B,0x84,0x24,0x38,0x07,0x00,0x00,0x48,0xBA,0xC0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x48,0x89,0x94,0x24,0x30,0x07,0x00,0x00,0x33,0xD2,0x48,0x89,0x94,0x24,0x60,0x07,0x00,0x00,0x44,0x3B,0x84,0x24,0x30,0x07,0x00,0x00,0x41,0x0F,0x9D,0xC0,0x45,0x0F,0xB6,0xC0,0xC7,0x84,0x24,0x64,0x07,0x00,0x00,0x96,0x00,0x00,0x00,0xC6,0x84,0x24,0x60,0x07,0x00,0x00,0x01,0x48,0x8B,0x94,0x24,0x60,0x07,0x00,0x00,0x48,0x89,0x94,0x24,0x28,0x07,0x00,0x00,0x45,0x84,0xC0,0x75,0x29,0x49,0xB8,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x48,0xBA,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x8B,0x8C,0x24,0x28,0x07,0x00,0x00,0x33,0xC9,0xE8,0x3F,0x25,0x73,0xFF,0xC5,0xFA,0x6F,0x84,0x24,0x78,0x07,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xB0,0x07,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xB0,0x07,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x10,0x0A,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x10,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x18,0x07,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x18,0x07,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x08,0x07,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x08,0x07,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xF8,0x06,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xE8,0x06,0x00,0x00,0x48,0xB9,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x48,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0x48,0xB8,0x48,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x8D,0x8C,0x24,0xB8,0x06,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x85,0xC0,0x75,0x12,0x48,0x8D,0x84,0x24,0xB8,0x06,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xEB,0x29,0x48,0x8D,0x48,0x10,0x48,0x89,0x8C,0x24,0xB0,0x06,0x00,0x00,0x48,0x8B,0x8C,0x24,0xB0,0x06,0x00,0x00,0x48,0x8D,0x94,0x24,0xB8,0x06,0x00,0x00,0x48,0x89,0x0A,0x8B,0x48,0x08,0x89,0x8C,0x24,0xC0,0x06,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xB8,0x06,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xC8,0x06,0x00,0x00,0x83,0xBC,0x24,0xD0,0x06,0x00,0x00,0x00,0x0F,0x86,0x39,0x18,0x00,0x00,0x48,0x8B,0x8C,0x24,0xC8,0x06,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x8B,0x84,0x24,0xF0,0x06,0x00,0x00,0x4C,0x3B,0xC0,0x0F,0x87,0xCA,0x17,0x00,0x00,0x4C,0x8B,0x84,0x24,0xE8,0x06,0x00,0x00,0x48,0x8D,0x84,0x24,0xA0,0x06,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0x48,0x63,0xC9,0x49,0x03,0xC8,0x48,0x89,0x8C,0x24,0x98,0x06,0x00,0x00,0x48,0x8B,0x8C,0x24,0x98,0x06,0x00,0x00,0x4C,0x8D,0x84,0x24,0xA0,0x06,0x00,0x00,0x49,0x89,0x08,0x89,0x94,0x24,0xA8,0x06,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xA0,0x06,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xD8,0x06,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xD8,0x06,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x88,0x06,0x00,0x00,0x8B,0x8C,0x24,0x00,0x07,0x00,0x00,0x3B,0x8C,0x24,0x90,0x06,0x00,0x00,0x0F,0x87,0x58,0x17,0x00,0x00,0x48,0x8B,0x8C,0x24,0x88,0x06,0x00,0x00,0x48,0x8B,0x94,0x24,0xF8,0x06,0x00,0x00,0x44,0x8B,0x84,0x24,0x00,0x07,0x00,0x00,0x4D,0x63,0xC0,0xE8,0x3A,0x7A,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x06,0x31,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x0F,0xBE,0x4A,0x08,0x41,0x8B,0xD1,0x49,0xB8,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x40,0x08,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0x08,0x0A,0x00,0x00,0x4C,0x0F,0xBE,0x84,0x24,0x08,0x0A,0x00,0x00,0x44,0x88,0x84,0x24,0x80,0x06,0x00,0x00,0x44,0x0F,0xB6,0x84,0x24,0x80,0x06,0x00,0x00,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x88,0x94,0x24,0x78,0x06,0x00,0x00,0x44,0x0F,0xB6,0x8C,0x24,0x78,0x06,0x00,0x00,0x48,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x0F,0xBE,0x49,0x08,0x88,0x8C,0x24,0x70,0x06,0x00,0x00,0x0F,0xB6,0x8C,0x24,0x70,0x06,0x00,0x00,0x88,0x94,0x24,0x68,0x06,0x00,0x00,0x33,0xD2,0x89,0x94,0x24,0x64,0x06,0x00,0x00,0x89,0x94,0x24,0x60,0x06,0x00,0x00,0x89,0x94,0x24,0x5C,0x06,0x00,0x00,0x89,0x94,0x24,0x5C,0x06,0x00,0x00,0x45,0x84,0xC0,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x5C,0x06,0x00,0x00,0x41,0x83,0xC8,0x01,0x44,0x88,0x84,0x24,0x5C,0x06,0x00,0x00,0x45,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x5C,0x06,0x00,0x00,0x41,0x83,0xC8,0x02,0x44,0x88,0x84,0x24,0x5C,0x06,0x00,0x00,0x44,0x8B,0x84,0x24,0x5C,0x06,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0x60,0x06,0x00,0x00,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x60,0x06,0x00,0x00,0x41,0x83,0xC8,0x04,0x44,0x88,0x84,0x24,0x60,0x06,0x00,0x00,0x44,0x8B,0x84,0x24,0x60,0x06,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0x64,0x06,0x00,0x00,0x80,0xBC,0x24,0x68,0x06,0x00,0x00,0x00,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x64,0x06,0x00,0x00,0x41,0x83,0xC8,0x08,0x44,0x88,0x84,0x24,0x64,0x06,0x00,0x00,0x44,0x8B,0x84,0x24,0x64,0x06,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x47,0x10,0x4C,0x8D,0x84,0x24,0x28,0x06,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x00,0x48,0x83,0xC7,0x10,0x48,0x89,0xBC,0x24,0x20,0x06,0x00,0x00,0x4C,0x8B,0x84,0x24,0x20,0x06,0x00,0x00,0x48,0x8D,0x94,0x24,0x28,0x06,0x00,0x00,0x4C,0x89,0x02,0xC7,0x84,0x24,0x30,0x06,0x00,0x00,0x01,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x28,0x06,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x38,0x06,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x38,0x06,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x10,0x06,0x00,0x00,0x44,0x8B,0x84,0x24,0x18,0x06,0x00,0x00,0x4D,0x63,0xC0,0x4C,0x89,0x84,0x24,0xF0,0x05,0x00,0x00,0x4C,0x8B,0x84,0x24,0xF0,0x05,0x00,0x00,0x4C,0x89,0x84,0x24,0x08,0x06,0x00,0x00,0x4C,0x8B,0x84,0x24,0x08,0x06,0x00,0x00,0x4C,0x89,0x84,0x24,0xE8,0x05,0x00,0x00,0x49,0xB8,0xB8,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x8B,0x40,0x08,0x4C,0x89,0x84,0x24,0xE0,0x05,0x00,0x00,0x4C,0x8B,0x84,0x24,0xE8,0x05,0x00,0x00,0x4C,0x0F,0xAF,0x84,0x24,0xE0,0x05,0x00,0x00,0x4C,0x89,0x84,0x24,0xD8,0x05,0x00,0x00,0x4C,0x8B,0x84,0x24,0xD8,0x05,0x00,0x00,0x4C,0x89,0x84,0x24,0x00,0x06,0x00,0x00,0x4C,0x8B,0x84,0x24,0x00,0x06,0x00,0x00,0x4C,0x89,0x84,0x24,0xD0,0x05,0x00,0x00,0x44,0x8B,0x84,0x24,0xD0,0x05,0x00,0x00,0x48,0xBA,0xC0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x48,0x89,0x94,0x24,0xC8,0x05,0x00,0x00,0x33,0xD2,0x48,0x89,0x94,0x24,0xF8,0x05,0x00,0x00,0x44,0x3B,0x84,0x24,0xC8,0x05,0x00,0x00,0x41,0x0F,0x9D,0xC0,0x45,0x0F,0xB6,0xC0,0xC7,0x84,0x24,0xFC,0x05,0x00,0x00,0x96,0x00,0x00,0x00,0xC6,0x84,0x24,0xF8,0x05,0x00,0x00,0x01,0x48,0x8B,0x94,0x24,0xF8,0x05,0x00,0x00,0x48,0x89,0x94,0x24,0xC0,0x05,0x00,0x00,0x45,0x84,0xC0,0x75,0x29,0x49,0xB8,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x48,0xBA,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x8B,0x8C,0x24,0xC0,0x05,0x00,0x00,0x33,0xC9,0xE8,0x85,0x20,0x73,0xFF,0xC5,0xFA,0x6F,0x84,0x24,0x10,0x06,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x48,0x06,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x48,0x06,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xF8,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xF8,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xB0,0x05,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xB0,0x05,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xA0,0x05,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xA0,0x05,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x90,0x05,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x80,0x05,0x00,0x00,0x48,0xB9,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x50,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x02,0x00,0x00,0x00,0x48,0xB8,0x50,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x8D,0x8C,0x24,0x50,0x05,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x85,0xC0,0x75,0x12,0x48,0x8D,0x84,0x24,0x50,0x05,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xEB,0x29,0x48,0x8D,0x48,0x10,0x48,0x89,0x8C,0x24,0x48,0x05,0x00,0x00,0x48,0x8B,0x8C,0x24,0x48,0x05,0x00,0x00,0x48,0x8D,0x94,0x24,0x50,0x05,0x00,0x00,0x48,0x89,0x0A,0x8B,0x48,0x08,0x89,0x8C,0x24,0x58,0x05,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x50,0x05,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x60,0x05,0x00,0x00,0x83,0xBC,0x24,0x68,0x05,0x00,0x00,0x00,0x0F,0x86,0x7F,0x13,0x00,0x00,0x48,0x8B,0x8C,0x24,0x60,0x05,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x8B,0x84,0x24,0x88,0x05,0x00,0x00,0x4C,0x3B,0xC0,0x0F,0x87,0x1C,0x13,0x00,0x00,0x4C,0x8B,0x84,0x24,0x80,0x05,0x00,0x00,0x48,0x8D,0x84,0x24,0x38,0x05,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0x48,0x63,0xC9,0x49,0x03,0xC8,0x48,0x89,0x8C,0x24,0x30,0x05,0x00,0x00,0x48,0x8B,0x8C,0x24,0x30,0x05,0x00,0x00,0x4C,0x8D,0x84,0x24,0x38,0x05,0x00,0x00,0x49,0x89,0x08,0x89,0x94,0x24,0x40,0x05,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x38,0x05,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x70,0x05,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x70,0x05,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x20,0x05,0x00,0x00,0x8B,0x8C,0x24,0x98,0x05,0x00,0x00,0x3B,0x8C,0x24,0x28,0x05,0x00,0x00,0x0F,0x87,0xAA,0x12,0x00,0x00,0x48,0x8B,0x8C,0x24,0x20,0x05,0x00,0x00,0x48,0x8B,0x94,0x24,0x90,0x05,0x00,0x00,0x44,0x8B,0x84,0x24,0x98,0x05,0x00,0x00,0x4D,0x63,0xC0,0xE8,0x80,0x75,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x4C,0x2C,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x49,0xB8,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x48,0x08,0x45,0x8B,0xC1,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0xF0,0x09,0x00,0x00,0x4C,0x0F,0xBE,0x84,0x24,0xF0,0x09,0x00,0x00,0x44,0x88,0x84,0x24,0x18,0x05,0x00,0x00,0x44,0x0F,0xB6,0x84,0x24,0x18,0x05,0x00,0x00,0x48,0xBA,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x88,0x94,0x24,0x10,0x05,0x00,0x00,0x0F,0xB6,0x94,0x24,0x10,0x05,0x00,0x00,0x49,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x0F,0xBE,0x49,0x08,0x44,0x88,0x8C,0x24,0x08,0x05,0x00,0x00,0x0F,0xB6,0x8C,0x24,0x08,0x05,0x00,0x00,0x44,0x88,0x8C,0x24,0x00,0x05,0x00,0x00,0x45,0x33,0xC9,0x44,0x89,0x8C,0x24,0xFC,0x04,0x00,0x00,0x44,0x89,0x8C,0x24,0xF8,0x04,0x00,0x00,0x44,0x89,0x8C,0x24,0xF4,0x04,0x00,0x00,0x44,0x89,0x8C,0x24,0xF4,0x04,0x00,0x00,0x45,0x84,0xC0,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xF4,0x04,0x00,0x00,0x41,0x83,0xC8,0x01,0x44,0x88,0x84,0x24,0xF4,0x04,0x00,0x00,0x84,0xD2,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xF4,0x04,0x00,0x00,0x41,0x83,0xC8,0x02,0x44,0x88,0x84,0x24,0xF4,0x04,0x00,0x00,0x44,0x8B,0x84,0x24,0xF4,0x04,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0xF8,0x04,0x00,0x00,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xF8,0x04,0x00,0x00,0x41,0x83,0xC8,0x04,0x44,0x88,0x84,0x24,0xF8,0x04,0x00,0x00,0x44,0x8B,0x84,0x24,0xF8,0x04,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0xFC,0x04,0x00,0x00,0x80,0xBC,0x24,0x00,0x05,0x00,0x00,0x00,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0xFC,0x04,0x00,0x00,0x41,0x83,0xC8,0x08,0x44,0x88,0x84,0x24,0xFC,0x04,0x00,0x00,0x44,0x8B,0x84,0x24,0xFC,0x04,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x47,0x10,0x4C,0x8D,0x84,0x24,0xC0,0x04,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x00,0x48,0x83,0xC7,0x10,0x48,0x89,0xBC,0x24,0xB8,0x04,0x00,0x00,0x4C,0x8B,0x84,0x24,0xB8,0x04,0x00,0x00,0x48,0x8D,0x94,0x24,0xC0,0x04,0x00,0x00,0x4C,0x89,0x02,0xC7,0x84,0x24,0xC8,0x04,0x00,0x00,0x01,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xC0,0x04,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xD0,0x04,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xD0,0x04,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xA8,0x04,0x00,0x00,0x44,0x8B,0x84,0x24,0xB0,0x04,0x00,0x00,0x4D,0x63,0xC0,0x4C,0x89,0x84,0x24,0x88,0x04,0x00,0x00,0x4C,0x8B,0x84,0x24,0x88,0x04,0x00,0x00,0x4C,0x89,0x84,0x24,0xA0,0x04,0x00,0x00,0x4C,0x8B,0x84,0x24,0xA0,0x04,0x00,0x00,0x4C,0x89,0x84,0x24,0x80,0x04,0x00,0x00,0x49,0xB8,0xB8,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x8B,0x40,0x08,0x4C,0x89,0x84,0x24,0x78,0x04,0x00,0x00,0x4C,0x8B,0x84,0x24,0x80,0x04,0x00,0x00,0x4C,0x0F,0xAF,0x84,0x24,0x78,0x04,0x00,0x00,0x4C,0x89,0x84,0x24,0x70,0x04,0x00,0x00,0x4C,0x8B,0x84,0x24,0x70,0x04,0x00,0x00,0x4C,0x89,0x84,0x24,0x98,0x04,0x00,0x00,0x4C,0x8B,0x84,0x24,0x98,0x04,0x00,0x00,0x4C,0x89,0x84,0x24,0x68,0x04,0x00,0x00,0x44,0x8B,0x84,0x24,0x68,0x04,0x00,0x00,0x48,0xBA,0xC0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x48,0x89,0x94,0x24,0x60,0x04,0x00,0x00,0x33,0xD2,0x48,0x89,0x94,0x24,0x90,0x04,0x00,0x00,0x44,0x3B,0x84,0x24,0x60,0x04,0x00,0x00,0x41,0x0F,0x9D,0xC0,0x45,0x0F,0xB6,0xC0,0xC7,0x84,0x24,0x94,0x04,0x00,0x00,0x96,0x00,0x00,0x00,0xC6,0x84,0x24,0x90,0x04,0x00,0x00,0x01,0x48,0x8B,0x94,0x24,0x90,0x04,0x00,0x00,0x48,0x89,0x94,0x24,0x58,0x04,0x00,0x00,0x45,0x84,0xC0,0x75,0x29,0x49,0xB8,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x48,0xBA,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x8B,0x8C,0x24,0x58,0x04,0x00,0x00,0x33,0xC9,0xE8,0xC6,0x1B,0x73,0xFF,0xC5,0xFA,0x6F,0x84,0x24,0xA8,0x04,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xE0,0x04,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xE0,0x04,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xE0,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xE0,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x48,0x04,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x48,0x04,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x38,0x04,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x38,0x04,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x28,0x04,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x18,0x04,0x00,0x00,0x48,0xB9,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x58,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x03,0x00,0x00,0x00,0x48,0xB8,0x58,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x8D,0x8C,0x24,0xE8,0x03,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x85,0xC0,0x75,0x12,0x48,0x8D,0x84,0x24,0xE8,0x03,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xEB,0x29,0x48,0x8D,0x48,0x10,0x48,0x89,0x8C,0x24,0xE0,0x03,0x00,0x00,0x48,0x8B,0x8C,0x24,0xE0,0x03,0x00,0x00,0x48,0x8D,0x94,0x24,0xE8,0x03,0x00,0x00,0x48,0x89,0x0A,0x8B,0x48,0x08,0x89,0x8C,0x24,0xF0,0x03,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xE8,0x03,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xF8,0x03,0x00,0x00,0x83,0xBC,0x24,0x00,0x04,0x00,0x00,0x00,0x0F,0x86,0xC0,0x0E,0x00,0x00,0x48,0x8B,0x8C,0x24,0xF8,0x03,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x8B,0x84,0x24,0x20,0x04,0x00,0x00,0x4C,0x3B,0xC0,0x0F,0x87,0x69,0x0E,0x00,0x00,0x4C,0x8B,0x84,0x24,0x18,0x04,0x00,0x00,0x48,0x8D,0x84,0x24,0xD0,0x03,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0x48,0x63,0xC9,0x49,0x03,0xC8,0x48,0x89,0x8C,0x24,0xC8,0x03,0x00,0x00,0x48,0x8B,0x8C,0x24,0xC8,0x03,0x00,0x00,0x4C,0x8D,0x84,0x24,0xD0,0x03,0x00,0x00,0x49,0x89,0x08,0x89,0x94,0x24,0xD8,0x03,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xD0,0x03,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x08,0x04,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x08,0x04,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xB8,0x03,0x00,0x00,0x8B,0x8C,0x24,0x30,0x04,0x00,0x00,0x3B,0x8C,0x24,0xC0,0x03,0x00,0x00,0x0F,0x87,0xF7,0x0D,0x00,0x00,0x48,0x8B,0x8C,0x24,0xB8,0x03,0x00,0x00,0x48,0x8B,0x94,0x24,0x28,0x04,0x00,0x00,0x44,0x8B,0x84,0x24,0x30,0x04,0x00,0x00,0x4D,0x63,0xC0,0xE8,0xC1,0x70,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x8D,0x27,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x49,0xB8,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x48,0x08,0x45,0x8B,0xC1,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0xD8,0x09,0x00,0x00,0x4C,0x0F,0xBE,0x84,0x24,0xD8,0x09,0x00,0x00,0x44,0x88,0x84,0x24,0xB0,0x03,0x00,0x00,0x44,0x0F,0xB6,0x84,0x24,0xB0,0x03,0x00,0x00,0x48,0xBA,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x88,0x94,0x24,0xA8,0x03,0x00,0x00,0x0F,0xB6,0x94,0x24,0xA8,0x03,0x00,0x00,0x49,0xB9,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x0F,0xBE,0x49,0x08,0x44,0x88,0x8C,0x24,0xA0,0x03,0x00,0x00,0x0F,0xB6,0x8C,0x24,0xA0,0x03,0x00,0x00,0x44,0x88,0x8C,0x24,0x98,0x03,0x00,0x00,0x45,0x33,0xC9,0x44,0x89,0x8C,0x24,0x94,0x03,0x00,0x00,0x44,0x89,0x8C,0x24,0x90,0x03,0x00,0x00,0x44,0x89,0x8C,0x24,0x8C,0x03,0x00,0x00,0x44,0x89,0x8C,0x24,0x8C,0x03,0x00,0x00,0x45,0x84,0xC0,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x8C,0x03,0x00,0x00,0x41,0x83,0xC8,0x01,0x44,0x88,0x84,0x24,0x8C,0x03,0x00,0x00,0x84,0xD2,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x8C,0x03,0x00,0x00,0x41,0x83,0xC8,0x02,0x44,0x88,0x84,0x24,0x8C,0x03,0x00,0x00,0x44,0x8B,0x84,0x24,0x8C,0x03,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0x90,0x03,0x00,0x00,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x90,0x03,0x00,0x00,0x41,0x83,0xC8,0x04,0x44,0x88,0x84,0x24,0x90,0x03,0x00,0x00,0x44,0x8B,0x84,0x24,0x90,0x03,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0x94,0x03,0x00,0x00,0x80,0xBC,0x24,0x98,0x03,0x00,0x00,0x00,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x94,0x03,0x00,0x00,0x41,0x83,0xC8,0x08,0x44,0x88,0x84,0x24,0x94,0x03,0x00,0x00,0x44,0x8B,0x84,0x24,0x94,0x03,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x47,0x10,0x4C,0x8D,0x84,0x24,0x58,0x03,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x00,0x48,0x83,0xC7,0x10,0x48,0x89,0xBC,0x24,0x50,0x03,0x00,0x00,0x4C,0x8B,0x84,0x24,0x50,0x03,0x00,0x00,0x48,0x8D,0x94,0x24,0x58,0x03,0x00,0x00,0x4C,0x89,0x02,0xC7,0x84,0x24,0x60,0x03,0x00,0x00,0x01,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x58,0x03,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x68,0x03,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x68,0x03,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x40,0x03,0x00,0x00,0x44,0x8B,0x84,0x24,0x48,0x03,0x00,0x00,0x4D,0x63,0xC0,0x4C,0x89,0x84,0x24,0x20,0x03,0x00,0x00,0x4C,0x8B,0x84,0x24,0x20,0x03,0x00,0x00,0x4C,0x89,0x84,0x24,0x38,0x03,0x00,0x00,0x4C,0x8B,0x84,0x24,0x38,0x03,0x00,0x00,0x4C,0x89,0x84,0x24,0x18,0x03,0x00,0x00,0x49,0xB8,0xB8,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x8B,0x40,0x08,0x4C,0x89,0x84,0x24,0x10,0x03,0x00,0x00,0x4C,0x8B,0x84,0x24,0x18,0x03,0x00,0x00,0x4C,0x0F,0xAF,0x84,0x24,0x10,0x03,0x00,0x00,0x4C,0x89,0x84,0x24,0x08,0x03,0x00,0x00,0x4C,0x8B,0x84,0x24,0x08,0x03,0x00,0x00,0x4C,0x89,0x84,0x24,0x30,0x03,0x00,0x00,0x4C,0x8B,0x84,0x24,0x30,0x03,0x00,0x00,0x4C,0x89,0x84,0x24,0x00,0x03,0x00,0x00,0x44,0x8B,0x84,0x24,0x00,0x03,0x00,0x00,0x48,0xBA,0xC0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x48,0x89,0x94,0x24,0xF8,0x02,0x00,0x00,0x33,0xD2,0x48,0x89,0x94,0x24,0x28,0x03,0x00,0x00,0x44,0x3B,0x84,0x24,0xF8,0x02,0x00,0x00,0x41,0x0F,0x9D,0xC0,0x45,0x0F,0xB6,0xC0,0xC7,0x84,0x24,0x2C,0x03,0x00,0x00,0x96,0x00,0x00,0x00,0xC6,0x84,0x24,0x28,0x03,0x00,0x00,0x01,0x48,0x8B,0x94,0x24,0x28,0x03,0x00,0x00,0x48,0x89,0x94,0x24,0xF0,0x02,0x00,0x00,0x45,0x84,0xC0,0x75,0x29,0x49,0xB8,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x48,0xBA,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x8B,0x8C,0x24,0xF0,0x02,0x00,0x00,0x33,0xC9,0xE8,0x07,0x17,0x73,0xFF,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x03,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x78,0x03,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x78,0x03,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xC8,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xC8,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xE0,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xE0,0x02,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xD0,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xD0,0x02,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xC0,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xB0,0x02,0x00,0x00,0x48,0xB9,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x60,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x04,0x00,0x00,0x00,0x48,0xB8,0x60,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x8D,0x8C,0x24,0x80,0x02,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x85,0xC0,0x75,0x12,0x48,0x8D,0x84,0x24,0x80,0x02,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xEB,0x29,0x48,0x8D,0x48,0x10,0x48,0x89,0x8C,0x24,0x78,0x02,0x00,0x00,0x48,0x8B,0x8C,0x24,0x78,0x02,0x00,0x00,0x48,0x8D,0x94,0x24,0x80,0x02,0x00,0x00,0x48,0x89,0x0A,0x8B,0x48,0x08,0x89,0x8C,0x24,0x88,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x80,0x02,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x90,0x02,0x00,0x00,0x83,0xBC,0x24,0x98,0x02,0x00,0x00,0x00,0x0F,0x86,0x01,0x0A,0x00,0x00,0x48,0x8B,0x8C,0x24,0x90,0x02,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x8B,0x84,0x24,0xB8,0x02,0x00,0x00,0x4C,0x3B,0xC0,0x0F,0x87,0xB6,0x09,0x00,0x00,0x4C,0x8B,0x84,0x24,0xB0,0x02,0x00,0x00,0x48,0x8D,0x84,0x24,0x68,0x02,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0x48,0x63,0xC9,0x49,0x03,0xC8,0x48,0x89,0x8C,0x24,0x60,0x02,0x00,0x00,0x48,0x8B,0x8C,0x24,0x60,0x02,0x00,0x00,0x4C,0x8D,0x84,0x24,0x68,0x02,0x00,0x00,0x49,0x89,0x08,0x89,0x94,0x24,0x70,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x68,0x02,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xA0,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xA0,0x02,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x50,0x02,0x00,0x00,0x8B,0x8C,0x24,0xC8,0x02,0x00,0x00,0x3B,0x8C,0x24,0x58,0x02,0x00,0x00,0x0F,0x87,0x44,0x09,0x00,0x00,0x48,0x8B,0x8C,0x24,0x50,0x02,0x00,0x00,0x48,0x8B,0x94,0x24,0xC0,0x02,0x00,0x00,0x44,0x8B,0x84,0x24,0xC8,0x02,0x00,0x00,0x4D,0x63,0xC0,0xE8,0x02,0x6C,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0xCE,0x22,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x49,0xB8,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x40,0x08,0x49,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x0F,0xBE,0x49,0x08,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0xC0,0x09,0x00,0x00,0x4C,0x0F,0xBE,0x84,0x24,0xC0,0x09,0x00,0x00,0x44,0x88,0x84,0x24,0x48,0x02,0x00,0x00,0x44,0x0F,0xB6,0x84,0x24,0x48,0x02,0x00,0x00,0x48,0xBA,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x88,0x94,0x24,0x40,0x02,0x00,0x00,0x0F,0xB6,0x94,0x24,0x40,0x02,0x00,0x00,0x49,0xB9,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x0F,0xBE,0x49,0x08,0x44,0x88,0x8C,0x24,0x38,0x02,0x00,0x00,0x44,0x0F,0xB6,0x8C,0x24,0x38,0x02,0x00,0x00,0x48,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x0F,0xBE,0x49,0x08,0x88,0x8C,0x24,0x30,0x02,0x00,0x00,0x33,0xC9,0x89,0x8C,0x24,0x2C,0x02,0x00,0x00,0x89,0x8C,0x24,0x28,0x02,0x00,0x00,0x89,0x8C,0x24,0x24,0x02,0x00,0x00,0x89,0x8C,0x24,0x24,0x02,0x00,0x00,0x45,0x84,0xC0,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x24,0x02,0x00,0x00,0x41,0x83,0xC8,0x01,0x44,0x88,0x84,0x24,0x24,0x02,0x00,0x00,0x84,0xD2,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x24,0x02,0x00,0x00,0x41,0x83,0xC8,0x02,0x44,0x88,0x84,0x24,0x24,0x02,0x00,0x00,0x44,0x8B,0x84,0x24,0x24,0x02,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0x28,0x02,0x00,0x00,0x45,0x84,0xC9,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x28,0x02,0x00,0x00,0x41,0x83,0xC8,0x04,0x44,0x88,0x84,0x24,0x28,0x02,0x00,0x00,0x44,0x8B,0x84,0x24,0x28,0x02,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x84,0x24,0x2C,0x02,0x00,0x00,0x80,0xBC,0x24,0x30,0x02,0x00,0x00,0x00,0x74,0x15,0x44,0x0F,0xB6,0x84,0x24,0x2C,0x02,0x00,0x00,0x41,0x83,0xC8,0x08,0x44,0x88,0x84,0x24,0x2C,0x02,0x00,0x00,0x44,0x8B,0x84,0x24,0x2C,0x02,0x00,0x00,0x45,0x0F,0xB6,0xC0,0x44,0x88,0x47,0x10,0x4C,0x8D,0x84,0x24,0xF0,0x01,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC4,0xC1,0x7A,0x7F,0x00,0x48,0x83,0xC7,0x10,0x48,0x89,0xBC,0x24,0xE8,0x01,0x00,0x00,0x4C,0x8B,0x84,0x24,0xE8,0x01,0x00,0x00,0x48,0x8D,0x94,0x24,0xF0,0x01,0x00,0x00,0x4C,0x89,0x02,0xC7,0x84,0x24,0xF8,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xF0,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x00,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x00,0x02,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xD8,0x01,0x00,0x00,0x44,0x8B,0x84,0x24,0xE0,0x01,0x00,0x00,0x4D,0x63,0xC0,0x4C,0x89,0x84,0x24,0xB8,0x01,0x00,0x00,0x4C,0x8B,0x84,0x24,0xB8,0x01,0x00,0x00,0x4C,0x89,0x84,0x24,0xD0,0x01,0x00,0x00,0x4C,0x8B,0x84,0x24,0xD0,0x01,0x00,0x00,0x4C,0x89,0x84,0x24,0xB0,0x01,0x00,0x00,0x49,0xB8,0xB8,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x8B,0x40,0x08,0x4C,0x89,0x84,0x24,0xA8,0x01,0x00,0x00,0x4C,0x8B,0x84,0x24,0xB0,0x01,0x00,0x00,0x4C,0x0F,0xAF,0x84,0x24,0xA8,0x01,0x00,0x00,0x4C,0x89,0x84,0x24,0xA0,0x01,0x00,0x00,0x4C,0x8B,0x84,0x24,0xA0,0x01,0x00,0x00,0x4C,0x89,0x84,0x24,0xC8,0x01,0x00,0x00,0x4C,0x8B,0x84,0x24,0xC8,0x01,0x00,0x00,0x4C,0x89,0x84,0x24,0x98,0x01,0x00,0x00,0x44,0x8B,0x84,0x24,0x98,0x01,0x00,0x00,0x48,0xBA,0xC0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x48,0x89,0x94,0x24,0x90,0x01,0x00,0x00,0x33,0xD2,0x48,0x89,0x94,0x24,0xC0,0x01,0x00,0x00,0x44,0x3B,0x84,0x24,0x90,0x01,0x00,0x00,0x41,0x0F,0x9D,0xC0,0x45,0x0F,0xB6,0xC0,0xC7,0x84,0x24,0xC4,0x01,0x00,0x00,0x96,0x00,0x00,0x00,0xC6,0x84,0x24,0xC0,0x01,0x00,0x00,0x01,0x48,0x8B,0x94,0x24,0xC0,0x01,0x00,0x00,0x48,0x89,0x94,0x24,0x88,0x01,0x00,0x00,0x45,0x84,0xC0,0x75,0x29,0x49,0xB8,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x48,0xBA,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x4C,0x8B,0x8C,0x24,0x88,0x01,0x00,0x00,0x33,0xC9,0xE8,0x2B,0x12,0x73,0xFF,0xC5,0xFA,0x6F,0x84,0x24,0xD8,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x10,0x02,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x10,0x02,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xB0,0x09,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xB0,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x78,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x78,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x68,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x68,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x58,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x48,0x01,0x00,0x00,0x48,0xB9,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0x49,0xBB,0x68,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x05,0x00,0x00,0x00,0x48,0xB8,0x68,0x0E,0x4B,0xD0,0xFD,0x7F,0x00,0x00,0x39,0x09,0xFF,0x10,0x48,0x8D,0x8C,0x24,0x18,0x01,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x85,0xC0,0x75,0x12,0x48,0x8D,0x84,0x24,0x18,0x01,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xEB,0x29,0x48,0x8D,0x48,0x10,0x48,0x89,0x8C,0x24,0x10,0x01,0x00,0x00,0x48,0x8B,0x8C,0x24,0x10,0x01,0x00,0x00,0x48,0x8D,0x94,0x24,0x18,0x01,0x00,0x00,0x48,0x89,0x0A,0x8B,0x48,0x08,0x89,0x8C,0x24,0x20,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x18,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x28,0x01,0x00,0x00,0x83,0xBC,0x24,0x30,0x01,0x00,0x00,0x00,0x0F,0x86,0x25,0x05,0x00,0x00,0x48,0x8B,0x8C,0x24,0x28,0x01,0x00,0x00,0x0F,0xB7,0x09,0x48,0xBA,0xB0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x8B,0x52,0x18,0x44,0x8B,0xC1,0x8B,0xC2,0x4C,0x03,0xC0,0x8B,0x84,0x24,0x50,0x01,0x00,0x00,0x4C,0x3B,0xC0,0x0F,0x87,0xE6,0x04,0x00,0x00,0x4C,0x8B,0x84,0x24,0x48,0x01,0x00,0x00,0x48,0x8D,0x84,0x24,0x00,0x01,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0x48,0x63,0xC9,0x49,0x03,0xC8,0x48,0x89,0x8C,0x24,0xF8,0x00,0x00,0x00,0x48,0x8B,0x8C,0x24,0xF8,0x00,0x00,0x00,0x4C,0x8D,0x84,0x24,0x00,0x01,0x00,0x00,0x49,0x89,0x08,0x89,0x94,0x24,0x08,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x00,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x38,0x01,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x38,0x01,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xE8,0x00,0x00,0x00,0x8B,0x8C,0x24,0x60,0x01,0x00,0x00,0x3B,0x8C,0x24,0xF0,0x00,0x00,0x00,0x0F,0x87,0x74,0x04,0x00,0x00,0x48,0x8B,0x8C,0x24,0xE8,0x00,0x00,0x00,0x48,0x8B,0x94,0x24,0x58,0x01,0x00,0x00,0x44,0x8B,0x84,0x24,0x60,0x01,0x00,0x00,0x4D,0x63,0xC0,0xE8,0x26,0x67,0x68,0x39,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0xF2,0x1D,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x49,0xB8,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x40,0x08,0x49,0xB9,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x0F,0xBE,0x49,0x08,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xFF,0x50,0x18,0x89,0x84,0x24,0xA8,0x09,0x00,0x00,0x48,0x0F,0xBE,0x94,0x24,0xA8,0x09,0x00,0x00,0x88,0x94,0x24,0xE0,0x00,0x00,0x00,0x0F,0xB6,0x94,0x24,0xE0,0x00,0x00,0x00,0x48,0xB9,0x18,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x0F,0xBE,0x49,0x08,0x88,0x8C,0x24,0xD8,0x00,0x00,0x00,0x0F,0xB6,0x8C,0x24,0xD8,0x00,0x00,0x00,0x48,0xB8,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x00,0x48,0x0F,0xBE,0x40,0x08,0x88,0x84,0x24,0xD0,0x00,0x00,0x00,0x0F,0xB6,0x84,0x24,0xD0,0x00,0x00,0x00,0x49,0xB8,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x40,0x08,0x44,0x88,0x84,0x24,0xC8,0x00,0x00,0x00,0x45,0x33,0xC0,0x44,0x89,0x84,0x24,0xC4,0x00,0x00,0x00,0x44,0x89,0x84,0x24,0xC0,0x00,0x00,0x00,0x44,0x89,0x84,0x24,0xBC,0x00,0x00,0x00,0x44,0x89,0x84,0x24,0xBC,0x00,0x00,0x00,0x84,0xD2,0x74,0x12,0x0F,0xB6,0x94,0x24,0xBC,0x00,0x00,0x00,0x83,0xCA,0x01,0x88,0x94,0x24,0xBC,0x00,0x00,0x00,0x84,0xC9,0x74,0x12,0x0F,0xB6,0x94,0x24,0xBC,0x00,0x00,0x00,0x83,0xCA,0x02,0x88,0x94,0x24,0xBC,0x00,0x00,0x00,0x8B,0x94,0x24,0xBC,0x00,0x00,0x00,0x0F,0xB6,0xD2,0x88,0x94,0x24,0xC0,0x00,0x00,0x00,0x84,0xC0,0x74,0x12,0x0F,0xB6,0x94,0x24,0xC0,0x00,0x00,0x00,0x83,0xCA,0x04,0x88,0x94,0x24,0xC0,0x00,0x00,0x00,0x8B,0x94,0x24,0xC0,0x00,0x00,0x00,0x0F,0xB6,0xD2,0x88,0x94,0x24,0xC4,0x00,0x00,0x00,0x80,0xBC,0x24,0xC8,0x00,0x00,0x00,0x00,0x74,0x12,0x0F,0xB6,0x94,0x24,0xC4,0x00,0x00,0x00,0x83,0xCA,0x08,0x88,0x94,0x24,0xC4,0x00,0x00,0x00,0x8B,0x94,0x24,0xC4,0x00,0x00,0x00,0x0F,0xB6,0xD2,0x88,0x57,0x10,0x48,0x8D,0x94,0x24,0x88,0x00,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x02,0x48,0x83,0xC7,0x10,0x48,0x89,0xBC,0x24,0x80,0x00,0x00,0x00,0x48,0x8B,0x94,0x24,0x80,0x00,0x00,0x00,0x48,0x8D,0x8C,0x24,0x88,0x00,0x00,0x00,0x48,0x89,0x11,0xC7,0x84,0x24,0x90,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x88,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x98,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x98,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x44,0x24,0x70,0x8B,0x54,0x24,0x78,0x48,0x63,0xD2,0x48,0x89,0x54,0x24,0x50,0x48,0x8B,0x54,0x24,0x50,0x48,0x89,0x54,0x24,0x68,0x48,0x8B,0x54,0x24,0x68,0x48,0x89,0x54,0x24,0x48,0x48,0xBA,0xB8,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x8B,0x52,0x08,0x48,0x89,0x54,0x24,0x40,0x33,0xD2,0x48,0x89,0x54,0x24,0x38,0x48,0x8B,0x54,0x24,0x48,0x48,0x0F,0xAF,0x54,0x24,0x40,0x48,0x8D,0x4C,0x24,0x38,0xE8,0x97,0xE8,0xCC,0xFF,0x48,0x8B,0x4C,0x24,0x38,0x48,0x89,0x4C,0x24,0x60,0x48,0x8B,0x4C,0x24,0x60,0xE8,0xCB,0xE7,0xCC,0xFF,0x8B,0xF8,0x33,0xC9,0x48,0x89,0x4C,0x24,0x58,0x48,0xB9,0xC0,0xF4,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x8B,0x49,0x08,0xE8,0xAC,0xE7,0xCC,0xFF,0x3B,0xC7,0x40,0x0F,0x9E,0xC7,0x40,0x0F,0xB6,0xFF,0x48,0x8D,0x4C,0x24,0x58,0xBA,0x96,0x00,0x00,0x00,0xE8,0x7B,0x85,0x99,0x39,0x4C,0x8B,0x44,0x24,0x58,0x4C,0x89,0x44,0x24,0x20,0x49,0xB8,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x49,0xB9,0xA8,0xE9,0x4A,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x8B,0xCF,0x33,0xD2,0xE8,0xB6,0x0D,0x73,0xFF,0xC5,0xFA,0x6F,0x84,0x24,0x88,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0xA8,0x00,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0xA8,0x00,0x00,0x00,0xC5,0xFA,0x7F,0x84,0x24,0x98,0x09,0x00,0x00,0x48,0x8D,0x8C,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x98,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x44,0x24,0x28,0x4C,0x8D,0x44,0x24,0x28,0xBA,0x06,0x00,0x00,0x00,0xE8,0x34,0xDD,0xFF,0xFF,0x48,0xB9,0x10,0xEA,0x5A,0xD0,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x00,0x1B,0x24,0x5F,0x48,0x8B,0xF8,0x48,0xBA,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x12,0x48,0x0F,0xBE,0x52,0x08,0x49,0xB8,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x00,0x4D,0x0F,0xBE,0x40,0x08,0x49,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x4D,0x8B,0x09,0x4D,0x0F,0xBE,0x49,0x08,0x48,0x8B,0x4E,0x08,0xFF,0x56,0x18,0x89,0x84,0x24,0x90,0x09,0x00,0x00,0x48,0x0F,0xBE,0x8C,0x24,0x90,0x09,0x00,0x00,0xE8,0x03,0x9B,0x73,0xFF,0x8B,0xF0,0x48,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x0F,0xBE,0x49,0x08,0xE8,0xEA,0x9A,0x73,0xFF,0x8B,0xE8,0x48,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x0F,0xBE,0x49,0x08,0xE8,0xD1,0x9A,0x73,0xFF,0x44,0x8B,0xF0,0x48,0xB9,0x20,0x72,0x49,0x3E,0x7D,0x02,0x00,0x00,0x48,0x8B,0x09,0x48,0x0F,0xBE,0x49,0x08,0xE8,0xB7,0x9A,0x73,0xFF,0x44,0x8B,0xC8,0x8B,0xD5,0x45,0x8B,0xC6,0x8B,0xCE,0xE8,0x78,0x6D,0xDD,0xFF,0x88,0x47,0x10,0x48,0x8D,0x8C,0x24,0x80,0x09,0x00,0x00,0x48,0x8B,0xD7,0xE8,0x6D,0xD0,0xFF,0xFF,0x48,0x8D,0x8C,0x24,0x40,0x0A,0x00,0x00,0xC5,0xFA,0x6F,0x84,0x24,0x80,0x09,0x00,0x00,0xC5,0xFA,0x7F,0x44,0x24,0x28,0x4C,0x8D,0x44,0x24,0x28,0xBA,0x07,0x00,0x00,0x00,0xE8,0x37,0xDC,0xFF,0xFF,0x48,0x8B,0xFB,0x48,0x8D,0xB4,0x24,0x40,0x0A,0x00,0x00,0xE8,0xB7,0x0A,0x24,0x5F,0x48,0xA5,0x48,0x8B,0xC3,0x48,0x81,0xC4,0x50,0x0A,0x00,0x00,0x5B,0x5D,0x5E,0x5F,0x41,0x5E,0xC3,0xE8,0x9F,0x0D,0x74,0xFF,0xCC,0xE8,0xA1,0x0D,0x74,0xFF,0xCC,0xE8,0x93,0x0D,0x74,0xFF,0xCC,0xE8,0x95,0x0D,0x74,0xFF,0xCC,0xE8,0x87,0x0D,0x74,0xFF,0xCC,0xE8,0x89,0x0D,0x74,0xFF,0xCC,0xE8,0x7B,0x0D,0x74,0xFF,0xCC,0xE8,0x7D,0x0D,0x74,0xFF,0xCC,0xE8,0x6F,0x0D,0x74,0xFF,0xCC,0xE8,0x71,0x0D,0x74,0xFF,0xCC,0xE8,0x63,0x0D,0x74,0xFF,0xCC,0xE8,0x65,0x0D,0x74,0xFF,0xCC,0xE8,0xC7,0xC2,0x36,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
