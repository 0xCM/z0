; 2020-01-08 01:52:28:225
; function: int cell_count_32x64x8()
; static ReadOnlySpan<byte> cell_count_32x64x8Bytes => new byte[68]{0x48,0x83,0xEC,0x28,0x90,0xC6,0x44,0x24,0x20,0x00,0x48,0x8D,0x44,0x24,0x20,0xC6,0x00,0x00,0xC6,0x44,0x24,0x18,0x00,0x48,0x8D,0x44,0x24,0x18,0xC6,0x00,0x00,0xC6,0x44,0x24,0x08,0x00,0x48,0x8D,0x44,0x24,0x08,0xC6,0x00,0x00,0xB8,0x08,0x00,0x00,0x00,0xC6,0x04,0x24,0x00,0x48,0x8D,0x14,0x24,0xC6,0x02,0x00,0xC1,0xE0,0x05,0x48,0x83,0xC4,0x28,0xC3};
0000h sub rsp,28h                             ; SUB(Sub_rm64_imm8) [RSP,28h:imm64]         encoding(4 bytes) = 48 83 ec 28
0004h nop                                     ; NOP(Nopd)                                  encoding(1 byte ) = 90
0005h mov byte ptr [rsp+20h],0                ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,:sr),0h:imm8] encoding(5 bytes) = c6 44 24 20 00
000ah lea rax,[rsp+20h]                       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,:sr)] encoding(5 bytes) = 48 8d 44 24 20
000fh mov byte ptr [rax],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RAX:br,:sr),0h:imm8] encoding(3 bytes) = c6 00 00
0012h mov byte ptr [rsp+18h],0                ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,:sr),0h:imm8] encoding(5 bytes) = c6 44 24 18 00
0017h lea rax,[rsp+18h]                       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,:sr)] encoding(5 bytes) = 48 8d 44 24 18
001ch mov byte ptr [rax],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RAX:br,:sr),0h:imm8] encoding(3 bytes) = c6 00 00
001fh mov byte ptr [rsp+8],0                  ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,:sr),0h:imm8] encoding(5 bytes) = c6 44 24 08 00
0024h lea rax,[rsp+8]                         ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,:sr)] encoding(5 bytes) = 48 8d 44 24 08
0029h mov byte ptr [rax],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RAX:br,:sr),0h:imm8] encoding(3 bytes) = c6 00 00
002ch mov eax,8                               ; MOV(Mov_r32_imm32) [EAX,8h:imm32]          encoding(5 bytes) = b8 08 00 00 00
0031h mov byte ptr [rsp],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,:sr),0h:imm8] encoding(4 bytes) = c6 04 24 00
0035h lea rdx,[rsp]                           ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,:sr)] encoding(4 bytes) = 48 8d 14 24
0039h mov byte ptr [rdx],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RDX:br,:sr),0h:imm8] encoding(3 bytes) = c6 02 00
003ch shl eax,5                               ; SHL(Shl_rm32_imm8) [EAX,5h:imm8]           encoding(3 bytes) = c1 e0 05
003fh add rsp,28h                             ; ADD(Add_rm64_imm8) [RSP,28h:imm64]         encoding(4 bytes) = 48 83 c4 28
0043h ret                                     ; RET(Retnq)                                 encoding(1 byte ) = c3
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: TableIndex tableindex_32x64x8(int row, int col)
; static ReadOnlySpan<byte> tableindex_32x64x8Bytes => new byte[239]{0x57,0x56,0x48,0x83,0xEC,0x58,0xC5,0xF8,0x77,0xC6,0x44,0x24,0x50,0x00,0x48,0x8D,0x44,0x24,0x50,0xC6,0x00,0x00,0xC6,0x44,0x24,0x48,0x00,0x48,0x8D,0x44,0x24,0x48,0xC6,0x00,0x00,0xC6,0x44,0x24,0x38,0x00,0x48,0x8D,0x44,0x24,0x38,0xC6,0x00,0x00,0xB8,0x08,0x00,0x00,0x00,0x89,0x44,0x24,0x34,0x0F,0xB7,0x44,0x24,0x34,0x44,0x8B,0xC8,0x44,0x0F,0xAF,0xCA,0x45,0x8B,0xD0,0x41,0xC1,0xFA,0x1F,0x41,0x83,0xE2,0x07,0x45,0x03,0xD0,0x41,0xC1,0xFA,0x03,0x4D,0x63,0xD2,0x45,0x8B,0xD9,0x4D,0x03,0xD3,0x4C,0x89,0x54,0x24,0x28,0x44,0x0F,0xB7,0x54,0x24,0x28,0x45,0x8B,0xD8,0x41,0xC1,0xFB,0x1F,0x41,0x83,0xE3,0x07,0x45,0x03,0xD8,0x41,0x83,0xE3,0xF8,0x41,0x8B,0xF0,0x41,0x2B,0xF3,0x89,0x74,0x24,0x24,0x44,0x0F,0xB6,0x5C,0x24,0x24,0x45,0x8B,0xC9,0x49,0x63,0xF0,0x4C,0x03,0xCE,0x4C,0x89,0x4C,0x24,0x18,0x44,0x8B,0x4C,0x24,0x18,0x33,0xF6,0x48,0x8D,0x3C,0x24,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x07,0x89,0x77,0x10,0x45,0x0F,0xB7,0xD2,0x66,0x44,0x89,0x14,0x24,0x66,0x89,0x44,0x24,0x02,0x41,0x0F,0xB6,0xC3,0x88,0x44,0x24,0x04,0x89,0x54,0x24,0x0C,0x44,0x89,0x44,0x24,0x10,0x44,0x89,0x4C,0x24,0x08,0xC5,0xFA,0x6F,0x04,0x24,0xC5,0xFA,0x7F,0x01,0x8B,0x44,0x24,0x10,0x89,0x41,0x10,0x48,0x8B,0xC1,0x48,0x83,0xC4,0x58,0x5E,0x5F,0xC3};
0000h push rdi                                ; PUSH(Push_r64) [RDI]                       encoding(1 byte ) = 57
0001h push rsi                                ; PUSH(Push_r64) [RSI]                       encoding(1 byte ) = 56
0002h sub rsp,58h                             ; SUB(Sub_rm64_imm8) [RSP,58h:imm64]         encoding(4 bytes) = 48 83 ec 58
0006h vzeroupper                              ; VZEROUPPER(VEX_Vzeroupper)                 encoding(VEX, 3 bytes) = c5 f8 77
0009h mov byte ptr [rsp+50h],0                ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,:sr),0h:imm8] encoding(5 bytes) = c6 44 24 50 00
000eh lea rax,[rsp+50h]                       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,:sr)] encoding(5 bytes) = 48 8d 44 24 50
0013h mov byte ptr [rax],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RAX:br,:sr),0h:imm8] encoding(3 bytes) = c6 00 00
0016h mov byte ptr [rsp+48h],0                ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,:sr),0h:imm8] encoding(5 bytes) = c6 44 24 48 00
001bh lea rax,[rsp+48h]                       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,:sr)] encoding(5 bytes) = 48 8d 44 24 48
0020h mov byte ptr [rax],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RAX:br,:sr),0h:imm8] encoding(3 bytes) = c6 00 00
0023h mov byte ptr [rsp+38h],0                ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,:sr),0h:imm8] encoding(5 bytes) = c6 44 24 38 00
0028h lea rax,[rsp+38h]                       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,:sr)] encoding(5 bytes) = 48 8d 44 24 38
002dh mov byte ptr [rax],0                    ; MOV(Mov_rm8_imm8) [mem(8u,RAX:br,:sr),0h:imm8] encoding(3 bytes) = c6 00 00
0030h mov eax,8                               ; MOV(Mov_r32_imm32) [EAX,8h:imm32]          encoding(5 bytes) = b8 08 00 00 00
0035h mov [rsp+34h],eax                       ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,:sr),EAX] encoding(4 bytes) = 89 44 24 34
0039h movzx eax,word ptr [rsp+34h]            ; MOVZX(Movzx_r32_rm16) [EAX,mem(16u,RSP:br,:sr)] encoding(5 bytes) = 0f b7 44 24 34
003eh mov r9d,eax                             ; MOV(Mov_r32_rm32) [R9D,EAX]                encoding(3 bytes) = 44 8b c8
0041h imul r9d,edx                            ; IMUL(Imul_r32_rm32) [R9D,EDX]              encoding(4 bytes) = 44 0f af ca
0045h mov r10d,r8d                            ; MOV(Mov_r32_rm32) [R10D,R8D]               encoding(3 bytes) = 45 8b d0
0048h sar r10d,1Fh                            ; SAR(Sar_rm32_imm8) [R10D,1fh:imm8]         encoding(4 bytes) = 41 c1 fa 1f
004ch and r10d,7                              ; AND(And_rm32_imm8) [R10D,7h:imm32]         encoding(4 bytes) = 41 83 e2 07
0050h add r10d,r8d                            ; ADD(Add_r32_rm32) [R10D,R8D]               encoding(3 bytes) = 45 03 d0
0053h sar r10d,3                              ; SAR(Sar_rm32_imm8) [R10D,3h:imm8]          encoding(4 bytes) = 41 c1 fa 03
0057h movsxd r10,r10d                         ; MOVSXD(Movsxd_r64_rm32) [R10,R10D]         encoding(3 bytes) = 4d 63 d2
005ah mov r11d,r9d                            ; MOV(Mov_r32_rm32) [R11D,R9D]               encoding(3 bytes) = 45 8b d9
005dh add r10,r11                             ; ADD(Add_r64_rm64) [R10,R11]                encoding(3 bytes) = 4d 03 d3
0060h mov [rsp+28h],r10                       ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,:sr),R10] encoding(5 bytes) = 4c 89 54 24 28
0065h movzx r10d,word ptr [rsp+28h]           ; MOVZX(Movzx_r32_rm16) [R10D,mem(16u,RSP:br,:sr)] encoding(6 bytes) = 44 0f b7 54 24 28
006bh mov r11d,r8d                            ; MOV(Mov_r32_rm32) [R11D,R8D]               encoding(3 bytes) = 45 8b d8
006eh sar r11d,1Fh                            ; SAR(Sar_rm32_imm8) [R11D,1fh:imm8]         encoding(4 bytes) = 41 c1 fb 1f
0072h and r11d,7                              ; AND(And_rm32_imm8) [R11D,7h:imm32]         encoding(4 bytes) = 41 83 e3 07
0076h add r11d,r8d                            ; ADD(Add_r32_rm32) [R11D,R8D]               encoding(3 bytes) = 45 03 d8
0079h and r11d,0FFFFFFF8h                     ; AND(And_rm32_imm8) [R11D,fffffffffffffff8h:imm32] encoding(4 bytes) = 41 83 e3 f8
007dh mov esi,r8d                             ; MOV(Mov_r32_rm32) [ESI,R8D]                encoding(3 bytes) = 41 8b f0
0080h sub esi,r11d                            ; SUB(Sub_r32_rm32) [ESI,R11D]               encoding(3 bytes) = 41 2b f3
0083h mov [rsp+24h],esi                       ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,:sr),ESI] encoding(4 bytes) = 89 74 24 24
0087h movzx r11d,byte ptr [rsp+24h]           ; MOVZX(Movzx_r32_rm8) [R11D,mem(8u,RSP:br,:sr)] encoding(6 bytes) = 44 0f b6 5c 24 24
008dh mov r9d,r9d                             ; MOV(Mov_r32_rm32) [R9D,R9D]                encoding(3 bytes) = 45 8b c9
0090h movsxd rsi,r8d                          ; MOVSXD(Movsxd_r64_rm32) [RSI,R8D]          encoding(3 bytes) = 49 63 f0
0093h add r9,rsi                              ; ADD(Add_r64_rm64) [R9,RSI]                 encoding(3 bytes) = 4c 03 ce
0096h mov [rsp+18h],r9                        ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,:sr),R9] encoding(5 bytes) = 4c 89 4c 24 18
009bh mov r9d,[rsp+18h]                       ; MOV(Mov_r32_rm32) [R9D,mem(32u,RSP:br,:sr)] encoding(5 bytes) = 44 8b 4c 24 18
00a0h xor esi,esi                             ; XOR(Xor_r32_rm32) [ESI,ESI]                encoding(2 bytes) = 33 f6
00a2h lea rdi,[rsp]                           ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,:sr)] encoding(4 bytes) = 48 8d 3c 24
00a6h vxorps xmm0,xmm0,xmm0                   ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0] encoding(VEX, 4 bytes) = c5 f8 57 c0
00aah vmovdqu xmmword ptr [rdi],xmm0          ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RDI:br,:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 07
00aeh mov [rdi+10h],esi                       ; MOV(Mov_rm32_r32) [mem(32u,RDI:br,:sr),ESI] encoding(3 bytes) = 89 77 10
00b1h movzx r10d,r10w                         ; MOVZX(Movzx_r32_rm16) [R10D,R10W]          encoding(4 bytes) = 45 0f b7 d2
00b5h mov [rsp],r10w                          ; MOV(Mov_rm16_r16) [mem(16u,RSP:br,:sr),R10W] encoding(5 bytes) = 66 44 89 14 24
00bah mov [rsp+2],ax                          ; MOV(Mov_rm16_r16) [mem(16u,RSP:br,:sr),AX] encoding(5 bytes) = 66 89 44 24 02
00bfh movzx eax,r11b                          ; MOVZX(Movzx_r32_rm8) [EAX,R11L]            encoding(4 bytes) = 41 0f b6 c3
00c3h mov [rsp+4],al                          ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,:sr),AL]    encoding(4 bytes) = 88 44 24 04
00c7h mov [rsp+0Ch],edx                       ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,:sr),EDX] encoding(4 bytes) = 89 54 24 0c
00cbh mov [rsp+10h],r8d                       ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,:sr),R8D] encoding(5 bytes) = 44 89 44 24 10
00d0h mov [rsp+8],r9d                         ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,:sr),R9D] encoding(5 bytes) = 44 89 4c 24 08
00d5h vmovdqu xmm0,xmmword ptr [rsp]          ; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSP:br,:sr)] encoding(VEX, 5 bytes) = c5 fa 6f 04 24
00dah vmovdqu xmmword ptr [rcx],xmm0          ; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
00deh mov eax,[rsp+10h]                       ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,:sr)] encoding(4 bytes) = 8b 44 24 10
00e2h mov [rcx+10h],eax                       ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,:sr),EAX] encoding(3 bytes) = 89 41 10
00e5h mov rax,rcx                             ; MOV(Mov_r64_rm64) [RAX,RCX]                encoding(3 bytes) = 48 8b c1
00e8h add rsp,58h                             ; ADD(Add_rm64_imm8) [RSP,58h:imm64]         encoding(4 bytes) = 48 83 c4 58
00ech pop rsi                                 ; POP(Pop_r64) [RSI]                         encoding(1 byte ) = 5e
00edh pop rdi                                 ; POP(Pop_r64) [RDI]                         encoding(1 byte ) = 5f
00eeh ret                                     ; RET(Retnq)                                 encoding(1 byte ) = c3
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref BitMatrix<uint> and(in BitMatrix<uint> A, in BitMatrix<uint> B, in BitMatrix<uint> Z)
; static ReadOnlySpan<byte> andBytes => new byte[77]{0x57,0x56,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x48,0x8B,0x12,0x49,0x8B,0x08,0x45,0x33,0xC9,0x45,0x33,0xD2,0x4D,0x63,0xDA,0x49,0xC1,0xE3,0x02,0x4A,0x8D,0x34,0x18,0x4A,0x8D,0x3C,0x1A,0xC5,0xFF,0xF0,0x06,0xC5,0xFF,0xF0,0x0F,0xC5,0xFD,0xDB,0xC1,0x4C,0x03,0xD9,0xC4,0xC1,0x7E,0x7F,0x03,0x41,0xFF,0xC1,0x41,0x83,0xC2,0x08,0x41,0x83,0xF9,0x04,0x7C,0xD0,0x49,0x8B,0xC0,0xC5,0xF8,0x77,0x5E,0x5F,0xC3};
0000h push rdi                                ; PUSH(Push_r64) [RDI]                       encoding(1 byte ) = 57
0001h push rsi                                ; PUSH(Push_r64) [RSI]                       encoding(1 byte ) = 56
0002h vzeroupper                              ; VZEROUPPER(VEX_Vzeroupper)                 encoding(VEX, 3 bytes) = c5 f8 77
0005h mov rax,[rcx]                           ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,:sr)] encoding(3 bytes) = 48 8b 01
0008h mov rdx,[rdx]                           ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,:sr)] encoding(3 bytes) = 48 8b 12
000bh mov rcx,[r8]                            ; MOV(Mov_r64_rm64) [RCX,mem(64u,R8:br,:sr)] encoding(3 bytes) = 49 8b 08
000eh xor r9d,r9d                             ; XOR(Xor_r32_rm32) [R9D,R9D]                encoding(3 bytes) = 45 33 c9
0011h xor r10d,r10d                           ; XOR(Xor_r32_rm32) [R10D,R10D]              encoding(3 bytes) = 45 33 d2
0014h movsxd r11,r10d                         ; MOVSXD(Movsxd_r64_rm32) [R11,R10D]         encoding(3 bytes) = 4d 63 da
0017h shl r11,2                               ; SHL(Shl_rm64_imm8) [R11,2h:imm8]           encoding(4 bytes) = 49 c1 e3 02
001bh lea rsi,[rax+r11]                       ; LEA(Lea_r64_m) [RSI,mem(Unknown,RAX:br,:sr)] encoding(4 bytes) = 4a 8d 34 18
001fh lea rdi,[rdx+r11]                       ; LEA(Lea_r64_m) [RDI,mem(Unknown,RDX:br,:sr)] encoding(4 bytes) = 4a 8d 3c 1a
0023h vlddqu ymm0,ymmword ptr [rsi]           ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RSI:br,:sr)] encoding(VEX, 4 bytes) = c5 ff f0 06
0027h vlddqu ymm1,ymmword ptr [rdi]           ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM1,mem(UInt256,RDI:br,:sr)] encoding(VEX, 4 bytes) = c5 ff f0 0f
002bh vpand ymm0,ymm0,ymm1                    ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1] encoding(VEX, 4 bytes) = c5 fd db c1
002fh add r11,rcx                             ; ADD(Add_r64_rm64) [R11,RCX]                encoding(3 bytes) = 4c 03 d9
0032h vmovdqu ymmword ptr [r11],ymm0          ; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
0037h inc r9d                                 ; INC(Inc_rm32) [R9D]                        encoding(3 bytes) = 41 ff c1
003ah add r10d,8                              ; ADD(Add_rm32_imm8) [R10D,8h:imm32]         encoding(4 bytes) = 41 83 c2 08
003eh cmp r9d,4                               ; CMP(Cmp_rm32_imm8) [R9D,4h:imm32]          encoding(4 bytes) = 41 83 f9 04
0042h jl short 0014h                          ; JL(Jl_rel8_64) [14h:jmp64]                 encoding(2 bytes) = 7c d0
0044h mov rax,r8                              ; MOV(Mov_r64_rm64) [RAX,R8]                 encoding(3 bytes) = 49 8b c0
0047h vzeroupper                              ; VZEROUPPER(VEX_Vzeroupper)                 encoding(VEX, 3 bytes) = c5 f8 77
004ah pop rsi                                 ; POP(Pop_r64) [RSI]                         encoding(1 byte ) = 5e
004bh pop rdi                                 ; POP(Pop_r64) [RDI]                         encoding(1 byte ) = 5f
004ch ret                                     ; RET(Retnq)                                 encoding(1 byte ) = c3
----------------------------------------------------------------------------------------------------------------------------------------------------------------
