; 2019-10-28 07:21:25:782
; function: BitMatrix8 bm_transpose_8x8(BitMatrix8 A, ref BitMatrix8 Z)
; location: [7FFDDBAE7AA0h, 7FFDDBAE7B9Ch]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
0006h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0008h mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
000dh mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
0010h test rcx,rcx                  ; TEST(Test_rm64_r64) [RCX,RCX]                        encoding(3 bytes) = 48 85 c9
0013h jne short 001bh               ; JNE(Jne_rel8_64) [1Bh:jmp64]                         encoding(2 bytes) = 75 06
0015h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0017h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0019h jmp short 0022h               ; JMP(Jmp_rel8_64) [22h:jmp64]                         encoding(2 bytes) = eb 07
001bh lea rax,[rcx+10h]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 48 8d 41 10
001fh mov edx,[rcx+8]               ; MOV(Mov_r32_rm32) [EDX,mem(32u,RCX:br,DS:sr)]        encoding(3 bytes) = 8b 51 08
0022h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0027h mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
002ah mov [rcx+8],edx               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),EDX]        encoding(3 bytes) = 89 51 08
002dh lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
0032h call 7FFDDB41DA90h            ; CALL(Call_rel32_64) [FFFFFFFFFF935FF0h:jmp64]        encoding(5 bytes) = e8 b9 5f 93 ff
0037h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
003ah mov rcx,rdi                   ; MOV(Mov_r64_rm64) [RCX,RDI]                          encoding(3 bytes) = 48 8b cf
003dh shr rcx,7                     ; SHR(Shr_rm64_imm8) [RCX,7h:imm8]                     encoding(4 bytes) = 48 c1 e9 07
0041h xor rcx,rdi                   ; XOR(Xor_r64_rm64) [RCX,RDI]                          encoding(3 bytes) = 48 33 cf
0044h mov rdx,0AA00AA00AA00AAh      ; MOV(Mov_r64_imm64) [RDX,aa00aa00aa00aah:imm64]       encoding(10 bytes) = 48 ba aa 00 aa 00 aa 00 aa 00
004eh and rcx,rdx                   ; AND(And_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 23 ca
0051h xor rdi,rcx                   ; XOR(Xor_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 33 f9
0054h shl rcx,7                     ; SHL(Shl_rm64_imm8) [RCX,7h:imm8]                     encoding(4 bytes) = 48 c1 e1 07
0058h xor rdi,rcx                   ; XOR(Xor_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 33 f9
005bh mov rcx,rdi                   ; MOV(Mov_r64_rm64) [RCX,RDI]                          encoding(3 bytes) = 48 8b cf
005eh shr rcx,0Eh                   ; SHR(Shr_rm64_imm8) [RCX,eh:imm8]                     encoding(4 bytes) = 48 c1 e9 0e
0062h xor rcx,rdi                   ; XOR(Xor_r64_rm64) [RCX,RDI]                          encoding(3 bytes) = 48 33 cf
0065h mov rdx,0CCCC0000CCCCh        ; MOV(Mov_r64_imm64) [RDX,cccc0000cccch:imm64]         encoding(10 bytes) = 48 ba cc cc 00 00 cc cc 00 00
006fh and rcx,rdx                   ; AND(And_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 23 ca
0072h xor rdi,rcx                   ; XOR(Xor_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 33 f9
0075h shl rcx,0Eh                   ; SHL(Shl_rm64_imm8) [RCX,eh:imm8]                     encoding(4 bytes) = 48 c1 e1 0e
0079h xor rdi,rcx                   ; XOR(Xor_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 33 f9
007ch mov rcx,rdi                   ; MOV(Mov_r64_rm64) [RCX,RDI]                          encoding(3 bytes) = 48 8b cf
007fh shr rcx,1Ch                   ; SHR(Shr_rm64_imm8) [RCX,1ch:imm8]                    encoding(4 bytes) = 48 c1 e9 1c
0083h xor rcx,rdi                   ; XOR(Xor_r64_rm64) [RCX,RDI]                          encoding(3 bytes) = 48 33 cf
0086h mov edx,0F0F0F0F0h            ; MOV(Mov_r32_imm32) [EDX,f0f0f0f0h:imm32]             encoding(5 bytes) = ba f0 f0 f0 f0
008bh and rcx,rdx                   ; AND(And_r64_rm64) [RCX,RDX]                          encoding(3 bytes) = 48 23 ca
008eh xor rdi,rcx                   ; XOR(Xor_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 33 f9
0091h shl rcx,1Ch                   ; SHL(Shl_rm64_imm8) [RCX,1ch:imm8]                    encoding(4 bytes) = 48 c1 e1 1c
0095h xor rdi,rcx                   ; XOR(Xor_r64_rm64) [RDI,RCX]                          encoding(3 bytes) = 48 33 f9
0098h mov rcx,7FFDDB6A3260h         ; MOV(Mov_r64_imm64) [RCX,7ffddb6a3260h:imm64]         encoding(10 bytes) = 48 b9 60 32 6a db fd 7f 00 00
00a2h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
00a7h call 7FFE3AF245E0h            ; CALL(Call_rel32_64) [5F43CB40h:jmp64]                encoding(5 bytes) = e8 94 ca 43 5f
00ach mov [rax+10h],rdi             ; MOV(Mov_rm64_r64) [mem(64u,RAX:br,DS:sr),RDI]        encoding(4 bytes) = 48 89 78 10
00b0h add rax,10h                   ; ADD(Add_rm64_imm8) [RAX,10h:imm64]                   encoding(4 bytes) = 48 83 c0 10
00b4h mov ecx,1                     ; MOV(Mov_r32_imm32) [ECX,1h:imm32]                    encoding(5 bytes) = b9 01 00 00 00
00b9h imul ecx,8                    ; IMUL(Imul_r32_rm32_imm8) [ECX,ECX,8h:imm32]          encoding(3 bytes) = 6b c9 08
00bch jo short 00f2h                ; JO(Jo_rel8_64) [F2h:jmp64]                           encoding(2 bytes) = 70 34
00beh mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
00c1h mov r8,[rsi]                  ; MOV(Mov_r64_rm64) [R8,mem(64u,RSI:br,DS:sr)]         encoding(3 bytes) = 4c 8b 06
00c4h test r8,r8                    ; TEST(Test_rm64_r64) [R8,R8]                          encoding(3 bytes) = 4d 85 c0
00c7h jne short 00d0h               ; JNE(Jne_rel8_64) [D0h:jmp64]                         encoding(2 bytes) = 75 07
00c9h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
00cbh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
00ceh jmp short 00d8h               ; JMP(Jmp_rel8_64) [D8h:jmp64]                         encoding(2 bytes) = eb 08
00d0h lea rax,[r8+10h]              ; LEA(Lea_r64_m) [RAX,mem(Unknown,R8:br,DS:sr)]        encoding(4 bytes) = 49 8d 40 10
00d4h mov r9d,[r8+8]                ; MOV(Mov_r32_rm32) [R9D,mem(32u,R8:br,DS:sr)]         encoding(4 bytes) = 45 8b 48 08
00d8h cmp ecx,r9d                   ; CMP(Cmp_r32_rm32) [ECX,R9D]                          encoding(3 bytes) = 41 3b c9
00dbh ja short 00f7h                ; JA(Ja_rel8_64) [F7h:jmp64]                           encoding(2 bytes) = 77 1a
00ddh movsxd r8,ecx                 ; MOVSXD(Movsxd_r64_rm32) [R8,ECX]                     encoding(3 bytes) = 4c 63 c1
00e0h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00e3h call 7FFE3A868F00h            ; CALL(Call_rel32_64) [5ED81460h:jmp64]                encoding(5 bytes) = e8 78 13 d8 5e
00e8h mov rax,[rsi]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 06
00ebh add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
00efh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00f0h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00f1h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00f2h call 7FFE3B04ED50h            ; CALL(Call_rel32_64) [5F5672B0h:jmp64]                encoding(5 bytes) = e8 b9 71 56 5f
00f7h call 7FFDDB4304D0h            ; CALL(Call_rel32_64) [FFFFFFFFFF948A30h:jmp64]        encoding(5 bytes) = e8 34 89 94 ff
00fch int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> bm_transpose_8x8Bytes => new byte[253]{0x57,0x56,0x48,0x83,0xEC,0x38,0x33,0xC0,0x48,0x89,0x44,0x24,0x28,0x48,0x8B,0xF2,0x48,0x85,0xC9,0x75,0x06,0x33,0xC0,0x33,0xD2,0xEB,0x07,0x48,0x8D,0x41,0x10,0x8B,0x51,0x08,0x48,0x8D,0x4C,0x24,0x28,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8D,0x4C,0x24,0x28,0xE8,0xB9,0x5F,0x93,0xFF,0x48,0x8B,0xF8,0x48,0x8B,0xCF,0x48,0xC1,0xE9,0x07,0x48,0x33,0xCF,0x48,0xBA,0xAA,0x00,0xAA,0x00,0xAA,0x00,0xAA,0x00,0x48,0x23,0xCA,0x48,0x33,0xF9,0x48,0xC1,0xE1,0x07,0x48,0x33,0xF9,0x48,0x8B,0xCF,0x48,0xC1,0xE9,0x0E,0x48,0x33,0xCF,0x48,0xBA,0xCC,0xCC,0x00,0x00,0xCC,0xCC,0x00,0x00,0x48,0x23,0xCA,0x48,0x33,0xF9,0x48,0xC1,0xE1,0x0E,0x48,0x33,0xF9,0x48,0x8B,0xCF,0x48,0xC1,0xE9,0x1C,0x48,0x33,0xCF,0xBA,0xF0,0xF0,0xF0,0xF0,0x48,0x23,0xCA,0x48,0x33,0xF9,0x48,0xC1,0xE1,0x1C,0x48,0x33,0xF9,0x48,0xB9,0x60,0x32,0x6A,0xDB,0xFD,0x7F,0x00,0x00,0xBA,0x01,0x00,0x00,0x00,0xE8,0x94,0xCA,0x43,0x5F,0x48,0x89,0x78,0x10,0x48,0x83,0xC0,0x10,0xB9,0x01,0x00,0x00,0x00,0x6B,0xC9,0x08,0x70,0x34,0x48,0x8B,0xD0,0x4C,0x8B,0x06,0x4D,0x85,0xC0,0x75,0x07,0x33,0xC0,0x45,0x33,0xC9,0xEB,0x08,0x49,0x8D,0x40,0x10,0x45,0x8B,0x48,0x08,0x41,0x3B,0xC9,0x77,0x1A,0x4C,0x63,0xC1,0x48,0x8B,0xC8,0xE8,0x78,0x13,0xD8,0x5E,0x48,0x8B,0x06,0x48,0x83,0xC4,0x38,0x5E,0x5F,0xC3,0xE8,0xB9,0x71,0x56,0x5F,0xE8,0x34,0x89,0x94,0xFF,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<byte> alloc_8x8u()
; location: [7FFDDBAE7BC0h, 7FFDDBAE7BCFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,7FFDDBAE7A00h         ; MOV(Mov_r64_imm64) [RAX,7ffddbae7a00h:imm64]         encoding(10 bytes) = 48 b8 00 7a ae db fd 7f 00 00
000fh jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(3 bytes) = 48 ff e0
; static ReadOnlySpan<byte> alloc_8x8uBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xB8,0x00,0x7A,0xAE,0xDB,0xFD,0x7F,0x00,0x00,0x48,0xFF,0xE0};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<ushort> alloc_16x16u()
; location: [7FFDDBAE7FF0h, 7FFDDBAE7FFFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,7FFDDBAE7A10h         ; MOV(Mov_r64_imm64) [RAX,7ffddbae7a10h:imm64]         encoding(10 bytes) = 48 b8 10 7a ae db fd 7f 00 00
000fh jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(3 bytes) = 48 ff e0
; static ReadOnlySpan<byte> alloc_16x16uBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xB8,0x10,0x7A,0xAE,0xDB,0xFD,0x7F,0x00,0x00,0x48,0xFF,0xE0};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<uint> alloc_32x32u()
; location: [7FFDDBAE8020h, 7FFDDBAE802Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,7FFDDBAE7A20h         ; MOV(Mov_r64_imm64) [RAX,7ffddbae7a20h:imm64]         encoding(10 bytes) = 48 b8 20 7a ae db fd 7f 00 00
000fh jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(3 bytes) = 48 ff e0
; static ReadOnlySpan<byte> alloc_32x32uBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xB8,0x20,0x7A,0xAE,0xDB,0xFD,0x7F,0x00,0x00,0x48,0xFF,0xE0};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<ulong> alloc_g64x64u()
; location: [7FFDDBAE8050h, 7FFDDBAE805Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h mov rax,7FFDDBAE7A30h         ; MOV(Mov_r64_imm64) [RAX,7ffddbae7a30h:imm64]         encoding(10 bytes) = 48 b8 30 7a ae db fd 7f 00 00
000fh jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(3 bytes) = 48 ff e0
; static ReadOnlySpan<byte> alloc_g64x64uBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x48,0xB8,0x30,0x7A,0xAE,0xDB,0xFD,0x7F,0x00,0x00,0x48,0xFF,0xE0};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix64 bm_from_natspan_64x64x64u(in Span<N64,ulong> src)
; location: [7FFDDBAE8480h, 7FFDDBAE8551h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,48h                   ; SUB(Sub_rm64_imm8) [RSP,48h:imm64]                   encoding(4 bytes) = 48 83 ec 48
0006h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0009h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000bh mov [rsp+38h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 38
0010h vmovdqu xmm0,xmmword ptr [rcx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 01
0014h vmovdqu xmmword ptr [rsp+38h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 38
001ah cmp dword ptr [rsp+40h],0     ; CMP(Cmp_rm32_imm8) [mem(32u,RSP:br,SS:sr),0h:imm32]  encoding(5 bytes) = 83 7c 24 40 00
001fh jne short 0044h               ; JNE(Jne_rel8_64) [44h:jmp64]                         encoding(2 bytes) = 75 23
0021h mov rcx,7FFDDB3E0020h         ; MOV(Mov_r64_imm64) [RCX,7ffddb3e0020h:imm64]         encoding(10 bytes) = 48 b9 20 00 3e db fd 7f 00 00
002bh mov edx,56h                   ; MOV(Mov_r32_imm32) [EDX,56h:imm32]                   encoding(5 bytes) = ba 56 00 00 00
0030h call 7FFE3AEEF3E0h            ; CALL(Call_rel32_64) [5F406F60h:jmp64]                encoding(5 bytes) = e8 2b 6f 40 5f
0035h mov rdx,20510002F10h          ; MOV(Mov_r64_imm64) [RDX,20510002f10h:imm64]          encoding(10 bytes) = 48 ba 10 2f 00 10 05 02 00 00
003fh mov rsi,[rdx]                 ; MOV(Mov_r64_rm64) [RSI,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 32
0042h jmp short 0078h               ; JMP(Jmp_rel8_64) [78h:jmp64]                         encoding(2 bytes) = eb 34
0044h mov edx,[rsp+40h]             ; MOV(Mov_r32_rm32) [EDX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 54 24 40
0048h movsxd rsi,edx                ; MOVSXD(Movsxd_r64_rm32) [RSI,EDX]                    encoding(3 bytes) = 48 63 f2
004bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
004eh mov rcx,7FFDDB6A3260h         ; MOV(Mov_r64_imm64) [RCX,7ffddb6a3260h:imm64]         encoding(10 bytes) = 48 b9 60 32 6a db fd 7f 00 00
0058h call 7FFE3AF245E0h            ; CALL(Call_rel32_64) [5F43C160h:jmp64]                encoding(5 bytes) = e8 03 c1 43 5f
005dh mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0060h lea rcx,[rdi+10h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RDI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4f 10
0064h mov rdx,[rsp+38h]             ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSP:br,SS:sr)]        encoding(5 bytes) = 48 8b 54 24 38
0069h mov r8,rsi                    ; MOV(Mov_r64_rm64) [R8,RSI]                           encoding(3 bytes) = 4c 8b c6
006ch shl r8,3                      ; SHL(Shl_rm64_imm8) [R8,3h:imm8]                      encoding(4 bytes) = 49 c1 e0 03
0070h call 7FFE3A868F00h            ; CALL(Call_rel32_64) [5ED80A80h:jmp64]                encoding(5 bytes) = e8 0b 0a d8 5e
0075h mov rsi,rdi                   ; MOV(Mov_r64_rm64) [RSI,RDI]                          encoding(3 bytes) = 48 8b f7
0078h cmp dword ptr [rsi+8],40h     ; CMP(Cmp_rm32_imm8) [mem(32u,RSI:br,DS:sr),40h:imm32] encoding(4 bytes) = 83 7e 08 40
007ch sete r9b                      ; SETE(Sete_rm8) [R9L]                                 encoding(4 bytes) = 41 0f 94 c1
0080h movzx r9d,r9b                 ; MOVZX(Movzx_r32_rm8) [R9D,R9L]                       encoding(4 bytes) = 45 0f b6 c9
0084h mov edx,91h                   ; MOV(Mov_r32_imm32) [EDX,91h:imm32]                   encoding(5 bytes) = ba 91 00 00 00
0089h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
008fh test r9b,r9b                  ; TEST(Test_rm8_r8) [R9L,R9L]                          encoding(3 bytes) = 45 84 c9
0092h jne short 00c8h               ; JNE(Jne_rel8_64) [C8h:jmp64]                         encoding(2 bytes) = 75 34
0094h mov r9,2051001D3C8h           ; MOV(Mov_r64_imm64) [R9,2051001d3c8h:imm64]           encoding(10 bytes) = 49 b9 c8 d3 01 10 05 02 00 00
009eh mov r9,[r9]                   ; MOV(Mov_r64_rm64) [R9,mem(64u,R9:br,DS:sr)]          encoding(3 bytes) = 4d 8b 09
00a1h mov rcx,r9                    ; MOV(Mov_r64_rm64) [RCX,R9]                           encoding(3 bytes) = 49 8b c9
00a4h mov [rsp+28h],r9              ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),R9]         encoding(5 bytes) = 4c 89 4c 24 28
00a9h lea rax,[rsp+30h]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 44 24 30
00aeh mov [rax],r8b                 ; MOV(Mov_rm8_r8) [mem(8u,RAX:br,DS:sr),R8L]           encoding(3 bytes) = 44 88 00
00b1h mov [rax+4],edx               ; MOV(Mov_rm32_r32) [mem(32u,RAX:br,DS:sr),EDX]        encoding(3 bytes) = 89 50 04
00b4h mov r9,[rsp+30h]              ; MOV(Mov_r64_rm64) [R9,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 4c 24 30
00b9h mov rdx,rcx                   ; MOV(Mov_r64_rm64) [RDX,RCX]                          encoding(3 bytes) = 48 8b d1
00bch mov r8,[rsp+28h]              ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 44 24 28
00c1h xor ecx,ecx                   ; XOR(Xor_r32_rm32) [ECX,ECX]                          encoding(2 bytes) = 33 c9
00c3h call 7FFDDB420F78h            ; CALL(Call_rel32_64) [FFFFFFFFFF938AF8h:jmp64]        encoding(5 bytes) = e8 30 8a 93 ff
00c8h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00cbh add rsp,48h                   ; ADD(Add_rm64_imm8) [RSP,48h:imm64]                   encoding(4 bytes) = 48 83 c4 48
00cfh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00d0h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00d1h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> bm_from_natspan_64x64x64uBytes => new byte[210]{0x57,0x56,0x48,0x83,0xEC,0x48,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x44,0x24,0x38,0xC5,0xFA,0x6F,0x01,0xC5,0xFA,0x7F,0x44,0x24,0x38,0x83,0x7C,0x24,0x40,0x00,0x75,0x23,0x48,0xB9,0x20,0x00,0x3E,0xDB,0xFD,0x7F,0x00,0x00,0xBA,0x56,0x00,0x00,0x00,0xE8,0x2B,0x6F,0x40,0x5F,0x48,0xBA,0x10,0x2F,0x00,0x10,0x05,0x02,0x00,0x00,0x48,0x8B,0x32,0xEB,0x34,0x8B,0x54,0x24,0x40,0x48,0x63,0xF2,0x48,0x8B,0xD6,0x48,0xB9,0x60,0x32,0x6A,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x03,0xC1,0x43,0x5F,0x48,0x8B,0xF8,0x48,0x8D,0x4F,0x10,0x48,0x8B,0x54,0x24,0x38,0x4C,0x8B,0xC6,0x49,0xC1,0xE0,0x03,0xE8,0x0B,0x0A,0xD8,0x5E,0x48,0x8B,0xF7,0x83,0x7E,0x08,0x40,0x41,0x0F,0x94,0xC1,0x45,0x0F,0xB6,0xC9,0xBA,0x91,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0x45,0x84,0xC9,0x75,0x34,0x49,0xB9,0xC8,0xD3,0x01,0x10,0x05,0x02,0x00,0x00,0x4D,0x8B,0x09,0x49,0x8B,0xC9,0x4C,0x89,0x4C,0x24,0x28,0x48,0x8D,0x44,0x24,0x30,0x44,0x88,0x00,0x89,0x50,0x04,0x4C,0x8B,0x4C,0x24,0x30,0x48,0x8B,0xD1,0x4C,0x8B,0x44,0x24,0x28,0x33,0xC9,0xE8,0x30,0x8A,0x93,0xFF,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x48,0x5E,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref BitMatrix<byte> gbm_and_8x8(in BitMatrix<byte> A, in BitMatrix<byte> B, ref BitMatrix<byte> C)
; location: [7FFDDBAE8C30h, 7FFDDBAE8C85h]
0000h sub rsp,18h                   ; SUB(Sub_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 ec 18
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0009h mov [rsp+8],rax               ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 08
000eh lea rax,[rsp+8]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 44 24 08
0013h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0017h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
001bh vmovdqu xmm0,xmmword ptr [rcx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 01
001fh vmovdqu xmmword ptr [rsp+8],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 08
0025h lea rax,[rsp+8]               ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 44 24 08
002ah mov rax,[rax]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RAX:br,DS:sr)]        encoding(3 bytes) = 48 8b 00
002dh vmovdqu xmm0,xmmword ptr [rdx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 02
0031h vmovdqu xmmword ptr [rsp+8],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 08
0037h lea rdx,[rsp+8]               ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 08
003ch mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
003fh mov rcx,[r8]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 08
0042h mov rax,[rax]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RAX:br,DS:sr)]        encoding(3 bytes) = 48 8b 00
0045h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0048h and rax,rdx                   ; AND(And_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 23 c2
004bh mov [rcx],rax                 ; MOV(Mov_rm64_r64) [mem(64u,RCX:br,DS:sr),RAX]        encoding(3 bytes) = 48 89 01
004eh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
0051h add rsp,18h                   ; ADD(Add_rm64_imm8) [RSP,18h:imm64]                   encoding(4 bytes) = 48 83 c4 18
0055h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gbm_and_8x8Bytes => new byte[86]{0x48,0x83,0xEC,0x18,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x44,0x24,0x08,0x48,0x8D,0x44,0x24,0x08,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xC5,0xFA,0x6F,0x01,0xC5,0xFA,0x7F,0x44,0x24,0x08,0x48,0x8D,0x44,0x24,0x08,0x48,0x8B,0x00,0xC5,0xFA,0x6F,0x02,0xC5,0xFA,0x7F,0x44,0x24,0x08,0x48,0x8D,0x54,0x24,0x08,0x48,0x8B,0x12,0x49,0x8B,0x08,0x48,0x8B,0x00,0x48,0x8B,0x12,0x48,0x23,0xC2,0x48,0x89,0x01,0x49,0x8B,0xC0,0x48,0x83,0xC4,0x18,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref BitMatrix<ushort> gbm_and_16x16(in BitMatrix<ushort> A, in BitMatrix<ushort> B, ref BitMatrix<ushort> C)
; location: [7FFDDBAE8CA0h, 7FFDDBAE8D25h]
0000h sub rsp,58h                   ; SUB(Sub_rm64_imm8) [RSP,58h:imm64]                   encoding(4 bytes) = 48 83 ec 58
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0009h mov [rsp+48h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 48
000eh lea rax,[rsp+48h]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 44 24 48
0013h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0017h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
001bh vmovdqu xmm0,xmmword ptr [rcx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 01
001fh vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
0025h lea rax,[rsp+48h]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 44 24 48
002ah mov rax,[rax]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RAX:br,DS:sr)]        encoding(3 bytes) = 48 8b 00
002dh vmovdqu xmm0,xmmword ptr [rdx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 02
0031h vmovdqu xmmword ptr [rsp+48h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 48
0037h lea rdx,[rsp+48h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 48
003ch mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
003fh mov rcx,[r8]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 08
0042h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0046h vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
004ch vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0050h vmovupd [rsp],ymm0            ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 5 bytes) = c5 fd 11 04 24
0055h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0059h vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
005fh vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0063h vmovupd [rsp],ymm0            ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 5 bytes) = c5 fd 11 04 24
0068h vmovupd ymm0,[rsp+20h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 20
006eh vmovupd ymm1,[rsp]            ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fd 10 0c 24
0073h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0077h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
007bh mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
007eh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0081h add rsp,58h                   ; ADD(Add_rm64_imm8) [RSP,58h:imm64]                   encoding(4 bytes) = 48 83 c4 58
0085h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gbm_and_16x16Bytes => new byte[134]{0x48,0x83,0xEC,0x58,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x44,0x24,0x48,0x48,0x8D,0x44,0x24,0x48,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xC5,0xFA,0x6F,0x01,0xC5,0xFA,0x7F,0x44,0x24,0x48,0x48,0x8D,0x44,0x24,0x48,0x48,0x8B,0x00,0xC5,0xFA,0x6F,0x02,0xC5,0xFA,0x7F,0x44,0x24,0x48,0x48,0x8D,0x54,0x24,0x48,0x48,0x8B,0x12,0x49,0x8B,0x08,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x04,0x24,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x04,0x24,0xC5,0xFD,0x10,0x44,0x24,0x20,0xC5,0xFD,0x10,0x0C,0x24,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x49,0x8B,0xC0,0xC5,0xF8,0x77,0x48,0x83,0xC4,0x58,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<ushort> gbm_and_16x16_alloc(in BitMatrix<ushort> A, in BitMatrix<ushort> B)
; location: [7FFDDBAE9160h, 7FFDDBAE922Dh]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,80h                   ; SUB(Sub_rm64_imm32) [RSP,80h:imm64]                  encoding(7 bytes) = 48 81 ec 80 00 00 00
000ah vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000dh xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000fh mov [rsp+70h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 70
0014h mov [rsp+60h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 60
0019h mov rbx,rcx                   ; MOV(Mov_r64_rm64) [RBX,RCX]                          encoding(3 bytes) = 48 8b d9
001ch mov rsi,rdx                   ; MOV(Mov_r64_rm64) [RSI,RDX]                          encoding(3 bytes) = 48 8b f2
001fh mov rdi,r8                    ; MOV(Mov_r64_rm64) [RDI,R8]                           encoding(3 bytes) = 49 8b f8
0022h lea rcx,[rsp+70h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 70
0027h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
002bh vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
002fh lea rcx,[rsp+60h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 60
0034h vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0038h vmovdqu xmmword ptr [rcx],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RCX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 01
003ch lea rcx,[rsp+70h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 70
0041h call 7FFDDBAE7A10h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFE8B0h:jmp64]        encoding(5 bytes) = e8 6a e8 ff ff
0046h vmovdqu xmm0,xmmword ptr [rsi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RSI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 06
004ah vmovdqu xmmword ptr [rsp+60h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 60
0050h lea rax,[rsp+60h]             ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 44 24 60
0055h mov rax,[rax]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RAX:br,DS:sr)]        encoding(3 bytes) = 48 8b 00
0058h vmovdqu xmm0,xmmword ptr [rdi]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDI:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 07
005ch vmovdqu xmmword ptr [rsp+60h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 6 bytes) = c5 fa 7f 44 24 60
0062h lea rdx,[rsp+60h]             ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 54 24 60
0067h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
006ah lea rcx,[rsp+70h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 70
006fh mov rcx,[rcx]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 09
0072h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0076h vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
007ch vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0080h vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
0086h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
008ah vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
0090h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0094h vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
009ah vmovupd ymm0,[rsp+40h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 40
00a0h vmovupd ymm1,[rsp+20h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 4c 24 20
00a6h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
00aah vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
00aeh mov rdi,rbx                   ; MOV(Mov_r64_rm64) [RDI,RBX]                          encoding(3 bytes) = 48 8b fb
00b1h lea rsi,[rsp+70h]             ; LEA(Lea_r64_m) [RSI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 74 24 70
00b6h call 7FFE3AF23690h            ; CALL(Call_rel32_64) [5F43A530h:jmp64]                encoding(5 bytes) = e8 75 a4 43 5f
00bbh movsq                         ; MOVSQ(Movsq_m64_m64) [mem(64u),mem(64u,DS:sr)]       encoding(2 bytes) = 48 a5
00bdh mov rax,rbx                   ; MOV(Mov_r64_rm64) [RAX,RBX]                          encoding(3 bytes) = 48 8b c3
00c0h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
00c3h add rsp,80h                   ; ADD(Add_rm64_imm32) [RSP,80h:imm64]                  encoding(7 bytes) = 48 81 c4 80 00 00 00
00cah pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
00cbh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00cch pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00cdh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gbm_and_16x16_allocBytes => new byte[206]{0x57,0x56,0x53,0x48,0x81,0xEC,0x80,0x00,0x00,0x00,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x44,0x24,0x70,0x48,0x89,0x44,0x24,0x60,0x48,0x8B,0xD9,0x48,0x8B,0xF2,0x49,0x8B,0xF8,0x48,0x8D,0x4C,0x24,0x70,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x8D,0x4C,0x24,0x60,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x01,0x48,0x8D,0x4C,0x24,0x70,0xE8,0x6A,0xE8,0xFF,0xFF,0xC5,0xFA,0x6F,0x06,0xC5,0xFA,0x7F,0x44,0x24,0x60,0x48,0x8D,0x44,0x24,0x60,0x48,0x8B,0x00,0xC5,0xFA,0x6F,0x07,0xC5,0xFA,0x7F,0x44,0x24,0x60,0x48,0x8D,0x54,0x24,0x60,0x48,0x8B,0x12,0x48,0x8D,0x4C,0x24,0x70,0x48,0x8B,0x09,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFD,0x10,0x44,0x24,0x40,0xC5,0xFD,0x10,0x4C,0x24,0x20,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x8B,0xFB,0x48,0x8D,0x74,0x24,0x70,0xE8,0x75,0xA4,0x43,0x5F,0x48,0xA5,0x48,0x8B,0xC3,0xC5,0xF8,0x77,0x48,0x81,0xC4,0x80,0x00,0x00,0x00,0x5B,0x5E,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref BitMatrix16 pbm_and_16x16(in BitMatrix16 A, in BitMatrix16 B, ref BitMatrix16 C)
; location: [7FFDDBAE9260h, 7FFDDBAE92DAh]
0000h sub rsp,78h                   ; SUB(Sub_rm64_imm8) [RSP,78h:imm64]                   encoding(4 bytes) = 48 83 ec 78
0004h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0007h mov rax,[rcx]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RCX:br,DS:sr)]        encoding(3 bytes) = 48 8b 01
000ah cmp dword ptr [rax+8],0       ; CMP(Cmp_rm32_imm8) [mem(32u,RAX:br,DS:sr),0h:imm32]  encoding(4 bytes) = 83 78 08 00
000eh jbe short 0075h               ; JBE(Jbe_rel8_64) [75h:jmp64]                         encoding(2 bytes) = 76 65
0010h add rax,10h                   ; ADD(Add_rm64_imm8) [RAX,10h:imm64]                   encoding(4 bytes) = 48 83 c0 10
0014h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0017h cmp dword ptr [rdx+8],0       ; CMP(Cmp_rm32_imm8) [mem(32u,RDX:br,DS:sr),0h:imm32]  encoding(4 bytes) = 83 7a 08 00
001bh jbe short 0075h               ; JBE(Jbe_rel8_64) [75h:jmp64]                         encoding(2 bytes) = 76 58
001dh add rdx,10h                   ; ADD(Add_rm64_imm8) [RDX,10h:imm64]                   encoding(4 bytes) = 48 83 c2 10
0021h mov rcx,[r8]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 08
0024h cmp dword ptr [rcx+8],0       ; CMP(Cmp_rm32_imm8) [mem(32u,RCX:br,DS:sr),0h:imm32]  encoding(4 bytes) = 83 79 08 00
0028h jbe short 0075h               ; JBE(Jbe_rel8_64) [75h:jmp64]                         encoding(2 bytes) = 76 4b
002ah add rcx,10h                   ; ADD(Add_rm64_imm8) [RCX,10h:imm64]                   encoding(4 bytes) = 48 83 c1 10
002eh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0032h vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
0038h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
003ch vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
0042h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0046h vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
004ch vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0050h vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
0056h vmovupd ymm0,[rsp+40h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 40
005ch vmovupd ymm1,[rsp+20h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 4c 24 20
0062h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0066h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
006ah mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
006dh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0070h add rsp,78h                   ; ADD(Add_rm64_imm8) [RSP,78h:imm64]                   encoding(4 bytes) = 48 83 c4 78
0074h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
0075h call 7FFE3B04EF00h            ; CALL(Call_rel32_64) [5F565CA0h:jmp64]                encoding(5 bytes) = e8 26 5c 56 5f
007ah int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> pbm_and_16x16Bytes => new byte[123]{0x48,0x83,0xEC,0x78,0xC5,0xF8,0x77,0x48,0x8B,0x01,0x83,0x78,0x08,0x00,0x76,0x65,0x48,0x83,0xC0,0x10,0x48,0x8B,0x12,0x83,0x7A,0x08,0x00,0x76,0x58,0x48,0x83,0xC2,0x10,0x49,0x8B,0x08,0x83,0x79,0x08,0x00,0x76,0x4B,0x48,0x83,0xC1,0x10,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFD,0x10,0x44,0x24,0x40,0xC5,0xFD,0x10,0x4C,0x24,0x20,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x49,0x8B,0xC0,0xC5,0xF8,0x77,0x48,0x83,0xC4,0x78,0xC3,0xE8,0x26,0x5C,0x56,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix16 pbm_and_16x16_alloc(in BitMatrix16 A, in BitMatrix16 B)
; location: [7FFDDBAE9710h, 7FFDDBAE97B7h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,88h                   ; SUB(Sub_rm64_imm32) [RSP,88h:imm64]                  encoding(7 bytes) = 48 81 ec 88 00 00 00
0009h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ch mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
000fh mov rdi,rdx                   ; MOV(Mov_r64_rm64) [RDI,RDX]                          encoding(3 bytes) = 48 8b fa
0012h mov byte ptr [rsp+78h],0      ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(5 bytes) = c6 44 24 78 00
0017h movsx rcx,byte ptr [rsp+78h]  ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSP:br,SS:sr)]      encoding(6 bytes) = 48 0f be 4c 24 78
001dh mov [rsp+80h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(7 bytes) = 88 8c 24 80 00 00 00
0024h movsx rcx,byte ptr [rsp+80h]  ; MOVSX(Movsx_r64_rm8) [RCX,mem(8i,RSP:br,SS:sr)]      encoding(9 bytes) = 48 0f be 8c 24 80 00 00 00
002dh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
002fh call 7FFDDBAE73E8h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFDCD8h:jmp64]        encoding(5 bytes) = e8 a4 dc ff ff
0034h mov rdx,[rsi]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RSI:br,DS:sr)]        encoding(3 bytes) = 48 8b 16
0037h cmp dword ptr [rdx+8],0       ; CMP(Cmp_rm32_imm8) [mem(32u,RDX:br,DS:sr),0h:imm32]  encoding(4 bytes) = 83 7a 08 00
003bh jbe short 00a2h               ; JBE(Jbe_rel8_64) [A2h:jmp64]                         encoding(2 bytes) = 76 65
003dh add rdx,10h                   ; ADD(Add_rm64_imm8) [RDX,10h:imm64]                   encoding(4 bytes) = 48 83 c2 10
0041h mov rcx,[rdi]                 ; MOV(Mov_r64_rm64) [RCX,mem(64u,RDI:br,DS:sr)]        encoding(3 bytes) = 48 8b 0f
0044h cmp dword ptr [rcx+8],0       ; CMP(Cmp_rm32_imm8) [mem(32u,RCX:br,DS:sr),0h:imm32]  encoding(4 bytes) = 83 79 08 00
0048h jbe short 00a2h               ; JBE(Jbe_rel8_64) [A2h:jmp64]                         encoding(2 bytes) = 76 58
004ah add rcx,10h                   ; ADD(Add_rm64_imm8) [RCX,10h:imm64]                   encoding(4 bytes) = 48 83 c1 10
004eh cmp dword ptr [rax+8],0       ; CMP(Cmp_rm32_imm8) [mem(32u,RAX:br,DS:sr),0h:imm32]  encoding(4 bytes) = 83 78 08 00
0052h jbe short 00a2h               ; JBE(Jbe_rel8_64) [A2h:jmp64]                         encoding(2 bytes) = 76 4e
0054h lea r8,[rax+10h]              ; LEA(Lea_r64_m) [R8,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4c 8d 40 10
0058h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
005ch vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
0062h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0066h vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
006ch vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0070h vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
0076h vlddqu ymm0,ymmword ptr [rcx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 01
007ah vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
0080h vmovupd ymm0,[rsp+40h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 40
0086h vmovupd ymm1,[rsp+20h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 4c 24 20
008ch vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0090h vmovdqu ymmword ptr [r8],ymm0 ; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R8:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 00
0095h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0098h add rsp,88h                   ; ADD(Add_rm64_imm32) [RSP,88h:imm64]                  encoding(7 bytes) = 48 81 c4 88 00 00 00
009fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
00a0h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
00a1h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
00a2h call 7FFE3B04EF00h            ; CALL(Call_rel32_64) [5F5657F0h:jmp64]                encoding(5 bytes) = e8 49 57 56 5f
00a7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> pbm_and_16x16_allocBytes => new byte[168]{0x57,0x56,0x48,0x81,0xEC,0x88,0x00,0x00,0x00,0xC5,0xF8,0x77,0x48,0x8B,0xF1,0x48,0x8B,0xFA,0xC6,0x44,0x24,0x78,0x00,0x48,0x0F,0xBE,0x4C,0x24,0x78,0x88,0x8C,0x24,0x80,0x00,0x00,0x00,0x48,0x0F,0xBE,0x8C,0x24,0x80,0x00,0x00,0x00,0x33,0xD2,0xE8,0xA4,0xDC,0xFF,0xFF,0x48,0x8B,0x16,0x83,0x7A,0x08,0x00,0x76,0x65,0x48,0x83,0xC2,0x10,0x48,0x8B,0x0F,0x83,0x79,0x08,0x00,0x76,0x58,0x48,0x83,0xC1,0x10,0x83,0x78,0x08,0x00,0x76,0x4E,0x4C,0x8D,0x40,0x10,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFF,0xF0,0x01,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFD,0x10,0x44,0x24,0x40,0xC5,0xFD,0x10,0x4C,0x24,0x20,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x00,0xC5,0xF8,0x77,0x48,0x81,0xC4,0x88,0x00,0x00,0x00,0x5E,0x5F,0xC3,0xE8,0x49,0x57,0x56,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref BitMatrix<uint> gbm_and_32x32(in BitMatrix<uint> A, in BitMatrix<uint> B, ref BitMatrix<uint> C)
; location: [7FFDDBAE97E0h, 7FFDDBAE9979h]
0000h sub rsp,118h                  ; SUB(Sub_rm64_imm32) [RSP,118h:imm64]                 encoding(7 bytes) = 48 81 ec 18 01 00 00
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000ch mov [rsp+108h],rax            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(8 bytes) = 48 89 84 24 08 01 00 00
0014h lea rax,[rsp+108h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 08 01 00 00
001ch vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0020h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
0024h vmovdqu xmm0,xmmword ptr [rcx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 01
0028h vmovdqu xmmword ptr [rsp+108h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 08 01 00 00
0031h lea rax,[rsp+108h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 08 01 00 00
0039h mov rax,[rax]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RAX:br,DS:sr)]        encoding(3 bytes) = 48 8b 00
003ch vmovdqu xmm0,xmmword ptr [rdx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 02
0040h vmovdqu xmmword ptr [rsp+108h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 08 01 00 00
0049h lea rdx,[rsp+108h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 08 01 00 00
0051h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0054h mov rcx,[r8]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 08
0057h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
005bh vmovupd [rsp+0E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 00 00 00
0064h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0068h vmovupd [rsp+0C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 00 00 00
0071h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0075h vmovupd [rsp+0E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 00 00 00
007eh vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0082h vmovupd [rsp+0C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 00 00 00
008bh vmovupd ymm0,[rsp+0E0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 e0 00 00 00
0094h vmovupd ymm1,[rsp+0C0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 c0 00 00 00
009dh vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
00a1h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
00a5h add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
00a9h add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
00adh add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
00b1h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
00b5h vmovupd [rsp+0A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 00 00 00
00beh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
00c2h vmovupd [rsp+80h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 00 00 00
00cbh vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
00cfh vmovupd [rsp+0A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 00 00 00
00d8h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
00dch vmovupd [rsp+80h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 00 00 00
00e5h vmovupd ymm0,[rsp+0A0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 a0 00 00 00
00eeh vmovupd ymm1,[rsp+80h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 80 00 00 00
00f7h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
00fbh vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
00ffh add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
0103h add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
0107h add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
010bh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
010fh vmovupd [rsp+60h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 60
0115h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0119h vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
011fh vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0123h vmovupd [rsp+60h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 60
0129h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
012dh vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
0133h vmovupd ymm0,[rsp+60h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 60
0139h vmovupd ymm1,[rsp+40h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 4c 24 40
013fh vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0143h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
0147h add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
014bh add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
014fh add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
0153h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0157h vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
015dh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0161h vmovupd [rsp],ymm0            ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 5 bytes) = c5 fd 11 04 24
0166h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
016ah vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
0170h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0174h vmovupd [rsp],ymm0            ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 5 bytes) = c5 fd 11 04 24
0179h vmovupd ymm0,[rsp+20h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 20
017fh vmovupd ymm1,[rsp]            ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fd 10 0c 24
0184h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0188h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
018ch mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
018fh vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
0192h add rsp,118h                  ; ADD(Add_rm64_imm32) [RSP,118h:imm64]                 encoding(7 bytes) = 48 81 c4 18 01 00 00
0199h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gbm_and_32x32Bytes => new byte[410]{0x48,0x81,0xEC,0x18,0x01,0x00,0x00,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x84,0x24,0x08,0x01,0x00,0x00,0x48,0x8D,0x84,0x24,0x08,0x01,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xC5,0xFA,0x6F,0x01,0xC5,0xFA,0x7F,0x84,0x24,0x08,0x01,0x00,0x00,0x48,0x8D,0x84,0x24,0x08,0x01,0x00,0x00,0x48,0x8B,0x00,0xC5,0xFA,0x6F,0x02,0xC5,0xFA,0x7F,0x84,0x24,0x08,0x01,0x00,0x00,0x48,0x8D,0x94,0x24,0x08,0x01,0x00,0x00,0x48,0x8B,0x12,0x49,0x8B,0x08,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x00,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0xC0,0x00,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x00,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x80,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x80,0x00,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xA0,0x00,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x80,0x00,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x60,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x44,0x24,0x60,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFD,0x10,0x44,0x24,0x60,0xC5,0xFD,0x10,0x4C,0x24,0x40,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x04,0x24,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x04,0x24,0xC5,0xFD,0x10,0x44,0x24,0x20,0xC5,0xFD,0x10,0x0C,0x24,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x49,0x8B,0xC0,0xC5,0xF8,0x77,0x48,0x81,0xC4,0x18,0x01,0x00,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: ref BitMatrix<ulong> gbm_and_64x64(in BitMatrix<ulong> A, in BitMatrix<ulong> B, ref BitMatrix<ulong> C)
; location: [7FFDDBAE99D0h, 7FFDDBAE9FBEh]
0000h sub rsp,418h                  ; SUB(Sub_rm64_imm32) [RSP,418h:imm64]                 encoding(7 bytes) = 48 81 ec 18 04 00 00
0007h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
000ah xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
000ch mov [rsp+408h],rax            ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(8 bytes) = 48 89 84 24 08 04 00 00
0014h lea rax,[rsp+408h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 08 04 00 00
001ch vxorps xmm0,xmm0,xmm0         ; VXORPS(VEX_Vxorps_xmm_xmm_xmmm128) [XMM0,XMM0,XMM0]  encoding(VEX, 4 bytes) = c5 f8 57 c0
0020h vmovdqu xmmword ptr [rax],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RAX:br,DS:sr),XMM0] encoding(VEX, 4 bytes) = c5 fa 7f 00
0024h vmovdqu xmm0,xmmword ptr [rcx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RCX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 01
0028h vmovdqu xmmword ptr [rsp+408h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 08 04 00 00
0031h lea rax,[rsp+408h]            ; LEA(Lea_r64_m) [RAX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 84 24 08 04 00 00
0039h mov rax,[rax]                 ; MOV(Mov_r64_rm64) [RAX,mem(64u,RAX:br,DS:sr)]        encoding(3 bytes) = 48 8b 00
003ch vmovdqu xmm0,xmmword ptr [rdx]; VMOVDQU(VEX_Vmovdqu_xmm_xmmm128) [XMM0,mem(Packed128_Int32,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 fa 6f 02
0040h vmovdqu xmmword ptr [rsp+408h],xmm0; VMOVDQU(VEX_Vmovdqu_xmmm128_xmm) [mem(Packed128_Int32,RSP:br,SS:sr),XMM0] encoding(VEX, 9 bytes) = c5 fa 7f 84 24 08 04 00 00
0049h lea rdx,[rsp+408h]            ; LEA(Lea_r64_m) [RDX,mem(Unknown,RSP:br,SS:sr)]       encoding(8 bytes) = 48 8d 94 24 08 04 00 00
0051h mov rdx,[rdx]                 ; MOV(Mov_r64_rm64) [RDX,mem(64u,RDX:br,DS:sr)]        encoding(3 bytes) = 48 8b 12
0054h mov rcx,[r8]                  ; MOV(Mov_r64_rm64) [RCX,mem(64u,R8:br,DS:sr)]         encoding(3 bytes) = 49 8b 08
0057h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
005bh vmovupd [rsp+3E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 03 00 00
0064h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0068h vmovupd [rsp+3C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 03 00 00
0071h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0075h vmovupd [rsp+3E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 03 00 00
007eh vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0082h vmovupd [rsp+3C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 03 00 00
008bh vmovupd ymm0,[rsp+3E0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 e0 03 00 00
0094h vmovupd ymm1,[rsp+3C0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 c0 03 00 00
009dh vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
00a1h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
00a5h lea r9,[rax+20h]              ; LEA(Lea_r64_m) [R9,mem(Unknown,RAX:br,DS:sr)]        encoding(4 bytes) = 4c 8d 48 20
00a9h lea r10,[rdx+20h]             ; LEA(Lea_r64_m) [R10,mem(Unknown,RDX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 52 20
00adh lea r11,[rcx+20h]             ; LEA(Lea_r64_m) [R11,mem(Unknown,RCX:br,DS:sr)]       encoding(4 bytes) = 4c 8d 59 20
00b1h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
00b5h vmovupd [rsp+3A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 03 00 00
00beh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
00c2h vmovupd [rsp+380h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 03 00 00
00cbh vlddqu ymm0,ymmword ptr [r9]  ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R9:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 01
00d0h vmovupd [rsp+3A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 03 00 00
00d9h vlddqu ymm0,ymmword ptr [r10] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R10:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 02
00deh vmovupd [rsp+380h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 03 00 00
00e7h vmovupd ymm0,[rsp+3A0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 a0 03 00 00
00f0h vmovupd ymm1,[rsp+380h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 80 03 00 00
00f9h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
00fdh vmovdqu ymmword ptr [r11],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
0102h add r9,20h                    ; ADD(Add_rm64_imm8) [R9,20h:imm64]                    encoding(4 bytes) = 49 83 c1 20
0106h add r10,20h                   ; ADD(Add_rm64_imm8) [R10,20h:imm64]                   encoding(4 bytes) = 49 83 c2 20
010ah add r11,20h                   ; ADD(Add_rm64_imm8) [R11,20h:imm64]                   encoding(4 bytes) = 49 83 c3 20
010eh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0112h vmovupd [rsp+360h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 60 03 00 00
011bh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
011fh vmovupd [rsp+340h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 40 03 00 00
0128h vlddqu ymm0,ymmword ptr [r9]  ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R9:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 01
012dh vmovupd [rsp+360h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 60 03 00 00
0136h vlddqu ymm0,ymmword ptr [r10] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R10:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 02
013bh vmovupd [rsp+340h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 40 03 00 00
0144h vmovupd ymm0,[rsp+360h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 60 03 00 00
014dh vmovupd ymm1,[rsp+340h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 40 03 00 00
0156h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
015ah vmovdqu ymmword ptr [r11],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
015fh add r9,20h                    ; ADD(Add_rm64_imm8) [R9,20h:imm64]                    encoding(4 bytes) = 49 83 c1 20
0163h add r10,20h                   ; ADD(Add_rm64_imm8) [R10,20h:imm64]                   encoding(4 bytes) = 49 83 c2 20
0167h add r11,20h                   ; ADD(Add_rm64_imm8) [R11,20h:imm64]                   encoding(4 bytes) = 49 83 c3 20
016bh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
016fh vmovupd [rsp+320h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 20 03 00 00
0178h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
017ch vmovupd [rsp+300h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 00 03 00 00
0185h vlddqu ymm0,ymmword ptr [r9]  ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R9:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 01
018ah vmovupd [rsp+320h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 20 03 00 00
0193h vlddqu ymm0,ymmword ptr [r10] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R10:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 02
0198h vmovupd [rsp+300h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 00 03 00 00
01a1h vmovupd ymm0,[rsp+320h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 20 03 00 00
01aah vmovupd ymm1,[rsp+300h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 00 03 00 00
01b3h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
01b7h vmovdqu ymmword ptr [r11],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
01bch add r9,20h                    ; ADD(Add_rm64_imm8) [R9,20h:imm64]                    encoding(4 bytes) = 49 83 c1 20
01c0h add r10,20h                   ; ADD(Add_rm64_imm8) [R10,20h:imm64]                   encoding(4 bytes) = 49 83 c2 20
01c4h add r11,20h                   ; ADD(Add_rm64_imm8) [R11,20h:imm64]                   encoding(4 bytes) = 49 83 c3 20
01c8h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
01cch vmovupd [rsp+2E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 02 00 00
01d5h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
01d9h vmovupd [rsp+2C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 02 00 00
01e2h vlddqu ymm0,ymmword ptr [r9]  ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R9:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 01
01e7h vmovupd [rsp+2E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 02 00 00
01f0h vlddqu ymm0,ymmword ptr [r10] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R10:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 02
01f5h vmovupd [rsp+2C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 02 00 00
01feh vmovupd ymm0,[rsp+2E0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 e0 02 00 00
0207h vmovupd ymm1,[rsp+2C0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 c0 02 00 00
0210h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0214h vmovdqu ymmword ptr [r11],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
0219h add r9,20h                    ; ADD(Add_rm64_imm8) [R9,20h:imm64]                    encoding(4 bytes) = 49 83 c1 20
021dh add r10,20h                   ; ADD(Add_rm64_imm8) [R10,20h:imm64]                   encoding(4 bytes) = 49 83 c2 20
0221h add r11,20h                   ; ADD(Add_rm64_imm8) [R11,20h:imm64]                   encoding(4 bytes) = 49 83 c3 20
0225h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0229h vmovupd [rsp+2A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 02 00 00
0232h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0236h vmovupd [rsp+280h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 02 00 00
023fh vlddqu ymm0,ymmword ptr [r9]  ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R9:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 01
0244h vmovupd [rsp+2A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 02 00 00
024dh vlddqu ymm0,ymmword ptr [r10] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R10:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 02
0252h vmovupd [rsp+280h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 02 00 00
025bh vmovupd ymm0,[rsp+2A0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 a0 02 00 00
0264h vmovupd ymm1,[rsp+280h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 80 02 00 00
026dh vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0271h vmovdqu ymmword ptr [r11],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
0276h add r9,20h                    ; ADD(Add_rm64_imm8) [R9,20h:imm64]                    encoding(4 bytes) = 49 83 c1 20
027ah add r10,20h                   ; ADD(Add_rm64_imm8) [R10,20h:imm64]                   encoding(4 bytes) = 49 83 c2 20
027eh add r11,20h                   ; ADD(Add_rm64_imm8) [R11,20h:imm64]                   encoding(4 bytes) = 49 83 c3 20
0282h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0286h vmovupd [rsp+260h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 60 02 00 00
028fh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0293h vmovupd [rsp+240h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 40 02 00 00
029ch vlddqu ymm0,ymmword ptr [r9]  ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R9:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 01
02a1h vmovupd [rsp+260h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 60 02 00 00
02aah vlddqu ymm0,ymmword ptr [r10] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R10:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 02
02afh vmovupd [rsp+240h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 40 02 00 00
02b8h vmovupd ymm0,[rsp+260h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 60 02 00 00
02c1h vmovupd ymm1,[rsp+240h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 40 02 00 00
02cah vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
02ceh vmovdqu ymmword ptr [r11],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
02d3h add r9,20h                    ; ADD(Add_rm64_imm8) [R9,20h:imm64]                    encoding(4 bytes) = 49 83 c1 20
02d7h add r10,20h                   ; ADD(Add_rm64_imm8) [R10,20h:imm64]                   encoding(4 bytes) = 49 83 c2 20
02dbh add r11,20h                   ; ADD(Add_rm64_imm8) [R11,20h:imm64]                   encoding(4 bytes) = 49 83 c3 20
02dfh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
02e3h vmovupd [rsp+220h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 20 02 00 00
02ech vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
02f0h vmovupd [rsp+200h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 00 02 00 00
02f9h vlddqu ymm0,ymmword ptr [r9]  ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R9:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 01
02feh vmovupd [rsp+220h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 20 02 00 00
0307h vlddqu ymm0,ymmword ptr [r10] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,R10:br,DS:sr)] encoding(VEX, 5 bytes) = c4 c1 7f f0 02
030ch vmovupd [rsp+200h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 00 02 00 00
0315h vmovupd ymm0,[rsp+220h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 20 02 00 00
031eh vmovupd ymm1,[rsp+200h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 00 02 00 00
0327h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
032bh vmovdqu ymmword ptr [r11],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,R11:br,DS:sr),YMM0] encoding(VEX, 5 bytes) = c4 c1 7e 7f 03
0330h add rax,100h                  ; ADD(Add_RAX_imm32) [RAX,100h:imm64]                  encoding(6 bytes) = 48 05 00 01 00 00
0336h add rdx,100h                  ; ADD(Add_rm64_imm32) [RDX,100h:imm64]                 encoding(7 bytes) = 48 81 c2 00 01 00 00
033dh add rcx,100h                  ; ADD(Add_rm64_imm32) [RCX,100h:imm64]                 encoding(7 bytes) = 48 81 c1 00 01 00 00
0344h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0348h vmovupd [rsp+1E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 01 00 00
0351h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0355h vmovupd [rsp+1C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 01 00 00
035eh vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0362h vmovupd [rsp+1E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 01 00 00
036bh vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
036fh vmovupd [rsp+1C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 01 00 00
0378h vmovupd ymm0,[rsp+1E0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 e0 01 00 00
0381h vmovupd ymm1,[rsp+1C0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 c0 01 00 00
038ah vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
038eh vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
0392h add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
0396h add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
039ah add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
039eh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
03a2h vmovupd [rsp+1A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 01 00 00
03abh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
03afh vmovupd [rsp+180h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 01 00 00
03b8h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
03bch vmovupd [rsp+1A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 01 00 00
03c5h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
03c9h vmovupd [rsp+180h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 01 00 00
03d2h vmovupd ymm0,[rsp+1A0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 a0 01 00 00
03dbh vmovupd ymm1,[rsp+180h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 80 01 00 00
03e4h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
03e8h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
03ech add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
03f0h add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
03f4h add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
03f8h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
03fch vmovupd [rsp+160h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 60 01 00 00
0405h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0409h vmovupd [rsp+140h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 40 01 00 00
0412h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0416h vmovupd [rsp+160h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 60 01 00 00
041fh vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0423h vmovupd [rsp+140h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 40 01 00 00
042ch vmovupd ymm0,[rsp+160h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 60 01 00 00
0435h vmovupd ymm1,[rsp+140h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 40 01 00 00
043eh vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0442h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
0446h add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
044ah add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
044eh add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
0452h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0456h vmovupd [rsp+120h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 20 01 00 00
045fh vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0463h vmovupd [rsp+100h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 00 01 00 00
046ch vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0470h vmovupd [rsp+120h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 20 01 00 00
0479h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
047dh vmovupd [rsp+100h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 00 01 00 00
0486h vmovupd ymm0,[rsp+120h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 20 01 00 00
048fh vmovupd ymm1,[rsp+100h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 00 01 00 00
0498h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
049ch vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
04a0h add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
04a4h add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
04a8h add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
04ach vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
04b0h vmovupd [rsp+0E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 00 00 00
04b9h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
04bdh vmovupd [rsp+0C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 00 00 00
04c6h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
04cah vmovupd [rsp+0E0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 e0 00 00 00
04d3h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
04d7h vmovupd [rsp+0C0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 c0 00 00 00
04e0h vmovupd ymm0,[rsp+0E0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 e0 00 00 00
04e9h vmovupd ymm1,[rsp+0C0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 c0 00 00 00
04f2h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
04f6h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
04fah add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
04feh add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
0502h add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
0506h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
050ah vmovupd [rsp+0A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 00 00 00
0513h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0517h vmovupd [rsp+80h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 00 00 00
0520h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0524h vmovupd [rsp+0A0h],ymm0       ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 a0 00 00 00
052dh vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0531h vmovupd [rsp+80h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 9 bytes) = c5 fd 11 84 24 80 00 00 00
053ah vmovupd ymm0,[rsp+0A0h]       ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 84 24 a0 00 00 00
0543h vmovupd ymm1,[rsp+80h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 9 bytes) = c5 fd 10 8c 24 80 00 00 00
054ch vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0550h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
0554h add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
0558h add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
055ch add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
0560h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
0564h vmovupd [rsp+60h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 60
056ah vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
056eh vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
0574h vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
0578h vmovupd [rsp+60h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 60
057eh vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
0582h vmovupd [rsp+40h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 40
0588h vmovupd ymm0,[rsp+60h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 60
058eh vmovupd ymm1,[rsp+40h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 4c 24 40
0594h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
0598h vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
059ch add rax,20h                   ; ADD(Add_rm64_imm8) [RAX,20h:imm64]                   encoding(4 bytes) = 48 83 c0 20
05a0h add rdx,20h                   ; ADD(Add_rm64_imm8) [RDX,20h:imm64]                   encoding(4 bytes) = 48 83 c2 20
05a4h add rcx,20h                   ; ADD(Add_rm64_imm8) [RCX,20h:imm64]                   encoding(4 bytes) = 48 83 c1 20
05a8h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
05ach vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
05b2h vxorps ymm0,ymm0,ymm0         ; VXORPS(VEX_Vxorps_ymm_ymm_ymmm256) [YMM0,YMM0,YMM0]  encoding(VEX, 4 bytes) = c5 fc 57 c0
05b6h vmovupd [rsp],ymm0            ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 5 bytes) = c5 fd 11 04 24
05bbh vlddqu ymm0,ymmword ptr [rax] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RAX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 00
05bfh vmovupd [rsp+20h],ymm0        ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 6 bytes) = c5 fd 11 44 24 20
05c5h vlddqu ymm0,ymmword ptr [rdx] ; VLDDQU(VEX_Vlddqu_ymm_m256) [YMM0,mem(UInt256,RDX:br,DS:sr)] encoding(VEX, 4 bytes) = c5 ff f0 02
05c9h vmovupd [rsp],ymm0            ; VMOVUPD(VEX_Vmovupd_ymmm256_ymm) [mem(Packed256_Float64,RSP:br,SS:sr),YMM0] encoding(VEX, 5 bytes) = c5 fd 11 04 24
05ceh vmovupd ymm0,[rsp+20h]        ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM0,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 6 bytes) = c5 fd 10 44 24 20
05d4h vmovupd ymm1,[rsp]            ; VMOVUPD(VEX_Vmovupd_ymm_ymmm256) [YMM1,mem(Packed256_Float64,RSP:br,SS:sr)] encoding(VEX, 5 bytes) = c5 fd 10 0c 24
05d9h vpand ymm0,ymm0,ymm1          ; VPAND(VEX_Vpand_ymm_ymm_ymmm256) [YMM0,YMM0,YMM1]    encoding(VEX, 4 bytes) = c5 fd db c1
05ddh vmovdqu ymmword ptr [rcx],ymm0; VMOVDQU(VEX_Vmovdqu_ymmm256_ymm) [mem(Packed256_Int32,RCX:br,DS:sr),YMM0] encoding(VEX, 4 bytes) = c5 fe 7f 01
05e1h mov rax,r8                    ; MOV(Mov_r64_rm64) [RAX,R8]                           encoding(3 bytes) = 49 8b c0
05e4h vzeroupper                    ; VZEROUPPER(VEX_Vzeroupper)                           encoding(VEX, 3 bytes) = c5 f8 77
05e7h add rsp,418h                  ; ADD(Add_rm64_imm32) [RSP,418h:imm64]                 encoding(7 bytes) = 48 81 c4 18 04 00 00
05eeh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> gbm_and_64x64Bytes => new byte[1519]{0x48,0x81,0xEC,0x18,0x04,0x00,0x00,0xC5,0xF8,0x77,0x33,0xC0,0x48,0x89,0x84,0x24,0x08,0x04,0x00,0x00,0x48,0x8D,0x84,0x24,0x08,0x04,0x00,0x00,0xC5,0xF8,0x57,0xC0,0xC5,0xFA,0x7F,0x00,0xC5,0xFA,0x6F,0x01,0xC5,0xFA,0x7F,0x84,0x24,0x08,0x04,0x00,0x00,0x48,0x8D,0x84,0x24,0x08,0x04,0x00,0x00,0x48,0x8B,0x00,0xC5,0xFA,0x6F,0x02,0xC5,0xFA,0x7F,0x84,0x24,0x08,0x04,0x00,0x00,0x48,0x8D,0x94,0x24,0x08,0x04,0x00,0x00,0x48,0x8B,0x12,0x49,0x8B,0x08,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x03,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x03,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x03,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x03,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xE0,0x03,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0xC0,0x03,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x4C,0x8D,0x48,0x20,0x4C,0x8D,0x52,0x20,0x4C,0x8D,0x59,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x03,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x80,0x03,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x01,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x03,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x80,0x03,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xA0,0x03,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x80,0x03,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x03,0x49,0x83,0xC1,0x20,0x49,0x83,0xC2,0x20,0x49,0x83,0xC3,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x60,0x03,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x40,0x03,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x01,0xC5,0xFD,0x11,0x84,0x24,0x60,0x03,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x40,0x03,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0x60,0x03,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x40,0x03,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x03,0x49,0x83,0xC1,0x20,0x49,0x83,0xC2,0x20,0x49,0x83,0xC3,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x20,0x03,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x00,0x03,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x01,0xC5,0xFD,0x11,0x84,0x24,0x20,0x03,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x00,0x03,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0x20,0x03,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x00,0x03,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x03,0x49,0x83,0xC1,0x20,0x49,0x83,0xC2,0x20,0x49,0x83,0xC3,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x02,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x01,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x02,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xE0,0x02,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0xC0,0x02,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x03,0x49,0x83,0xC1,0x20,0x49,0x83,0xC2,0x20,0x49,0x83,0xC3,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x02,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x80,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x01,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x80,0x02,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xA0,0x02,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x80,0x02,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x03,0x49,0x83,0xC1,0x20,0x49,0x83,0xC2,0x20,0x49,0x83,0xC3,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x60,0x02,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x40,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x01,0xC5,0xFD,0x11,0x84,0x24,0x60,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x40,0x02,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0x60,0x02,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x40,0x02,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x03,0x49,0x83,0xC1,0x20,0x49,0x83,0xC2,0x20,0x49,0x83,0xC3,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x20,0x02,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x00,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x01,0xC5,0xFD,0x11,0x84,0x24,0x20,0x02,0x00,0x00,0xC4,0xC1,0x7F,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x00,0x02,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0x20,0x02,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x00,0x02,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC4,0xC1,0x7E,0x7F,0x03,0x48,0x05,0x00,0x01,0x00,0x00,0x48,0x81,0xC2,0x00,0x01,0x00,0x00,0x48,0x81,0xC1,0x00,0x01,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x01,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x01,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xE0,0x01,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0xC0,0x01,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x01,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x80,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x80,0x01,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xA0,0x01,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x80,0x01,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x60,0x01,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x40,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0x60,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x40,0x01,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0x60,0x01,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x40,0x01,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x20,0x01,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x00,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0x20,0x01,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x00,0x01,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0x20,0x01,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x00,0x01,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0xC0,0x00,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xE0,0x00,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0xC0,0x00,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x00,0x00,0x00,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x84,0x24,0x80,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x84,0x24,0xA0,0x00,0x00,0x00,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x84,0x24,0x80,0x00,0x00,0x00,0xC5,0xFD,0x10,0x84,0x24,0xA0,0x00,0x00,0x00,0xC5,0xFD,0x10,0x8C,0x24,0x80,0x00,0x00,0x00,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x60,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x44,0x24,0x60,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x44,0x24,0x40,0xC5,0xFD,0x10,0x44,0x24,0x60,0xC5,0xFD,0x10,0x4C,0x24,0x40,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x48,0x83,0xC0,0x20,0x48,0x83,0xC2,0x20,0x48,0x83,0xC1,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFC,0x57,0xC0,0xC5,0xFD,0x11,0x04,0x24,0xC5,0xFF,0xF0,0x00,0xC5,0xFD,0x11,0x44,0x24,0x20,0xC5,0xFF,0xF0,0x02,0xC5,0xFD,0x11,0x04,0x24,0xC5,0xFD,0x10,0x44,0x24,0x20,0xC5,0xFD,0x10,0x0C,0x24,0xC5,0xFD,0xDB,0xC1,0xC5,0xFE,0x7F,0x01,0x49,0x8B,0xC0,0xC5,0xF8,0x77,0x48,0x81,0xC4,0x18,0x04,0x00,0x00,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
