; 2019-10-15 01:38:29:616
; function: bool and(bool a, bool b)
; location: [7FFDDBEC4460h, 7FFDDBEC4470h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool or(bool a, bool b)
; location: [7FFDDBEC4490h, 7FFDDBEC44A0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> orBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool xor(bool a, bool b)
; location: [7FFDDBEC44C0h, 7FFDDBEC44D0h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xorBytes => new byte[17]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool xor1(bool a)
; location: [7FFDDBEC44F0h, 7FFDDBEC44FDh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xor1Bytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool not(bool a)
; location: [7FFDDBEC4510h, 7FFDDBEC451Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> notBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nand(bool a, bool b)
; location: [7FFDDBEC4530h, 7FFDDBEC4543h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> nandBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool nor(bool a, bool b)
; location: [7FFDDBEC4560h, 7FFDDBEC4573h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> norBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool xnor(bool a, bool b)
; location: [7FFDDBEC4590h, 7FFDDBEC45A3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh cmp eax,edx                   ; CMP(Cmp_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 3b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> xnorBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x3B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool andnot(bool a, bool b)
; location: [7FFDDBEC45C0h, 7FFDDBEC45D2h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000ah sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> andnotBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x84,0xD2,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool select(bool a, bool b, bool c)
; location: [7FFDDBEC45F0h, 7FFDDBEC4601h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h jne short 000eh               ; JNE(Jne_rel8_64) [Eh:jmp64]                          encoding(2 bytes) = 75 05
0009h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
000eh movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0011h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> selectBytes => new byte[18]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x75,0x05,0x41,0x0F,0xB6,0xC0,0xC3,0x0F,0xB6,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f01(bool a, bool b, bool c)
; location: [7FFDDBEC4620h, 7FFDDBEC463Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0014h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f01Bytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f02(bool a, bool b, bool c)
; location: [7FFDDBEC4650h, 7FFDDBEC4669h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0017h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f02Bytes => new byte[26]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f03(bool a, bool b, bool c)
; location: [7FFDDBEC4680h, 7FFDDBEC4693h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
000bh or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000dh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0010h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f03Bytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f04(bool a, bool b, bool c)
; location: [7FFDDBEC46B0h, 7FFDDBEC46C9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch or eax,ecx                    ; OR(Or_r32_rm32) [EAX,ECX]                            encoding(2 bytes) = 0b c1
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0017h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f04Bytes => new byte[26]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x0B,0xC1,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f05(bool a, bool b, bool c)
; location: [7FFDDBEC46E0h, 7FFDDBEC46F4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0009h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f05Bytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x41,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f06(bool a, bool b, bool c)
; location: [7FFDDBEC4710h, 7FFDDBEC4731h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0014h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0016h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f06Bytes => new byte[34]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x41,0x0F,0xB6,0xC8,0x33,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f07(bool a, bool b, bool c)
; location: [7FFDDBEC4750h, 7FFDDBEC476Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0014h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f07Bytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f08(bool a, bool b, bool c)
; location: [7FFDDBEC4780h, 7FFDDBEC4798h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0012h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0016h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f08Bytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x23,0xC2,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f09(bool a, bool b, bool c)
; location: [7FFDDBEC47B0h, 7FFDDBEC47CCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0014h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f09Bytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f0a(bool a, bool b, bool c)
; location: [7FFDDBEC47E0h, 7FFDDBEC47F3h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0009h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
000bh sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
000eh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0011h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0aBytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x41,0x0F,0xB6,0xC0,0x84,0xC9,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f0b(bool a, bool b, bool c)
; location: [7FFDDBEC4810h, 7FFDDBEC4836h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000fh sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
0012h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0015h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0019h or edx,ecx                    ; OR(Or_r32_rm32) [EDX,ECX]                            encoding(2 bytes) = 0b d1
001bh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0023h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0026h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0bBytes => new byte[39]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x84,0xD2,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x41,0x0F,0xB6,0xC8,0x0B,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f0c(bool a, bool b, bool c)
; location: [7FFDDBEC4850h, 7FFDDBEC4862h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
000ah sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0012h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0cBytes => new byte[19]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x84,0xC9,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f0d(bool a, bool b, bool c)
; location: [7FFDDBEC4880h, 7FFDDBEC48A6h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0013h sete cl                       ; SETE(Sete_rm8) [CL]                                  encoding(3 bytes) = 0f 94 c1
0016h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0019h or edx,ecx                    ; OR(Or_r32_rm32) [EDX,ECX]                            encoding(2 bytes) = 0b d1
001bh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0023h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0026h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0dBytes => new byte[39]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x45,0x84,0xC0,0x0F,0x94,0xC1,0x0F,0xB6,0xC9,0x0B,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f0e(bool a, bool b, bool c)
; location: [7FFDDBEC48C0h, 7FFDDBEC48E1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0014h or edx,ecx                    ; OR(Or_r32_rm32) [EDX,ECX]                            encoding(2 bytes) = 0b d1
0016h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0eBytes => new byte[34]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x41,0x0F,0xB6,0xC8,0x0B,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f0f(bool a, bool b, bool c)
; location: [7FFDDBEC4900h, 7FFDDBEC490Dh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f0fBytes => new byte[14]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f10(bool a, bool b, bool c)
; location: [7FFDDBEC4920h, 7FFDDBEC4939h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0017h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f10Bytes => new byte[26]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f11(bool a, bool b, bool c)
; location: [7FFDDBEC4950h, 7FFDDBEC4964h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0009h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0011h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0014h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f11Bytes => new byte[21]{0x0F,0x1F,0x44,0x00,0x00,0x41,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f12(bool a, bool b, bool c)
; location: [7FFDDBEC4980h, 7FFDDBEC49A1h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0010h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0014h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0016h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f12Bytes => new byte[34]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x41,0x0F,0xB6,0xC8,0x33,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f13(bool a, bool b, bool c)
; location: [7FFDDBEC49C0h, 7FFDDBEC49DCh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch and eax,ecx                   ; AND(And_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 23 c1
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0014h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f13Bytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x23,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f14(bool a, bool b, bool c)
; location: [7FFDDBEC49F0h, 7FFDDBEC4A11h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0008h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000eh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0011h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0014h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0016h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f14Bytes => new byte[34]{0x0F,0x1F,0x44,0x00,0x00,0x45,0x84,0xC0,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x0F,0xB6,0xC9,0x0F,0xB6,0xD2,0x33,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f15(bool a, bool b, bool c)
; location: [7FFDDBEC4A30h, 7FFDDBEC4A4Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0014h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f15Bytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f16(bool a, bool b, bool c)
; location: [7FFDDBEC4A60h, 7FFDDBEC4A8Ah]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx r9d,r8b                 ; MOVZX(Movzx_r32_rm8) [R9D,R8L]                       encoding(4 bytes) = 45 0f b6 c8
000ch or eax,r9d                    ; OR(Or_r32_rm32) [EAX,R9D]                            encoding(3 bytes) = 41 0b c1
000fh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0012h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0015h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0017h jne short 0027h               ; JNE(Jne_rel8_64) [27h:jmp64]                         encoding(2 bytes) = 75 0e
0019h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
001ch movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0020h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0022h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0025h jmp short 002ah               ; JMP(Jmp_rel8_64) [2Ah:jmp64]                         encoding(2 bytes) = eb 03
0027h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002ah ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f16Bytes => new byte[43]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x45,0x0F,0xB6,0xC8,0x41,0x0B,0xC1,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x84,0xC9,0x75,0x0E,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0xEB,0x03,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f17(bool a, bool b, bool c)
; location: [7FFDDBEC4AA0h, 7FFDDBEC4ACFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx r9d,r8b                 ; MOVZX(Movzx_r32_rm8) [R9D,R8L]                       encoding(4 bytes) = 45 0f b6 c8
000ch or eax,r9d                    ; OR(Or_r32_rm32) [EAX,R9D]                            encoding(3 bytes) = 41 0b c1
000fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0012h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0014h jne short 0024h               ; JNE(Jne_rel8_64) [24h:jmp64]                         encoding(2 bytes) = 75 0e
0016h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0019h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
001dh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
001fh movzx edx,al                  ; MOVZX(Movzx_r32_rm8) [EDX,AL]                        encoding(3 bytes) = 0f b6 d0
0022h jmp short 0027h               ; JMP(Jmp_rel8_64) [27h:jmp64]                         encoding(2 bytes) = eb 03
0024h movzx edx,al                  ; MOVZX(Movzx_r32_rm8) [EDX,AL]                        encoding(3 bytes) = 0f b6 d0
0027h test edx,edx                  ; TEST(Test_rm32_r32) [EDX,EDX]                        encoding(2 bytes) = 85 d2
0029h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
002ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f17Bytes => new byte[48]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x45,0x0F,0xB6,0xC8,0x41,0x0B,0xC1,0x0F,0xB6,0xC0,0x84,0xC9,0x75,0x0E,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0x0F,0xB6,0xD0,0xEB,0x03,0x0F,0xB6,0xD0,0x85,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f18(bool a, bool b, bool c)
; location: [7FFDDBEC4AE0h, 7FFDDBEC4B01h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh xor edx,eax                   ; XOR(Xor_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 33 d0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0014h xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
001ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f18Bytes => new byte[34]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xD0,0x0F,0xB6,0xD2,0x41,0x0F,0xB6,0xC8,0x33,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f19(bool a, bool b, bool c)
; location: [7FFDDBEC4B20h, 7FFDDBEC4B4Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch mov r8d,eax                   ; MOV(Mov_r32_rm32) [R8D,EAX]                          encoding(3 bytes) = 44 8b c0
000fh xor r8d,edx                   ; XOR(Xor_r32_rm32) [R8D,EDX]                          encoding(3 bytes) = 44 33 c2
0012h movzx r8d,r8b                 ; MOVZX(Movzx_r32_rm8) [R8D,R8L]                       encoding(4 bytes) = 45 0f b6 c0
0016h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0018h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001bh movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
001eh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0020h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0023h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0027h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0029h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
002ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f19Bytes => new byte[45]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x44,0x8B,0xC0,0x44,0x33,0xC2,0x45,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x23,0xC2,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xD0,0x33,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f1a(bool a, bool b, bool c)
; location: [7FFDDBEC4B60h, 7FFDDBEC4B84h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and edx,eax                   ; AND(And_r32_rm32) [EDX,EAX]                          encoding(2 bytes) = 23 d0
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0014h xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
001ch and al,dl                     ; AND(And_r8_rm8) [AL,DL]                              encoding(2 bytes) = 22 c2
001eh sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0021h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0024h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1aBytes => new byte[37]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x23,0xD0,0x0F,0xB6,0xD2,0x41,0x0F,0xB6,0xC8,0x33,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x22,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f1b(bool a, bool b, bool c)
; location: [7FFDDBEC4BA0h, 7FFDDBEC4BBFh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0010h jne short 001ch               ; JNE(Jne_rel8_64) [1Ch:jmp64]                         encoding(2 bytes) = 75 0a
0012h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0014h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0017h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ah jmp short 001fh               ; JMP(Jmp_rel8_64) [1Fh:jmp64]                         encoding(2 bytes) = eb 03
001ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1bBytes => new byte[32]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x45,0x84,0xC0,0x75,0x0A,0x84,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xEB,0x03,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f1c(bool a, bool b, bool c)
; location: [7FFDDBEC4BD0h, 7FFDDBEC4BF4h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch and cl,al                     ; AND(And_r8_rm8) [CL,AL]                              encoding(2 bytes) = 22 c8
000eh sete cl                       ; SETE(Sete_rm8) [CL]                                  encoding(3 bytes) = 0f 94 c1
0011h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0014h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0017h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
001fh and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0021h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0024h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1cBytes => new byte[37]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x22,0xC8,0x0F,0x94,0xC1,0x0F,0xB6,0xC9,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f1d(bool a, bool b, bool c)
; location: [7FFDDBEC4C10h, 7FFDDBEC4C2Fh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000fh jne short 001ch               ; JNE(Jne_rel8_64) [1Ch:jmp64]                         encoding(2 bytes) = 75 0b
0011h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0014h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0017h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ah jmp short 001fh               ; JMP(Jmp_rel8_64) [1Fh:jmp64]                         encoding(2 bytes) = eb 03
001ch movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001fh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1dBytes => new byte[32]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xC9,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x84,0xD2,0x75,0x0B,0x45,0x84,0xC0,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xEB,0x03,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f1e(bool a, bool b, bool c)
; location: [7FFDDBEC4C40h, 7FFDDBEC4C59h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0014h xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
0016h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0019h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1eBytes => new byte[26]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x33,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f1f(bool a, bool b, bool c)
; location: [7FFDDBEC4C70h, 7FFDDBEC4C8Ch]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,dl                  ; MOVZX(Movzx_r32_rm8) [EAX,DL]                        encoding(3 bytes) = 0f b6 c2
0008h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
000ch or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx edx,cl                  ; MOVZX(Movzx_r32_rm8) [EDX,CL]                        encoding(3 bytes) = 0f b6 d1
0014h test eax,edx                  ; TEST(Test_rm32_r32) [EDX,EAX]                        encoding(2 bytes) = 85 c2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f1fBytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC2,0x41,0x0F,0xB6,0xD0,0x0B,0xC2,0x0F,0xB6,0xC0,0x0F,0xB6,0xD1,0x85,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f20(bool a, bool b, bool c)
; location: [7FFDDBEC4CA0h, 7FFDDBEC4CB8h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000ah sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
000dh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0010h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0012h movzx edx,r8b                 ; MOVZX(Movzx_r32_rm8) [EDX,R8L]                       encoding(4 bytes) = 41 0f b6 d0
0016h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0018h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f20Bytes => new byte[25]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x84,0xD2,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0x41,0x0F,0xB6,0xD0,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f21(bool a, bool b, bool c)
; location: [7FFDDBEC4CD0h, 7FFDDBEC4CECh]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
000ch xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
000eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0011h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0014h or eax,edx                    ; OR(Or_r32_rm32) [EAX,EDX]                            encoding(2 bytes) = 0b c2
0016h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f21Bytes => new byte[29]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x41,0x0F,0xB6,0xC8,0x33,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x0B,0xC2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f22(bool a, bool b, bool c)
; location: [7FFDDBEC4D00h, 7FFDDBEC4D13h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,r8b                 ; MOVZX(Movzx_r32_rm8) [EAX,R8L]                       encoding(4 bytes) = 41 0f b6 c0
0009h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
000bh sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
000eh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0011h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0013h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f22Bytes => new byte[20]{0x0F,0x1F,0x44,0x00,0x00,0x41,0x0F,0xB6,0xC0,0x84,0xD2,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x23,0xC2,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f23(bool a, bool b, bool c)
; location: [7FFDDBEC4D30h, 7FFDDBEC4D56h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h test dl,dl                    ; TEST(Test_rm8_r8) [DL,DL]                            encoding(2 bytes) = 84 d2
0007h sete al                       ; SETE(Sete_rm8) [AL]                                  encoding(3 bytes) = 0f 94 c0
000ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
000dh test cl,cl                    ; TEST(Test_rm8_r8) [CL,CL]                            encoding(2 bytes) = 84 c9
000fh sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
0012h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0015h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0019h or edx,ecx                    ; OR(Or_r32_rm32) [EDX,ECX]                            encoding(2 bytes) = 0b d1
001bh movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0023h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0026h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f23Bytes => new byte[39]{0x0F,0x1F,0x44,0x00,0x00,0x84,0xD2,0x0F,0x94,0xC0,0x0F,0xB6,0xC0,0x84,0xC9,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x41,0x0F,0xB6,0xC8,0x0B,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f24(bool a, bool b, bool c)
; location: [7FFDDBEC4D70h, 7FFDDBEC4D91h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh xor eax,edx                   ; XOR(Xor_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 33 c2
000dh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0010h movzx ecx,r8b                 ; MOVZX(Movzx_r32_rm8) [ECX,R8L]                       encoding(4 bytes) = 41 0f b6 c8
0014h xor edx,ecx                   ; XOR(Xor_r32_rm32) [EDX,ECX]                          encoding(2 bytes) = 33 d1
0016h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0019h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
001ch and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f24Bytes => new byte[34]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x33,0xC2,0x0F,0xB6,0xC0,0x41,0x0F,0xB6,0xC8,0x33,0xD1,0x0F,0xB6,0xD2,0x0F,0xB6,0xC0,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: bool f25(bool a, bool b, bool c)
; location: [7FFDDBEC4DB0h, 7FFDDBEC4DD9h]
0000h nop dword ptr [rax+rax]       ; NOP(Nop_rm32) [mem(32u,RAX:br,DS:sr)]                encoding(5 bytes) = 0f 1f 44 00 00
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
000bh and dl,al                     ; AND(And_r8_rm8) [DL,AL]                              encoding(2 bytes) = 22 d0
000dh sete dl                       ; SETE(Sete_rm8) [DL]                                  encoding(3 bytes) = 0f 94 c2
0010h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0013h test r8b,r8b                  ; TEST(Test_rm8_r8) [R8L,R8L]                          encoding(3 bytes) = 45 84 c0
0016h sete cl                       ; SETE(Sete_rm8) [CL]                                  encoding(3 bytes) = 0f 94 c1
0019h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
001ch xor eax,ecx                   ; XOR(Xor_r32_rm32) [EAX,ECX]                          encoding(2 bytes) = 33 c1
001eh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0021h movzx edx,dl                  ; MOVZX(Movzx_r32_rm8) [EDX,DL]                        encoding(3 bytes) = 0f b6 d2
0024h and eax,edx                   ; AND(And_r32_rm32) [EAX,EDX]                          encoding(2 bytes) = 23 c2
0026h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0029h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> f25Bytes => new byte[42]{0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0xC1,0x0F,0xB6,0xD2,0x22,0xD0,0x0F,0x94,0xC2,0x0F,0xB6,0xD2,0x45,0x84,0xC0,0x0F,0x94,0xC1,0x0F,0xB6,0xC9,0x33,0xC1,0x0F,0xB6,0xC0,0x0F,0xB6,0xD2,0x23,0xC2,0x0F,0xB6,0xC0,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: UnaryOp<bool> unaryop(UnaryLogic:uint id)
; location: [7FFDDBEC5200h, 7FFDDBEC52F7h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0007h cmp ecx,1                     ; CMP(Cmp_rm32_imm8) [ECX,1h:imm32]                    encoding(3 bytes) = 83 f9 01
000ah je short 005ah                ; JE(Je_rel8_64) [5Ah:jmp64]                           encoding(2 bytes) = 74 4e
000ch cmp ecx,2                     ; CMP(Cmp_rm32_imm8) [ECX,2h:imm32]                    encoding(3 bytes) = 83 f9 02
000fh jne near ptr 009fh            ; JNE(Jne_rel32_64) [9Fh:jmp64]                        encoding(6 bytes) = 0f 85 8a 00 00 00
0015h mov rcx,7FFDDBF75D78h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75d78h:imm64]         encoding(10 bytes) = 48 b9 78 5d f7 db fd 7f 00 00
001fh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F2B0h:jmp64]                encoding(5 bytes) = e8 8c f2 23 5f
0024h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0027h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
002bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
002eh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E3F0h:jmp64]                encoding(5 bytes) = e8 bd e3 23 5f
0033h mov rax,7FFDDB4CDE60h         ; MOV(Mov_r64_imm64) [RAX,7ffddb4cde60h:imm64]         encoding(10 bytes) = 48 b8 60 de 4c db fd 7f 00 00
003dh mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
0041h mov rax,7FFDDBEC13B8h         ; MOV(Mov_r64_imm64) [RAX,7ffddbec13b8h:imm64]         encoding(10 bytes) = 48 b8 b8 13 ec db fd 7f 00 00
004bh mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
004fh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0052h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0056h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
0057h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0058h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0059h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
005ah mov rcx,7FFDDBF75D78h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75d78h:imm64]         encoding(10 bytes) = 48 b9 78 5d f7 db fd 7f 00 00
0064h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F2B0h:jmp64]                encoding(5 bytes) = e8 47 f2 23 5f
0069h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
006ch lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0070h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0073h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E3F0h:jmp64]                encoding(5 bytes) = e8 78 e3 23 5f
0078h mov rax,7FFDDB4CDE60h         ; MOV(Mov_r64_imm64) [RAX,7ffddb4cde60h:imm64]         encoding(10 bytes) = 48 b8 60 de 4c db fd 7f 00 00
0082h mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
0086h mov rax,7FFDDBEC4510h         ; MOV(Mov_r64_imm64) [RAX,7ffddbec4510h:imm64]         encoding(10 bytes) = 48 b8 10 45 ec db fd 7f 00 00
0090h mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
0094h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0097h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
009bh pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
009ch pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
009dh pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
009eh ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
009fh mov esi,101h                  ; MOV(Mov_r32_imm32) [ESI,101h:imm32]                  encoding(5 bytes) = be 01 01 00 00
00a4h mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
00a9h mov ecx,78Ah                  ; MOV(Mov_r32_imm32) [ECX,78ah:imm32]                  encoding(5 bytes) = b9 8a 07 00 00
00aeh mov rdx,7FFDDB757BB8h         ; MOV(Mov_r64_imm64) [RDX,7ffddb757bb8h:imm64]         encoding(10 bytes) = 48 ba b8 7b 75 db fd 7f 00 00
00b8h call 7FFE3B22F6E0h            ; CALL(Call_rel32_64) [5F36A4E0h:jmp64]                encoding(5 bytes) = e8 23 a4 36 5f
00bdh mov rbx,rax                   ; MOV(Mov_r64_rm64) [RBX,RAX]                          encoding(3 bytes) = 48 8b d8
00c0h mov ecx,78Ah                  ; MOV(Mov_r32_imm32) [ECX,78ah:imm32]                  encoding(5 bytes) = b9 8a 07 00 00
00c5h mov rdx,7FFDDB757BB8h         ; MOV(Mov_r64_imm64) [RDX,7ffddb757bb8h:imm64]         encoding(10 bytes) = 48 ba b8 7b 75 db fd 7f 00 00
00cfh call 7FFE3B22F6E0h            ; CALL(Call_rel32_64) [5F36A4E0h:jmp64]                encoding(5 bytes) = e8 0c a4 36 5f
00d4h mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
00d7h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
00dch mov [rcx],dil                 ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DIL]           encoding(3 bytes) = 40 88 39
00dfh mov [rcx+4],esi               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),ESI]        encoding(3 bytes) = 89 71 04
00e2h mov rcx,rbx                   ; MOV(Mov_r64_rm64) [RCX,RBX]                          encoding(3 bytes) = 48 8b cb
00e5h mov r8,[rsp+28h]              ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 44 24 28
00eah call 7FFDDBEC4DF0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFBF0h:jmp64]        encoding(5 bytes) = e8 01 fb ff ff
00efh mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
00f2h call 7FFE3B0BA4F0h            ; CALL(Call_rel32_64) [5F1F52F0h:jmp64]                encoding(5 bytes) = e8 f9 51 1f 5f
00f7h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> unaryopBytes => new byte[248]{0x57,0x56,0x53,0x48,0x83,0xEC,0x30,0x83,0xF9,0x01,0x74,0x4E,0x83,0xF9,0x02,0x0F,0x85,0x8A,0x00,0x00,0x00,0x48,0xB9,0x78,0x5D,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x8C,0xF2,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xBD,0xE3,0x23,0x5F,0x48,0xB8,0x60,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0xB8,0x13,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5B,0x5E,0x5F,0xC3,0x48,0xB9,0x78,0x5D,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x47,0xF2,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x78,0xE3,0x23,0x5F,0x48,0xB8,0x60,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0x10,0x45,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5B,0x5E,0x5F,0xC3,0xBE,0x01,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0xB9,0x8A,0x07,0x00,0x00,0x48,0xBA,0xB8,0x7B,0x75,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x23,0xA4,0x36,0x5F,0x48,0x8B,0xD8,0xB9,0x8A,0x07,0x00,0x00,0x48,0xBA,0xB8,0x7B,0x75,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x0C,0xA4,0x36,0x5F,0x48,0x8B,0xD0,0x48,0x8D,0x4C,0x24,0x28,0x40,0x88,0x39,0x89,0x71,0x04,0x48,0x8B,0xCB,0x4C,0x8B,0x44,0x24,0x28,0xE8,0x01,0xFB,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xF9,0x51,0x1F,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BinaryOp<bool> binop(BinaryLogic:uint id)
; location: [7FFDDBEC5310h, 7FFDDBEC5521h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h push rbx                      ; PUSH(Push_r64) [RBX]                                 encoding(1 byte ) = 53
0003h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0007h lea esi,[rcx-1]               ; LEA(Lea_r32_m) [ESI,mem(Unknown,RCX:br,DS:sr)]       encoding(3 bytes) = 8d 71 ff
000ah cmp esi,8                     ; CMP(Cmp_rm32_imm8) [ESI,8h:imm32]                    encoding(3 bytes) = 83 fe 08
000dh ja short 0027h                ; JA(Ja_rel8_64) [27h:jmp64]                           encoding(2 bytes) = 77 18
000fh mov ecx,esi                   ; MOV(Mov_r32_rm32) [ECX,ESI]                          encoding(2 bytes) = 8b ce
0011h lea rax,[7FFDDBEC5528h]       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 05 00 02 00 00
0018h mov eax,[rax+rcx*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 04 88
001bh lea rdx,[7FFDDBEC5317h]       ; LEA(Lea_r64_m) [RDX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 15 e5 ff ff ff
0022h add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0025h jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(2 bytes) = ff e0
0027h cmp ecx,0Eh                   ; CMP(Cmp_rm32_imm8) [ECX,eh:imm32]                    encoding(3 bytes) = 83 f9 0e
002ah jne near ptr 01b9h            ; JNE(Jne_rel32_64) [1B9h:jmp64]                       encoding(6 bytes) = 0f 85 89 01 00 00
0030h mov rcx,7FFDDBF75FE8h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75fe8h:imm64]         encoding(10 bytes) = 48 b9 e8 5f f7 db fd 7f 00 00
003ah call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F1A0h:jmp64]                encoding(5 bytes) = e8 61 f1 23 5f
003fh mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0042h lea rcx,[rdi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RDI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4f 08
0046h mov rdx,rdi                   ; MOV(Mov_r64_rm64) [RDX,RDI]                          encoding(3 bytes) = 48 8b d7
0049h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E2E0h:jmp64]                encoding(5 bytes) = e8 92 e2 23 5f
004eh mov rax,7FFDDB4CDE90h         ; MOV(Mov_r64_imm64) [RAX,7ffddb4cde90h:imm64]         encoding(10 bytes) = 48 b8 90 de 4c db fd 7f 00 00
0058h mov [rdi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 47 18
005ch mov rax,7FFDDBEC4490h         ; MOV(Mov_r64_imm64) [RAX,7ffddbec4490h:imm64]         encoding(10 bytes) = 48 b8 90 44 ec db fd 7f 00 00
0066h mov [rdi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RDI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 47 20
006ah mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
006dh jmp near ptr 01b1h            ; JMP(Jmp_rel32_64) [1B1h:jmp64]                       encoding(5 bytes) = e9 3f 01 00 00
0072h mov rcx,7FFDDBF75FE8h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75fe8h:imm64]         encoding(10 bytes) = 48 b9 e8 5f f7 db fd 7f 00 00
007ch call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F1A0h:jmp64]                encoding(5 bytes) = e8 1f f1 23 5f
0081h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0084h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0088h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
008bh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E2E0h:jmp64]                encoding(5 bytes) = e8 50 e2 23 5f
0090h mov rcx,7FFDDB4CDE90h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cde90h:imm64]         encoding(10 bytes) = 48 b9 90 de 4c db fd 7f 00 00
009ah mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
009eh mov rcx,7FFDDBEC4460h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4460h:imm64]         encoding(10 bytes) = 48 b9 60 44 ec db fd 7f 00 00
00a8h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00ach mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00afh jmp near ptr 01b1h            ; JMP(Jmp_rel32_64) [1B1h:jmp64]                       encoding(5 bytes) = e9 fd 00 00 00
00b4h mov rcx,7FFDDBF75FE8h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75fe8h:imm64]         encoding(10 bytes) = 48 b9 e8 5f f7 db fd 7f 00 00
00beh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F1A0h:jmp64]                encoding(5 bytes) = e8 dd f0 23 5f
00c3h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c6h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
00cah mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
00cdh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E2E0h:jmp64]                encoding(5 bytes) = e8 0e e2 23 5f
00d2h mov rcx,7FFDDB4CDE90h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cde90h:imm64]         encoding(10 bytes) = 48 b9 90 de 4c db fd 7f 00 00
00dch mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
00e0h mov rcx,7FFDDBEC4530h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4530h:imm64]         encoding(10 bytes) = 48 b9 30 45 ec db fd 7f 00 00
00eah mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00eeh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00f1h jmp near ptr 01b1h            ; JMP(Jmp_rel32_64) [1B1h:jmp64]                       encoding(5 bytes) = e9 bb 00 00 00
00f6h mov rcx,7FFDDBF75FE8h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75fe8h:imm64]         encoding(10 bytes) = 48 b9 e8 5f f7 db fd 7f 00 00
0100h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F1A0h:jmp64]                encoding(5 bytes) = e8 9b f0 23 5f
0105h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0108h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
010ch mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
010fh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E2E0h:jmp64]                encoding(5 bytes) = e8 cc e1 23 5f
0114h mov rcx,7FFDDB4CDE90h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cde90h:imm64]         encoding(10 bytes) = 48 b9 90 de 4c db fd 7f 00 00
011eh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0122h mov rcx,7FFDDBEC4560h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4560h:imm64]         encoding(10 bytes) = 48 b9 60 45 ec db fd 7f 00 00
012ch mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0130h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0133h jmp short 01b1h               ; JMP(Jmp_rel8_64) [1B1h:jmp64]                        encoding(2 bytes) = eb 7c
0135h mov rcx,7FFDDBF75FE8h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75fe8h:imm64]         encoding(10 bytes) = 48 b9 e8 5f f7 db fd 7f 00 00
013fh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F1A0h:jmp64]                encoding(5 bytes) = e8 5c f0 23 5f
0144h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0147h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
014bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
014eh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E2E0h:jmp64]                encoding(5 bytes) = e8 8d e1 23 5f
0153h mov rcx,7FFDDB4CDE90h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cde90h:imm64]         encoding(10 bytes) = 48 b9 90 de 4c db fd 7f 00 00
015dh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0161h mov rcx,7FFDDBEC44C0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec44c0h:imm64]         encoding(10 bytes) = 48 b9 c0 44 ec db fd 7f 00 00
016bh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
016fh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0172h jmp short 01b1h               ; JMP(Jmp_rel8_64) [1B1h:jmp64]                        encoding(2 bytes) = eb 3d
0174h mov rcx,7FFDDBF75FE8h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf75fe8h:imm64]         encoding(10 bytes) = 48 b9 e8 5f f7 db fd 7f 00 00
017eh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23F1A0h:jmp64]                encoding(5 bytes) = e8 1d f0 23 5f
0183h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0186h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
018ah mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
018dh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E2E0h:jmp64]                encoding(5 bytes) = e8 4e e1 23 5f
0192h mov rcx,7FFDDB4CDE90h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cde90h:imm64]         encoding(10 bytes) = 48 b9 90 de 4c db fd 7f 00 00
019ch mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
01a0h mov rcx,7FFDDBEC4590h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4590h:imm64]         encoding(10 bytes) = 48 b9 90 45 ec db fd 7f 00 00
01aah mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
01aeh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01b1h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
01b5h pop rbx                       ; POP(Pop_r64) [RBX]                                   encoding(1 byte ) = 5b
01b6h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
01b7h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
01b8h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
01b9h mov esi,110h                  ; MOV(Mov_r32_imm32) [ESI,110h:imm32]                  encoding(5 bytes) = be 10 01 00 00
01beh mov edi,1                     ; MOV(Mov_r32_imm32) [EDI,1h:imm32]                    encoding(5 bytes) = bf 01 00 00 00
01c3h mov ecx,78Ah                  ; MOV(Mov_r32_imm32) [ECX,78ah:imm32]                  encoding(5 bytes) = b9 8a 07 00 00
01c8h mov rdx,7FFDDB757BB8h         ; MOV(Mov_r64_imm64) [RDX,7ffddb757bb8h:imm64]         encoding(10 bytes) = 48 ba b8 7b 75 db fd 7f 00 00
01d2h call 7FFE3B22F6E0h            ; CALL(Call_rel32_64) [5F36A3D0h:jmp64]                encoding(5 bytes) = e8 f9 a1 36 5f
01d7h mov rbx,rax                   ; MOV(Mov_r64_rm64) [RBX,RAX]                          encoding(3 bytes) = 48 8b d8
01dah mov ecx,78Ah                  ; MOV(Mov_r32_imm32) [ECX,78ah:imm32]                  encoding(5 bytes) = b9 8a 07 00 00
01dfh mov rdx,7FFDDB757BB8h         ; MOV(Mov_r64_imm64) [RDX,7ffddb757bb8h:imm64]         encoding(10 bytes) = 48 ba b8 7b 75 db fd 7f 00 00
01e9h call 7FFE3B22F6E0h            ; CALL(Call_rel32_64) [5F36A3D0h:jmp64]                encoding(5 bytes) = e8 e2 a1 36 5f
01eeh mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
01f1h lea rcx,[rsp+28h]             ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 4c 24 28
01f6h mov [rcx],dil                 ; MOV(Mov_rm8_r8) [mem(8u,RCX:br,DS:sr),DIL]           encoding(3 bytes) = 40 88 39
01f9h mov [rcx+4],esi               ; MOV(Mov_rm32_r32) [mem(32u,RCX:br,DS:sr),ESI]        encoding(3 bytes) = 89 71 04
01fch mov rcx,rbx                   ; MOV(Mov_r64_rm64) [RCX,RBX]                          encoding(3 bytes) = 48 8b cb
01ffh mov r8,[rsp+28h]              ; MOV(Mov_r64_rm64) [R8,mem(64u,RSP:br,SS:sr)]         encoding(5 bytes) = 4c 8b 44 24 28
0204h call 7FFDDBEC4DF0h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFAE0h:jmp64]        encoding(5 bytes) = e8 d7 f8 ff ff
0209h mov rcx,rax                   ; MOV(Mov_r64_rm64) [RCX,RAX]                          encoding(3 bytes) = 48 8b c8
020ch call 7FFE3B0BA4F0h            ; CALL(Call_rel32_64) [5F1F51E0h:jmp64]                encoding(5 bytes) = e8 cf 4f 1f 5f
0211h int 3                         ; INT(Int3)                                            encoding(1 byte ) = cc
; static ReadOnlySpan<byte> binopBytes => new byte[530]{0x57,0x56,0x53,0x48,0x83,0xEC,0x30,0x8D,0x71,0xFF,0x83,0xFE,0x08,0x77,0x18,0x8B,0xCE,0x48,0x8D,0x05,0x00,0x02,0x00,0x00,0x8B,0x04,0x88,0x48,0x8D,0x15,0xE5,0xFF,0xFF,0xFF,0x48,0x03,0xC2,0xFF,0xE0,0x83,0xF9,0x0E,0x0F,0x85,0x89,0x01,0x00,0x00,0x48,0xB9,0xE8,0x5F,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x61,0xF1,0x23,0x5F,0x48,0x8B,0xF8,0x48,0x8D,0x4F,0x08,0x48,0x8B,0xD7,0xE8,0x92,0xE2,0x23,0x5F,0x48,0xB8,0x90,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x47,0x18,0x48,0xB8,0x90,0x44,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x47,0x20,0x48,0x8B,0xC7,0xE9,0x3F,0x01,0x00,0x00,0x48,0xB9,0xE8,0x5F,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x1F,0xF1,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x50,0xE2,0x23,0x5F,0x48,0xB9,0x90,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x60,0x44,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xFD,0x00,0x00,0x00,0x48,0xB9,0xE8,0x5F,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xDD,0xF0,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x0E,0xE2,0x23,0x5F,0x48,0xB9,0x90,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x30,0x45,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xBB,0x00,0x00,0x00,0x48,0xB9,0xE8,0x5F,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x9B,0xF0,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xCC,0xE1,0x23,0x5F,0x48,0xB9,0x90,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x60,0x45,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xEB,0x7C,0x48,0xB9,0xE8,0x5F,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x5C,0xF0,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x8D,0xE1,0x23,0x5F,0x48,0xB9,0x90,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xC0,0x44,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xEB,0x3D,0x48,0xB9,0xE8,0x5F,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x1D,0xF0,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x4E,0xE1,0x23,0x5F,0x48,0xB9,0x90,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x90,0x45,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5B,0x5E,0x5F,0xC3,0xBE,0x10,0x01,0x00,0x00,0xBF,0x01,0x00,0x00,0x00,0xB9,0x8A,0x07,0x00,0x00,0x48,0xBA,0xB8,0x7B,0x75,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xF9,0xA1,0x36,0x5F,0x48,0x8B,0xD8,0xB9,0x8A,0x07,0x00,0x00,0x48,0xBA,0xB8,0x7B,0x75,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xE2,0xA1,0x36,0x5F,0x48,0x8B,0xD0,0x48,0x8D,0x4C,0x24,0x28,0x40,0x88,0x39,0x89,0x71,0x04,0x48,0x8B,0xCB,0x4C,0x8B,0x44,0x24,0x28,0xE8,0xD7,0xF8,0xFF,0xFF,0x48,0x8B,0xC8,0xE8,0xCF,0x4F,0x1F,0x5F,0xCC};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: TernaryOp<bool> ternop(TernaryLogic:byte id)
; location: [7FFDDBEC5570h, 7FFDDBEC5F61h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,20h                   ; SUB(Sub_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 ec 20
0005h movzx eax,cl                  ; MOVZX(Movzx_r32_rm8) [EAX,CL]                        encoding(3 bytes) = 0f b6 c1
0008h dec eax                       ; DEC(Dec_rm32) [EAX]                                  encoding(2 bytes) = ff c8
000ah cmp eax,24h                   ; CMP(Cmp_rm32_imm8) [EAX,24h:imm32]                   encoding(3 bytes) = 83 f8 24
000dh ja near ptr 09afh             ; JA(Ja_rel32_64) [9AFh:jmp64]                         encoding(6 bytes) = 0f 87 9c 09 00 00
0013h mov ecx,eax                   ; MOV(Mov_r32_rm32) [ECX,EAX]                          encoding(2 bytes) = 8b c8
0015h lea rax,[7FFDDBEC5F68h]       ; LEA(Lea_r64_m) [RAX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 05 dc 09 00 00
001ch mov eax,[rax+rcx*4]           ; MOV(Mov_r32_rm32) [EAX,mem(32u,RAX:br,DS:sr)]        encoding(3 bytes) = 8b 04 88
001fh lea rdx,[7FFDDBEC5575h]       ; LEA(Lea_r64_m) [RDX,mem(Unknown,RIP:br,DS:sr)]       encoding(7 bytes) = 48 8d 15 df ff ff ff
0026h add rax,rdx                   ; ADD(Add_r64_rm64) [RAX,RDX]                          encoding(3 bytes) = 48 03 c2
0029h jmp rax                       ; JMP(Jmp_rm64) [RAX]                                  encoding(2 bytes) = ff e0
002bh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0035h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 06 ef 23 5f
003ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
003dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0041h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0044h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 37 e0 23 5f
0049h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0053h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0057h mov rcx,7FFDDBEC4620h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4620h:imm64]         encoding(10 bytes) = 48 b9 20 46 ec db fd 7f 00 00
0061h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0065h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0068h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 7f 09 00 00
006dh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0077h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 c4 ee 23 5f
007ch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
007fh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0083h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0086h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 f5 df 23 5f
008bh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0095h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0099h mov rcx,7FFDDBEC4650h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4650h:imm64]         encoding(10 bytes) = 48 b9 50 46 ec db fd 7f 00 00
00a3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00a7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00aah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 3d 09 00 00
00afh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
00b9h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 82 ee 23 5f
00beh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
00c1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
00c5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
00c8h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 b3 df 23 5f
00cdh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
00d7h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
00dbh mov rcx,7FFDDBEC4680h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4680h:imm64]         encoding(10 bytes) = 48 b9 80 46 ec db fd 7f 00 00
00e5h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
00e9h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00ech jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 fb 08 00 00
00f1h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
00fbh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 40 ee 23 5f
0100h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0103h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0107h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
010ah call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 71 df 23 5f
010fh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0119h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
011dh mov rcx,7FFDDBEC46B0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec46b0h:imm64]         encoding(10 bytes) = 48 b9 b0 46 ec db fd 7f 00 00
0127h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
012bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
012eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 b9 08 00 00
0133h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
013dh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 fe ed 23 5f
0142h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0145h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0149h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
014ch call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 2f df 23 5f
0151h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
015bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
015fh mov rcx,7FFDDBEC46E0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec46e0h:imm64]         encoding(10 bytes) = 48 b9 e0 46 ec db fd 7f 00 00
0169h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
016dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0170h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 77 08 00 00
0175h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
017fh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 bc ed 23 5f
0184h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0187h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
018bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
018eh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 ed de 23 5f
0193h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
019dh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
01a1h mov rcx,7FFDDBEC4710h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4710h:imm64]         encoding(10 bytes) = 48 b9 10 47 ec db fd 7f 00 00
01abh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
01afh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01b2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 35 08 00 00
01b7h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
01c1h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 7a ed 23 5f
01c6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
01c9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
01cdh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
01d0h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 ab de 23 5f
01d5h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
01dfh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
01e3h mov rcx,7FFDDBEC4750h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4750h:imm64]         encoding(10 bytes) = 48 b9 50 47 ec db fd 7f 00 00
01edh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
01f1h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01f4h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 f3 07 00 00
01f9h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0203h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 38 ed 23 5f
0208h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
020bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
020fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0212h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 69 de 23 5f
0217h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0221h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0225h mov rcx,7FFDDBEC4780h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4780h:imm64]         encoding(10 bytes) = 48 b9 80 47 ec db fd 7f 00 00
022fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0233h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0236h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 b1 07 00 00
023bh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0245h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 f6 ec 23 5f
024ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
024dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0251h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0254h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 27 de 23 5f
0259h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0263h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0267h mov rcx,7FFDDBEC47B0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec47b0h:imm64]         encoding(10 bytes) = 48 b9 b0 47 ec db fd 7f 00 00
0271h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0275h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0278h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 6f 07 00 00
027dh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0287h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 b4 ec 23 5f
028ch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
028fh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0293h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0296h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 e5 dd 23 5f
029bh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
02a5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
02a9h mov rcx,7FFDDBEC47E0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec47e0h:imm64]         encoding(10 bytes) = 48 b9 e0 47 ec db fd 7f 00 00
02b3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
02b7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
02bah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 2d 07 00 00
02bfh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
02c9h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 72 ec 23 5f
02ceh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
02d1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
02d5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
02d8h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 a3 dd 23 5f
02ddh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
02e7h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
02ebh mov rcx,7FFDDBEC4810h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4810h:imm64]         encoding(10 bytes) = 48 b9 10 48 ec db fd 7f 00 00
02f5h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
02f9h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
02fch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 eb 06 00 00
0301h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
030bh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 30 ec 23 5f
0310h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0313h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0317h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
031ah call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 61 dd 23 5f
031fh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0329h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
032dh mov rcx,7FFDDBEC4850h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4850h:imm64]         encoding(10 bytes) = 48 b9 50 48 ec db fd 7f 00 00
0337h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
033bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
033eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 a9 06 00 00
0343h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
034dh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 ee eb 23 5f
0352h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0355h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0359h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
035ch call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 1f dd 23 5f
0361h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
036bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
036fh mov rcx,7FFDDBEC4880h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4880h:imm64]         encoding(10 bytes) = 48 b9 80 48 ec db fd 7f 00 00
0379h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
037dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0380h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 67 06 00 00
0385h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
038fh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 ac eb 23 5f
0394h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0397h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
039bh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
039eh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 dd dc 23 5f
03a3h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
03adh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
03b1h mov rcx,7FFDDBEC48C0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec48c0h:imm64]         encoding(10 bytes) = 48 b9 c0 48 ec db fd 7f 00 00
03bbh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
03bfh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
03c2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 25 06 00 00
03c7h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
03d1h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 6a eb 23 5f
03d6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
03d9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
03ddh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
03e0h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 9b dc 23 5f
03e5h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
03efh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
03f3h mov rcx,7FFDDBEC4900h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4900h:imm64]         encoding(10 bytes) = 48 b9 00 49 ec db fd 7f 00 00
03fdh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0401h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0404h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 e3 05 00 00
0409h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0413h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 28 eb 23 5f
0418h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
041bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
041fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0422h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 59 dc 23 5f
0427h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0431h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0435h mov rcx,7FFDDBEC4920h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4920h:imm64]         encoding(10 bytes) = 48 b9 20 49 ec db fd 7f 00 00
043fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0443h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0446h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 a1 05 00 00
044bh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0455h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 e6 ea 23 5f
045ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
045dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0461h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0464h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 17 dc 23 5f
0469h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0473h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0477h mov rcx,7FFDDBEC4950h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4950h:imm64]         encoding(10 bytes) = 48 b9 50 49 ec db fd 7f 00 00
0481h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0485h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0488h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 5f 05 00 00
048dh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0497h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 a4 ea 23 5f
049ch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
049fh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
04a3h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
04a6h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 d5 db 23 5f
04abh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
04b5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
04b9h mov rcx,7FFDDBEC4980h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4980h:imm64]         encoding(10 bytes) = 48 b9 80 49 ec db fd 7f 00 00
04c3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
04c7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
04cah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 1d 05 00 00
04cfh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
04d9h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 62 ea 23 5f
04deh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
04e1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
04e5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
04e8h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 93 db 23 5f
04edh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
04f7h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
04fbh mov rcx,7FFDDBEC49C0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec49c0h:imm64]         encoding(10 bytes) = 48 b9 c0 49 ec db fd 7f 00 00
0505h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0509h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
050ch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 db 04 00 00
0511h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
051bh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 20 ea 23 5f
0520h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0523h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0527h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
052ah call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 51 db 23 5f
052fh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0539h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
053dh mov rcx,7FFDDBEC49F0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec49f0h:imm64]         encoding(10 bytes) = 48 b9 f0 49 ec db fd 7f 00 00
0547h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
054bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
054eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 99 04 00 00
0553h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
055dh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 de e9 23 5f
0562h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0565h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0569h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
056ch call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 0f db 23 5f
0571h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
057bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
057fh mov rcx,7FFDDBEC4A30h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4a30h:imm64]         encoding(10 bytes) = 48 b9 30 4a ec db fd 7f 00 00
0589h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
058dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0590h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 57 04 00 00
0595h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
059fh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 9c e9 23 5f
05a4h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
05a7h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
05abh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
05aeh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 cd da 23 5f
05b3h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
05bdh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
05c1h mov rcx,7FFDDBEC4A60h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4a60h:imm64]         encoding(10 bytes) = 48 b9 60 4a ec db fd 7f 00 00
05cbh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
05cfh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
05d2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 15 04 00 00
05d7h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
05e1h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 5a e9 23 5f
05e6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
05e9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
05edh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
05f0h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 8b da 23 5f
05f5h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
05ffh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0603h mov rcx,7FFDDBEC4AA0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4aa0h:imm64]         encoding(10 bytes) = 48 b9 a0 4a ec db fd 7f 00 00
060dh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0611h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0614h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 d3 03 00 00
0619h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0623h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 18 e9 23 5f
0628h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
062bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
062fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0632h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 49 da 23 5f
0637h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0641h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0645h mov rcx,7FFDDBEC4AE0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4ae0h:imm64]         encoding(10 bytes) = 48 b9 e0 4a ec db fd 7f 00 00
064fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0653h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0656h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 91 03 00 00
065bh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0665h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 d6 e8 23 5f
066ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
066dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0671h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0674h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 07 da 23 5f
0679h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0683h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0687h mov rcx,7FFDDBEC4B20h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4b20h:imm64]         encoding(10 bytes) = 48 b9 20 4b ec db fd 7f 00 00
0691h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0695h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0698h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 4f 03 00 00
069dh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
06a7h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 94 e8 23 5f
06ach mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
06afh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
06b3h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
06b6h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 c5 d9 23 5f
06bbh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
06c5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
06c9h mov rcx,7FFDDBEC4B60h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4b60h:imm64]         encoding(10 bytes) = 48 b9 60 4b ec db fd 7f 00 00
06d3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
06d7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
06dah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 0d 03 00 00
06dfh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
06e9h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 52 e8 23 5f
06eeh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
06f1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
06f5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
06f8h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 83 d9 23 5f
06fdh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0707h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
070bh mov rcx,7FFDDBEC4BA0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4ba0h:imm64]         encoding(10 bytes) = 48 b9 a0 4b ec db fd 7f 00 00
0715h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0719h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
071ch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 cb 02 00 00
0721h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
072bh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 10 e8 23 5f
0730h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0733h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0737h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
073ah call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 41 d9 23 5f
073fh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0749h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
074dh mov rcx,7FFDDBEC4BD0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4bd0h:imm64]         encoding(10 bytes) = 48 b9 d0 4b ec db fd 7f 00 00
0757h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
075bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
075eh jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 89 02 00 00
0763h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
076dh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 ce e7 23 5f
0772h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0775h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0779h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
077ch call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 ff d8 23 5f
0781h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
078bh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
078fh mov rcx,7FFDDBEC4C10h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4c10h:imm64]         encoding(10 bytes) = 48 b9 10 4c ec db fd 7f 00 00
0799h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
079dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
07a0h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 47 02 00 00
07a5h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
07afh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 8c e7 23 5f
07b4h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
07b7h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
07bbh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
07beh call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 bd d8 23 5f
07c3h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
07cdh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
07d1h mov rcx,7FFDDBEC4C40h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4c40h:imm64]         encoding(10 bytes) = 48 b9 40 4c ec db fd 7f 00 00
07dbh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
07dfh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
07e2h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 05 02 00 00
07e7h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
07f1h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 4a e7 23 5f
07f6h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
07f9h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
07fdh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0800h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 7b d8 23 5f
0805h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
080fh mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0813h mov rcx,7FFDDBEC4C70h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4c70h:imm64]         encoding(10 bytes) = 48 b9 70 4c ec db fd 7f 00 00
081dh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0821h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0824h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 c3 01 00 00
0829h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0833h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 08 e7 23 5f
0838h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
083bh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
083fh mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0842h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 39 d8 23 5f
0847h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0851h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0855h mov rcx,7FFDDBEC4CA0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4ca0h:imm64]         encoding(10 bytes) = 48 b9 a0 4c ec db fd 7f 00 00
085fh mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0863h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0866h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 81 01 00 00
086bh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
0875h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 c6 e6 23 5f
087ah mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
087dh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0881h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0884h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 f7 d7 23 5f
0889h mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0893h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
0897h mov rcx,7FFDDBEC4CD0h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4cd0h:imm64]         encoding(10 bytes) = 48 b9 d0 4c ec db fd 7f 00 00
08a1h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
08a5h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
08a8h jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 3f 01 00 00
08adh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
08b7h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 84 e6 23 5f
08bch mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
08bfh lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
08c3h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
08c6h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 b5 d7 23 5f
08cbh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
08d5h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
08d9h mov rcx,7FFDDBEC4D00h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4d00h:imm64]         encoding(10 bytes) = 48 b9 00 4d ec db fd 7f 00 00
08e3h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
08e7h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
08eah jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 fd 00 00 00
08efh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
08f9h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 42 e6 23 5f
08feh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0901h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0905h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0908h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 73 d7 23 5f
090dh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0917h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
091bh mov rcx,7FFDDBEC4D30h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4d30h:imm64]         encoding(10 bytes) = 48 b9 30 4d ec db fd 7f 00 00
0925h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
0929h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
092ch jmp near ptr 09ech            ; JMP(Jmp_rel32_64) [9ECh:jmp64]                       encoding(5 bytes) = e9 bb 00 00 00
0931h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
093bh call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 00 e6 23 5f
0940h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0943h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0947h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
094ah call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 31 d7 23 5f
094fh mov rcx,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RCX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b9 d0 de 4c db fd 7f 00 00
0959h mov [rsi+18h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 18
095dh mov rcx,7FFDDBEC4D70h         ; MOV(Mov_r64_imm64) [RCX,7ffddbec4d70h:imm64]         encoding(10 bytes) = 48 b9 70 4d ec db fd 7f 00 00
0967h mov [rsi+20h],rcx             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RCX]        encoding(4 bytes) = 48 89 4e 20
096bh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
096eh jmp short 09ech               ; JMP(Jmp_rel8_64) [9ECh:jmp64]                        encoding(2 bytes) = eb 7c
0970h mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
097ah call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 c1 e5 23 5f
097fh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0982h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
0986h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
0989h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 f2 d6 23 5f
098eh mov rax,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RAX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b8 d0 de 4c db fd 7f 00 00
0998h mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
099ch mov rax,7FFDDBEC4DB0h         ; MOV(Mov_r64_imm64) [RAX,7ffddbec4db0h:imm64]         encoding(10 bytes) = 48 b8 b0 4d ec db fd 7f 00 00
09a6h mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
09aah mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
09adh jmp short 09ech               ; JMP(Jmp_rel8_64) [9ECh:jmp64]                        encoding(2 bytes) = eb 3d
09afh mov rcx,7FFDDBF76198h         ; MOV(Mov_r64_imm64) [RCX,7ffddbf76198h:imm64]         encoding(10 bytes) = 48 b9 98 61 f7 db fd 7f 00 00
09b9h call 7FFE3B1044B0h            ; CALL(Call_rel32_64) [5F23EF40h:jmp64]                encoding(5 bytes) = e8 82 e5 23 5f
09beh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
09c1h lea rcx,[rsi+8]               ; LEA(Lea_r64_m) [RCX,mem(Unknown,RSI:br,DS:sr)]       encoding(4 bytes) = 48 8d 4e 08
09c5h mov rdx,rsi                   ; MOV(Mov_r64_rm64) [RDX,RSI]                          encoding(3 bytes) = 48 8b d6
09c8h call 7FFE3B1035F0h            ; CALL(Call_rel32_64) [5F23E080h:jmp64]                encoding(5 bytes) = e8 b3 d6 23 5f
09cdh mov rax,7FFDDB4CDED0h         ; MOV(Mov_r64_imm64) [RAX,7ffddb4cded0h:imm64]         encoding(10 bytes) = 48 b8 d0 de 4c db fd 7f 00 00
09d7h mov [rsi+18h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 18
09dbh mov rax,7FFDDBEC45F0h         ; MOV(Mov_r64_imm64) [RAX,7ffddbec45f0h:imm64]         encoding(10 bytes) = 48 b8 f0 45 ec db fd 7f 00 00
09e5h mov [rsi+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSI:br,DS:sr),RAX]        encoding(4 bytes) = 48 89 46 20
09e9h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
09ech add rsp,20h                   ; ADD(Add_rm64_imm8) [RSP,20h:imm64]                   encoding(4 bytes) = 48 83 c4 20
09f0h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
09f1h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> ternopBytes => new byte[2546]{0x56,0x48,0x83,0xEC,0x20,0x0F,0xB6,0xC1,0xFF,0xC8,0x83,0xF8,0x24,0x0F,0x87,0x9C,0x09,0x00,0x00,0x8B,0xC8,0x48,0x8D,0x05,0xDC,0x09,0x00,0x00,0x8B,0x04,0x88,0x48,0x8D,0x15,0xDF,0xFF,0xFF,0xFF,0x48,0x03,0xC2,0xFF,0xE0,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x06,0xEF,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x37,0xE0,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x20,0x46,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x7F,0x09,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xC4,0xEE,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xF5,0xDF,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x50,0x46,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x3D,0x09,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x82,0xEE,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xB3,0xDF,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x80,0x46,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xFB,0x08,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x40,0xEE,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x71,0xDF,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xB0,0x46,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xB9,0x08,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xFE,0xED,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x2F,0xDF,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xE0,0x46,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x77,0x08,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xBC,0xED,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xED,0xDE,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x10,0x47,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x35,0x08,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x7A,0xED,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xAB,0xDE,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x50,0x47,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xF3,0x07,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x38,0xED,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x69,0xDE,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x80,0x47,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xB1,0x07,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xF6,0xEC,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x27,0xDE,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xB0,0x47,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x6F,0x07,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xB4,0xEC,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xE5,0xDD,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xE0,0x47,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x2D,0x07,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x72,0xEC,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xA3,0xDD,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x10,0x48,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xEB,0x06,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x30,0xEC,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x61,0xDD,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x50,0x48,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xA9,0x06,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xEE,0xEB,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x1F,0xDD,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x80,0x48,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x67,0x06,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xAC,0xEB,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xDD,0xDC,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xC0,0x48,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x25,0x06,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x6A,0xEB,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x9B,0xDC,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x00,0x49,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xE3,0x05,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x28,0xEB,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x59,0xDC,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x20,0x49,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xA1,0x05,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xE6,0xEA,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x17,0xDC,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x50,0x49,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x5F,0x05,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xA4,0xEA,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xD5,0xDB,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x80,0x49,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x1D,0x05,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x62,0xEA,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x93,0xDB,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xC0,0x49,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xDB,0x04,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x20,0xEA,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x51,0xDB,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xF0,0x49,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x99,0x04,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xDE,0xE9,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x0F,0xDB,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x30,0x4A,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x57,0x04,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x9C,0xE9,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xCD,0xDA,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x60,0x4A,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x15,0x04,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x5A,0xE9,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x8B,0xDA,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0x4A,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xD3,0x03,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x18,0xE9,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x49,0xDA,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xE0,0x4A,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x91,0x03,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xD6,0xE8,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x07,0xDA,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x20,0x4B,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x4F,0x03,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x94,0xE8,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xC5,0xD9,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x60,0x4B,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x0D,0x03,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x52,0xE8,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x83,0xD9,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0x4B,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xCB,0x02,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x10,0xE8,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x41,0xD9,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xD0,0x4B,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x89,0x02,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xCE,0xE7,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xFF,0xD8,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x10,0x4C,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x47,0x02,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x8C,0xE7,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xBD,0xD8,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x40,0x4C,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x05,0x02,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x4A,0xE7,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x7B,0xD8,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x70,0x4C,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xC3,0x01,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x08,0xE7,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x39,0xD8,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xA0,0x4C,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x81,0x01,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xC6,0xE6,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xF7,0xD7,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0xD0,0x4C,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0x3F,0x01,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x84,0xE6,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xB5,0xD7,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x00,0x4D,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xFD,0x00,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x42,0xE6,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x73,0xD7,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x30,0x4D,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xE9,0xBB,0x00,0x00,0x00,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x00,0xE6,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0x31,0xD7,0x23,0x5F,0x48,0xB9,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x18,0x48,0xB9,0x70,0x4D,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x4E,0x20,0x48,0x8B,0xC6,0xEB,0x7C,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0xC1,0xE5,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xF2,0xD6,0x23,0x5F,0x48,0xB8,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0xB0,0x4D,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0xEB,0x3D,0x48,0xB9,0x98,0x61,0xF7,0xDB,0xFD,0x7F,0x00,0x00,0xE8,0x82,0xE5,0x23,0x5F,0x48,0x8B,0xF0,0x48,0x8D,0x4E,0x08,0x48,0x8B,0xD6,0xE8,0xB3,0xD6,0x23,0x5F,0x48,0xB8,0xD0,0xDE,0x4C,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x18,0x48,0xB8,0xF0,0x45,0xEC,0xDB,0xFD,0x7F,0x00,0x00,0x48,0x89,0x46,0x20,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x20,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Byte[] rows(BinaryLogic:uint op)
; location: [7FFDDBEC6010h, 7FFDDBEC6181h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,38h                   ; SUB(Sub_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 ec 38
0006h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0009h lea rdi,[rsp+20h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 20
000eh mov ecx,6                     ; MOV(Mov_r32_imm32) [ECX,6h:imm32]                    encoding(5 bytes) = b9 06 00 00 00
0013h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0015h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0017h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
001ah call 7FFDDBEC5310h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF300h:jmp64]        encoding(5 bytes) = e8 e1 f2 ff ff
001fh mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0022h mov rcx,7FFDDB5CEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffddb5cea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5c db fd 7f 00 00
002ch mov edx,8                     ; MOV(Mov_r32_imm32) [EDX,8h:imm32]                    encoding(5 bytes) = ba 08 00 00 00
0031h call 7FFE3B1045E0h            ; CALL(Call_rel32_64) [5F23E5D0h:jmp64]                encoding(5 bytes) = e8 9a e5 23 5f
0036h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
0039h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
003ch mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
0040h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0042h xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0045h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
0048h movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
004bh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
004dh mov [rsp+34h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 34
0051h mov [rsp+34h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 34
0055h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0057h je short 0065h                ; JE(Je_rel8_64) [65h:jmp64]                           encoding(2 bytes) = 74 0c
0059h movzx ecx,byte ptr [rsp+34h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 34
005eh or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
0061h mov [rsp+34h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 34
0065h mov ecx,[rsp+34h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 34
0069h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
006ch mov [rdi+10h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 10
006fh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0072h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
0076h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
007bh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
007eh call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
0081h movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
0084h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0086h mov [rsp+30h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 30
008ah mov [rsp+2Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 2c
008eh mov [rsp+2Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 2c
0092h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0094h je short 00a2h                ; JE(Je_rel8_64) [A2h:jmp64]                           encoding(2 bytes) = 74 0c
0096h movzx ecx,byte ptr [rsp+2Ch]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 2c
009bh or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
009eh mov [rsp+2Ch],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 2c
00a2h mov ecx,[rsp+2Ch]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 2c
00a6h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
00a9h mov [rsp+30h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 30
00adh movzx ecx,byte ptr [rsp+30h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 30
00b2h or ecx,4                      ; OR(Or_rm32_imm8) [ECX,4h:imm32]                      encoding(3 bytes) = 83 c9 04
00b5h mov [rsp+30h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 30
00b9h mov ecx,[rsp+30h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 30
00bdh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
00c0h mov [rdi+11h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 11
00c3h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00c6h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
00cah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
00cch mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
00d2h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
00d5h movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
00d8h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
00dah mov [rsp+28h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 28
00deh mov [rsp+28h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 28
00e2h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
00e4h je short 00f2h                ; JE(Je_rel8_64) [F2h:jmp64]                           encoding(2 bytes) = 74 0c
00e6h movzx ecx,byte ptr [rsp+28h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 28
00ebh or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
00eeh mov [rsp+28h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 28
00f2h movzx ecx,byte ptr [rsp+28h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 28
00f7h or ecx,2                      ; OR(Or_rm32_imm8) [ECX,2h:imm32]                      encoding(3 bytes) = 83 c9 02
00fah mov [rsp+28h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 28
00feh mov ecx,[rsp+28h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 28
0102h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0105h mov [rdi+12h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 12
0108h mov rcx,[rsi+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSI:br,DS:sr)]        encoding(4 bytes) = 48 8b 4e 08
010ch mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
0111h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
0117h call qword ptr [rsi+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RSI:br,DS:sr)]      encoding(3 bytes) = ff 56 18
011ah movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
011dh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
011fh mov [rsp+24h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 24
0123h mov [rsp+20h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 20
0127h mov [rsp+20h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 20
012bh test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
012dh je short 013bh                ; JE(Je_rel8_64) [13Bh:jmp64]                          encoding(2 bytes) = 74 0c
012fh movzx eax,byte ptr [rsp+20h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 20
0134h or eax,1                      ; OR(Or_rm32_imm8) [EAX,1h:imm32]                      encoding(3 bytes) = 83 c8 01
0137h mov [rsp+20h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 20
013bh movzx eax,byte ptr [rsp+20h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 20
0140h or eax,2                      ; OR(Or_rm32_imm8) [EAX,2h:imm32]                      encoding(3 bytes) = 83 c8 02
0143h mov [rsp+20h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 20
0147h mov eax,[rsp+20h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 20
014bh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
014eh mov [rsp+24h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 24
0152h movzx eax,byte ptr [rsp+24h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 24
0157h or eax,4                      ; OR(Or_rm32_imm8) [EAX,4h:imm32]                      encoding(3 bytes) = 83 c8 04
015ah mov [rsp+24h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 24
015eh mov eax,[rsp+24h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 24
0162h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0165h mov [rdi+13h],al              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),AL]            encoding(3 bytes) = 88 47 13
0168h mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
016bh add rsp,38h                   ; ADD(Add_rm64_imm8) [RSP,38h:imm64]                   encoding(4 bytes) = 48 83 c4 38
016fh pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0170h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0171h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> rowsBytes => new byte[370]{0x57,0x56,0x48,0x83,0xEC,0x38,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x20,0xB9,0x06,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0xE8,0xE1,0xF2,0xFF,0xFF,0x48,0x8B,0xF0,0x48,0xB9,0x10,0xEA,0x5C,0xDB,0xFD,0x7F,0x00,0x00,0xBA,0x08,0x00,0x00,0x00,0xE8,0x9A,0xE5,0x23,0x5F,0x48,0x8B,0xF8,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0x33,0xD2,0x45,0x33,0xC0,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x34,0x89,0x54,0x24,0x34,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x34,0x83,0xC9,0x01,0x88,0x4C,0x24,0x34,0x8B,0x4C,0x24,0x34,0x0F,0xB6,0xC9,0x88,0x4F,0x10,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xBA,0x01,0x00,0x00,0x00,0x45,0x33,0xC0,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x30,0x89,0x54,0x24,0x2C,0x89,0x54,0x24,0x2C,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x2C,0x83,0xC9,0x01,0x88,0x4C,0x24,0x2C,0x8B,0x4C,0x24,0x2C,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x30,0x0F,0xB6,0x4C,0x24,0x30,0x83,0xC9,0x04,0x88,0x4C,0x24,0x30,0x8B,0x4C,0x24,0x30,0x0F,0xB6,0xC9,0x88,0x4F,0x11,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0x33,0xD2,0x41,0xB8,0x01,0x00,0x00,0x00,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x28,0x89,0x54,0x24,0x28,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x28,0x83,0xC9,0x01,0x88,0x4C,0x24,0x28,0x0F,0xB6,0x4C,0x24,0x28,0x83,0xC9,0x02,0x88,0x4C,0x24,0x28,0x8B,0x4C,0x24,0x28,0x0F,0xB6,0xC9,0x88,0x4F,0x12,0x48,0x8B,0x4E,0x08,0xBA,0x01,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0xFF,0x56,0x18,0x0F,0xB6,0xC0,0x33,0xD2,0x89,0x54,0x24,0x24,0x89,0x54,0x24,0x20,0x89,0x54,0x24,0x20,0x85,0xC0,0x74,0x0C,0x0F,0xB6,0x44,0x24,0x20,0x83,0xC8,0x01,0x88,0x44,0x24,0x20,0x0F,0xB6,0x44,0x24,0x20,0x83,0xC8,0x02,0x88,0x44,0x24,0x20,0x8B,0x44,0x24,0x20,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x24,0x0F,0xB6,0x44,0x24,0x24,0x83,0xC8,0x04,0x88,0x44,0x24,0x24,0x8B,0x44,0x24,0x24,0x0F,0xB6,0xC0,0x88,0x47,0x13,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x38,0x5E,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<N4,N3,byte> table(BinaryLogic:uint op)
; location: [7FFDDBEC61A0h, 7FFDDBEC61E4h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
000ch mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h mov byte ptr [rsp+28h],0      ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(5 bytes) = c6 44 24 28 00
0019h mov byte ptr [rsp+20h],0      ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(5 bytes) = c6 44 24 20 00
001eh mov ecx,edx                   ; MOV(Mov_r32_rm32) [ECX,EDX]                          encoding(2 bytes) = 8b ca
0020h call 7FFDDBEC6010h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFE70h:jmp64]        encoding(5 bytes) = e8 4b fe ff ff
0025h mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
0028h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
002bh movsx r8,byte ptr [rsp+28h]   ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RSP:br,SS:sr)]       encoding(6 bytes) = 4c 0f be 44 24 28
0031h movsx r9,byte ptr [rsp+20h]   ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RSP:br,SS:sr)]       encoding(6 bytes) = 4c 0f be 4c 24 20
0037h call 7FFDDBEC4E50h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFECB0h:jmp64]        encoding(5 bytes) = e8 74 ec ff ff
003ch mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
003fh add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0043h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0044h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> tableBytes => new byte[69]{0x56,0x48,0x83,0xEC,0x30,0x33,0xC0,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0x48,0x8B,0xF1,0xC6,0x44,0x24,0x28,0x00,0xC6,0x44,0x24,0x20,0x00,0x8B,0xCA,0xE8,0x4B,0xFE,0xFF,0xFF,0x48,0x8B,0xD0,0x48,0x8B,0xCE,0x4C,0x0F,0xBE,0x44,0x24,0x28,0x4C,0x0F,0xBE,0x4C,0x24,0x20,0xE8,0x74,0xEC,0xFF,0xFF,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: Byte[] rows(TernaryLogic:byte op)
; location: [7FFDDBEC6200h, 7FFDDBEC6545h]
0000h push rdi                      ; PUSH(Push_r64) [RDI]                                 encoding(1 byte ) = 57
0001h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0002h sub rsp,68h                   ; SUB(Sub_rm64_imm8) [RSP,68h:imm64]                   encoding(4 bytes) = 48 83 ec 68
0006h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0009h lea rdi,[rsp+24h]             ; LEA(Lea_r64_m) [RDI,mem(Unknown,RSP:br,SS:sr)]       encoding(5 bytes) = 48 8d 7c 24 24
000eh mov ecx,11h                   ; MOV(Mov_r32_imm32) [ECX,11h:imm32]                   encoding(5 bytes) = b9 11 00 00 00
0013h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0015h rep stosd                     ; STOSD(Stosd_m32_EAX) [mem(32u),EAX]                  encoding(2 bytes) = f3 ab
0017h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
001ah movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
001dh call 7FFDDBEC5570h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFF370h:jmp64]        encoding(5 bytes) = e8 4e f3 ff ff
0022h mov rsi,rax                   ; MOV(Mov_r64_rm64) [RSI,RAX]                          encoding(3 bytes) = 48 8b f0
0025h mov rcx,7FFDDB5CEA10h         ; MOV(Mov_r64_imm64) [RCX,7ffddb5cea10h:imm64]         encoding(10 bytes) = 48 b9 10 ea 5c db fd 7f 00 00
002fh mov edx,8                     ; MOV(Mov_r32_imm32) [EDX,8h:imm32]                    encoding(5 bytes) = ba 08 00 00 00
0034h call 7FFE3B1045E0h            ; CALL(Call_rel32_64) [5F23E3E0h:jmp64]                encoding(5 bytes) = e8 a7 e3 23 5f
0039h mov rdi,rax                   ; MOV(Mov_r64_rm64) [RDI,RAX]                          encoding(3 bytes) = 48 8b f8
003ch mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
003fh mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
0043h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0045h xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0048h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
004bh call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
004eh movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
0051h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0053h mov [rsp+64h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 64
0057h mov [rsp+64h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 64
005bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
005dh je short 006bh                ; JE(Je_rel8_64) [6Bh:jmp64]                           encoding(2 bytes) = 74 0c
005fh movzx ecx,byte ptr [rsp+64h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 64
0064h or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
0067h mov [rsp+64h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 64
006bh mov ecx,[rsp+64h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 64
006fh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0072h mov [rdi+10h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 10
0075h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0078h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
007ch xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
007eh xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
0081h mov r9d,1                     ; MOV(Mov_r32_imm32) [R9D,1h:imm32]                    encoding(6 bytes) = 41 b9 01 00 00 00
0087h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
008ah movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
008dh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
008fh mov [rsp+60h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 60
0093h mov [rsp+5Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 5c
0097h mov [rsp+5Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 5c
009bh test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
009dh je short 00abh                ; JE(Je_rel8_64) [ABh:jmp64]                           encoding(2 bytes) = 74 0c
009fh movzx ecx,byte ptr [rsp+5Ch]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 5c
00a4h or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
00a7h mov [rsp+5Ch],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 5c
00abh mov ecx,[rsp+5Ch]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 5c
00afh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
00b2h mov [rsp+60h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 60
00b6h movzx ecx,byte ptr [rsp+60h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 60
00bbh or ecx,8                      ; OR(Or_rm32_imm8) [ECX,8h:imm32]                      encoding(3 bytes) = 83 c9 08
00beh mov [rsp+60h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 60
00c2h mov ecx,[rsp+60h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 60
00c6h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
00c9h mov [rdi+11h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 11
00cch mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
00cfh mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
00d3h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
00d5h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
00dbh xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
00deh call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
00e1h movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
00e4h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
00e6h mov [rsp+58h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 58
00eah mov [rsp+54h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 54
00eeh mov [rsp+54h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 54
00f2h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
00f4h je short 0102h                ; JE(Je_rel8_64) [102h:jmp64]                          encoding(2 bytes) = 74 0c
00f6h movzx ecx,byte ptr [rsp+54h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 54
00fbh or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
00feh mov [rsp+54h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 54
0102h mov ecx,[rsp+54h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 54
0106h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0109h mov [rsp+58h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 58
010dh movzx ecx,byte ptr [rsp+58h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 58
0112h or ecx,4                      ; OR(Or_rm32_imm8) [ECX,4h:imm32]                      encoding(3 bytes) = 83 c9 04
0115h mov [rsp+58h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 58
0119h mov ecx,[rsp+58h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 58
011dh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0120h mov [rdi+12h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 12
0123h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0126h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
012ah xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
012ch mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
0132h mov r9d,1                     ; MOV(Mov_r32_imm32) [R9D,1h:imm32]                    encoding(6 bytes) = 41 b9 01 00 00 00
0138h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
013bh movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
013eh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0140h mov [rsp+50h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 50
0144h mov [rsp+4Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 4c
0148h mov [rsp+48h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 48
014ch mov [rsp+48h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 48
0150h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0152h je short 0160h                ; JE(Je_rel8_64) [160h:jmp64]                          encoding(2 bytes) = 74 0c
0154h movzx ecx,byte ptr [rsp+48h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 48
0159h or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
015ch mov [rsp+48h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 48
0160h mov ecx,[rsp+48h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 48
0164h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0167h mov [rsp+4Ch],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 4c
016bh movzx ecx,byte ptr [rsp+4Ch]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 4c
0170h or ecx,4                      ; OR(Or_rm32_imm8) [ECX,4h:imm32]                      encoding(3 bytes) = 83 c9 04
0173h mov [rsp+4Ch],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 4c
0177h mov ecx,[rsp+4Ch]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 4c
017bh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
017eh mov [rsp+50h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 50
0182h movzx ecx,byte ptr [rsp+50h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 50
0187h or ecx,8                      ; OR(Or_rm32_imm8) [ECX,8h:imm32]                      encoding(3 bytes) = 83 c9 08
018ah mov [rsp+50h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 50
018eh mov ecx,[rsp+50h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 50
0192h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0195h mov [rdi+13h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 13
0198h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
019bh mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
019fh mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
01a4h xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
01a7h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
01aah call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
01adh movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
01b0h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
01b2h mov [rsp+44h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 44
01b6h mov [rsp+44h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 44
01bah test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
01bch je short 01cah                ; JE(Je_rel8_64) [1CAh:jmp64]                          encoding(2 bytes) = 74 0c
01beh movzx ecx,byte ptr [rsp+44h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 44
01c3h or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
01c6h mov [rsp+44h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 44
01cah movzx ecx,byte ptr [rsp+44h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 44
01cfh or ecx,2                      ; OR(Or_rm32_imm8) [ECX,2h:imm32]                      encoding(3 bytes) = 83 c9 02
01d2h mov [rsp+44h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 44
01d6h mov ecx,[rsp+44h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 44
01dah movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
01ddh mov [rdi+14h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 14
01e0h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
01e3h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
01e7h mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
01ech xor r8d,r8d                   ; XOR(Xor_r32_rm32) [R8D,R8D]                          encoding(3 bytes) = 45 33 c0
01efh mov r9d,1                     ; MOV(Mov_r32_imm32) [R9D,1h:imm32]                    encoding(6 bytes) = 41 b9 01 00 00 00
01f5h call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
01f8h movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
01fbh xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
01fdh mov [rsp+40h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 40
0201h mov [rsp+3Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 3c
0205h mov [rsp+3Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 3c
0209h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
020bh je short 0219h                ; JE(Je_rel8_64) [219h:jmp64]                          encoding(2 bytes) = 74 0c
020dh movzx ecx,byte ptr [rsp+3Ch]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 3c
0212h or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
0215h mov [rsp+3Ch],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 3c
0219h movzx ecx,byte ptr [rsp+3Ch]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 3c
021eh or ecx,2                      ; OR(Or_rm32_imm8) [ECX,2h:imm32]                      encoding(3 bytes) = 83 c9 02
0221h mov [rsp+3Ch],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 3c
0225h mov ecx,[rsp+3Ch]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 3c
0229h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
022ch mov [rsp+40h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 40
0230h movzx ecx,byte ptr [rsp+40h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 40
0235h or ecx,8                      ; OR(Or_rm32_imm8) [ECX,8h:imm32]                      encoding(3 bytes) = 83 c9 08
0238h mov [rsp+40h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 40
023ch mov ecx,[rsp+40h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 40
0240h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
0243h mov [rdi+15h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 15
0246h mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0249h mov rcx,[rax+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RAX:br,DS:sr)]        encoding(4 bytes) = 48 8b 48 08
024dh mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
0252h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
0258h xor r9d,r9d                   ; XOR(Xor_r32_rm32) [R9D,R9D]                          encoding(3 bytes) = 45 33 c9
025bh call qword ptr [rax+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RAX:br,DS:sr)]      encoding(3 bytes) = ff 50 18
025eh movzx ecx,al                  ; MOVZX(Movzx_r32_rm8) [ECX,AL]                        encoding(3 bytes) = 0f b6 c8
0261h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
0263h mov [rsp+38h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 38
0267h mov [rsp+34h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 34
026bh mov [rsp+30h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 30
026fh mov [rsp+30h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 30
0273h test ecx,ecx                  ; TEST(Test_rm32_r32) [ECX,ECX]                        encoding(2 bytes) = 85 c9
0275h je short 0283h                ; JE(Je_rel8_64) [283h:jmp64]                          encoding(2 bytes) = 74 0c
0277h movzx ecx,byte ptr [rsp+30h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 30
027ch or ecx,1                      ; OR(Or_rm32_imm8) [ECX,1h:imm32]                      encoding(3 bytes) = 83 c9 01
027fh mov [rsp+30h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 30
0283h mov ecx,[rsp+30h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 30
0287h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
028ah mov [rsp+34h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 34
028eh movzx ecx,byte ptr [rsp+34h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 34
0293h or ecx,4                      ; OR(Or_rm32_imm8) [ECX,4h:imm32]                      encoding(3 bytes) = 83 c9 04
0296h mov [rsp+34h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 34
029ah mov ecx,[rsp+34h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 34
029eh movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
02a1h mov [rsp+38h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 38
02a5h movzx ecx,byte ptr [rsp+38h]  ; MOVZX(Movzx_r32_rm8) [ECX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 4c 24 38
02aah or ecx,8                      ; OR(Or_rm32_imm8) [ECX,8h:imm32]                      encoding(3 bytes) = 83 c9 08
02adh mov [rsp+38h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),CL]            encoding(4 bytes) = 88 4c 24 38
02b1h mov ecx,[rsp+38h]             ; MOV(Mov_r32_rm32) [ECX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 4c 24 38
02b5h movzx ecx,cl                  ; MOVZX(Movzx_r32_rm8) [ECX,CL]                        encoding(3 bytes) = 0f b6 c9
02b8h mov [rdi+16h],cl              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),CL]            encoding(3 bytes) = 88 4f 16
02bbh mov rcx,[rsi+8]               ; MOV(Mov_r64_rm64) [RCX,mem(64u,RSI:br,DS:sr)]        encoding(4 bytes) = 48 8b 4e 08
02bfh mov edx,1                     ; MOV(Mov_r32_imm32) [EDX,1h:imm32]                    encoding(5 bytes) = ba 01 00 00 00
02c4h mov r8d,1                     ; MOV(Mov_r32_imm32) [R8D,1h:imm32]                    encoding(6 bytes) = 41 b8 01 00 00 00
02cah mov r9d,1                     ; MOV(Mov_r32_imm32) [R9D,1h:imm32]                    encoding(6 bytes) = 41 b9 01 00 00 00
02d0h call qword ptr [rsi+18h]      ; CALL(Call_rm64) [mem(QwordOffset,RSI:br,DS:sr)]      encoding(3 bytes) = ff 56 18
02d3h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
02d6h xor edx,edx                   ; XOR(Xor_r32_rm32) [EDX,EDX]                          encoding(2 bytes) = 33 d2
02d8h mov [rsp+2Ch],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 2c
02dch mov [rsp+28h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 28
02e0h mov [rsp+24h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 24
02e4h mov [rsp+24h],edx             ; MOV(Mov_rm32_r32) [mem(32u,RSP:br,SS:sr),EDX]        encoding(4 bytes) = 89 54 24 24
02e8h test eax,eax                  ; TEST(Test_rm32_r32) [EAX,EAX]                        encoding(2 bytes) = 85 c0
02eah je short 02f8h                ; JE(Je_rel8_64) [2F8h:jmp64]                          encoding(2 bytes) = 74 0c
02ech movzx eax,byte ptr [rsp+24h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 24
02f1h or eax,1                      ; OR(Or_rm32_imm8) [EAX,1h:imm32]                      encoding(3 bytes) = 83 c8 01
02f4h mov [rsp+24h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 24
02f8h movzx eax,byte ptr [rsp+24h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 24
02fdh or eax,2                      ; OR(Or_rm32_imm8) [EAX,2h:imm32]                      encoding(3 bytes) = 83 c8 02
0300h mov [rsp+24h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 24
0304h mov eax,[rsp+24h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 24
0308h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
030bh mov [rsp+28h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 28
030fh movzx eax,byte ptr [rsp+28h]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 28
0314h or eax,4                      ; OR(Or_rm32_imm8) [EAX,4h:imm32]                      encoding(3 bytes) = 83 c8 04
0317h mov [rsp+28h],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 28
031bh mov eax,[rsp+28h]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 28
031fh movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0322h mov [rsp+2Ch],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 2c
0326h movzx eax,byte ptr [rsp+2Ch]  ; MOVZX(Movzx_r32_rm8) [EAX,mem(8u,RSP:br,SS:sr)]      encoding(5 bytes) = 0f b6 44 24 2c
032bh or eax,8                      ; OR(Or_rm32_imm8) [EAX,8h:imm32]                      encoding(3 bytes) = 83 c8 08
032eh mov [rsp+2Ch],al              ; MOV(Mov_rm8_r8) [mem(8u,RSP:br,SS:sr),AL]            encoding(4 bytes) = 88 44 24 2c
0332h mov eax,[rsp+2Ch]             ; MOV(Mov_r32_rm32) [EAX,mem(32u,RSP:br,SS:sr)]        encoding(4 bytes) = 8b 44 24 2c
0336h movzx eax,al                  ; MOVZX(Movzx_r32_rm8) [EAX,AL]                        encoding(3 bytes) = 0f b6 c0
0339h mov [rdi+17h],al              ; MOV(Mov_rm8_r8) [mem(8u,RDI:br,DS:sr),AL]            encoding(3 bytes) = 88 47 17
033ch mov rax,rdi                   ; MOV(Mov_r64_rm64) [RAX,RDI]                          encoding(3 bytes) = 48 8b c7
033fh add rsp,68h                   ; ADD(Add_rm64_imm8) [RSP,68h:imm64]                   encoding(4 bytes) = 48 83 c4 68
0343h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0344h pop rdi                       ; POP(Pop_r64) [RDI]                                   encoding(1 byte ) = 5f
0345h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> rowsBytes => new byte[838]{0x57,0x56,0x48,0x83,0xEC,0x68,0x48,0x8B,0xF1,0x48,0x8D,0x7C,0x24,0x24,0xB9,0x11,0x00,0x00,0x00,0x33,0xC0,0xF3,0xAB,0x48,0x8B,0xCE,0x0F,0xB6,0xC9,0xE8,0x4E,0xF3,0xFF,0xFF,0x48,0x8B,0xF0,0x48,0xB9,0x10,0xEA,0x5C,0xDB,0xFD,0x7F,0x00,0x00,0xBA,0x08,0x00,0x00,0x00,0xE8,0xA7,0xE3,0x23,0x5F,0x48,0x8B,0xF8,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0x33,0xD2,0x45,0x33,0xC0,0x45,0x33,0xC9,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x64,0x89,0x54,0x24,0x64,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x64,0x83,0xC9,0x01,0x88,0x4C,0x24,0x64,0x8B,0x4C,0x24,0x64,0x0F,0xB6,0xC9,0x88,0x4F,0x10,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0x33,0xD2,0x45,0x33,0xC0,0x41,0xB9,0x01,0x00,0x00,0x00,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x60,0x89,0x54,0x24,0x5C,0x89,0x54,0x24,0x5C,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x5C,0x83,0xC9,0x01,0x88,0x4C,0x24,0x5C,0x8B,0x4C,0x24,0x5C,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x60,0x0F,0xB6,0x4C,0x24,0x60,0x83,0xC9,0x08,0x88,0x4C,0x24,0x60,0x8B,0x4C,0x24,0x60,0x0F,0xB6,0xC9,0x88,0x4F,0x11,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0x33,0xD2,0x41,0xB8,0x01,0x00,0x00,0x00,0x45,0x33,0xC9,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x58,0x89,0x54,0x24,0x54,0x89,0x54,0x24,0x54,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x54,0x83,0xC9,0x01,0x88,0x4C,0x24,0x54,0x8B,0x4C,0x24,0x54,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x58,0x0F,0xB6,0x4C,0x24,0x58,0x83,0xC9,0x04,0x88,0x4C,0x24,0x58,0x8B,0x4C,0x24,0x58,0x0F,0xB6,0xC9,0x88,0x4F,0x12,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0x33,0xD2,0x41,0xB8,0x01,0x00,0x00,0x00,0x41,0xB9,0x01,0x00,0x00,0x00,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x50,0x89,0x54,0x24,0x4C,0x89,0x54,0x24,0x48,0x89,0x54,0x24,0x48,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x48,0x83,0xC9,0x01,0x88,0x4C,0x24,0x48,0x8B,0x4C,0x24,0x48,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x4C,0x0F,0xB6,0x4C,0x24,0x4C,0x83,0xC9,0x04,0x88,0x4C,0x24,0x4C,0x8B,0x4C,0x24,0x4C,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x50,0x0F,0xB6,0x4C,0x24,0x50,0x83,0xC9,0x08,0x88,0x4C,0x24,0x50,0x8B,0x4C,0x24,0x50,0x0F,0xB6,0xC9,0x88,0x4F,0x13,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xBA,0x01,0x00,0x00,0x00,0x45,0x33,0xC0,0x45,0x33,0xC9,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x44,0x89,0x54,0x24,0x44,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x44,0x83,0xC9,0x01,0x88,0x4C,0x24,0x44,0x0F,0xB6,0x4C,0x24,0x44,0x83,0xC9,0x02,0x88,0x4C,0x24,0x44,0x8B,0x4C,0x24,0x44,0x0F,0xB6,0xC9,0x88,0x4F,0x14,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xBA,0x01,0x00,0x00,0x00,0x45,0x33,0xC0,0x41,0xB9,0x01,0x00,0x00,0x00,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x40,0x89,0x54,0x24,0x3C,0x89,0x54,0x24,0x3C,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x3C,0x83,0xC9,0x01,0x88,0x4C,0x24,0x3C,0x0F,0xB6,0x4C,0x24,0x3C,0x83,0xC9,0x02,0x88,0x4C,0x24,0x3C,0x8B,0x4C,0x24,0x3C,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x40,0x0F,0xB6,0x4C,0x24,0x40,0x83,0xC9,0x08,0x88,0x4C,0x24,0x40,0x8B,0x4C,0x24,0x40,0x0F,0xB6,0xC9,0x88,0x4F,0x15,0x48,0x8B,0xC6,0x48,0x8B,0x48,0x08,0xBA,0x01,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0x45,0x33,0xC9,0xFF,0x50,0x18,0x0F,0xB6,0xC8,0x33,0xD2,0x89,0x54,0x24,0x38,0x89,0x54,0x24,0x34,0x89,0x54,0x24,0x30,0x89,0x54,0x24,0x30,0x85,0xC9,0x74,0x0C,0x0F,0xB6,0x4C,0x24,0x30,0x83,0xC9,0x01,0x88,0x4C,0x24,0x30,0x8B,0x4C,0x24,0x30,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x34,0x0F,0xB6,0x4C,0x24,0x34,0x83,0xC9,0x04,0x88,0x4C,0x24,0x34,0x8B,0x4C,0x24,0x34,0x0F,0xB6,0xC9,0x88,0x4C,0x24,0x38,0x0F,0xB6,0x4C,0x24,0x38,0x83,0xC9,0x08,0x88,0x4C,0x24,0x38,0x8B,0x4C,0x24,0x38,0x0F,0xB6,0xC9,0x88,0x4F,0x16,0x48,0x8B,0x4E,0x08,0xBA,0x01,0x00,0x00,0x00,0x41,0xB8,0x01,0x00,0x00,0x00,0x41,0xB9,0x01,0x00,0x00,0x00,0xFF,0x56,0x18,0x0F,0xB6,0xC0,0x33,0xD2,0x89,0x54,0x24,0x2C,0x89,0x54,0x24,0x28,0x89,0x54,0x24,0x24,0x89,0x54,0x24,0x24,0x85,0xC0,0x74,0x0C,0x0F,0xB6,0x44,0x24,0x24,0x83,0xC8,0x01,0x88,0x44,0x24,0x24,0x0F,0xB6,0x44,0x24,0x24,0x83,0xC8,0x02,0x88,0x44,0x24,0x24,0x8B,0x44,0x24,0x24,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x28,0x0F,0xB6,0x44,0x24,0x28,0x83,0xC8,0x04,0x88,0x44,0x24,0x28,0x8B,0x44,0x24,0x28,0x0F,0xB6,0xC0,0x88,0x44,0x24,0x2C,0x0F,0xB6,0x44,0x24,0x2C,0x83,0xC8,0x08,0x88,0x44,0x24,0x2C,0x8B,0x44,0x24,0x2C,0x0F,0xB6,0xC0,0x88,0x47,0x17,0x48,0x8B,0xC7,0x48,0x83,0xC4,0x68,0x5E,0x5F,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
; function: BitMatrix<N8,N4,byte> table(TernaryLogic:byte op)
; location: [7FFDDBEC6560h, 7FFDDBEC65A5h]
0000h push rsi                      ; PUSH(Push_r64) [RSI]                                 encoding(1 byte ) = 56
0001h sub rsp,30h                   ; SUB(Sub_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 ec 30
0005h xor eax,eax                   ; XOR(Xor_r32_rm32) [EAX,EAX]                          encoding(2 bytes) = 33 c0
0007h mov [rsp+28h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 28
000ch mov [rsp+20h],rax             ; MOV(Mov_rm64_r64) [mem(64u,RSP:br,SS:sr),RAX]        encoding(5 bytes) = 48 89 44 24 20
0011h mov rsi,rcx                   ; MOV(Mov_r64_rm64) [RSI,RCX]                          encoding(3 bytes) = 48 8b f1
0014h mov byte ptr [rsp+28h],0      ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(5 bytes) = c6 44 24 28 00
0019h mov byte ptr [rsp+20h],0      ; MOV(Mov_rm8_imm8) [mem(8u,RSP:br,SS:sr),0h:imm8]     encoding(5 bytes) = c6 44 24 20 00
001eh movzx ecx,dl                  ; MOVZX(Movzx_r32_rm8) [ECX,DL]                        encoding(3 bytes) = 0f b6 ca
0021h call 7FFDDBEC6200h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFFCA0h:jmp64]        encoding(5 bytes) = e8 7a fc ff ff
0026h mov rdx,rax                   ; MOV(Mov_r64_rm64) [RDX,RAX]                          encoding(3 bytes) = 48 8b d0
0029h mov rcx,rsi                   ; MOV(Mov_r64_rm64) [RCX,RSI]                          encoding(3 bytes) = 48 8b ce
002ch movsx r8,byte ptr [rsp+28h]   ; MOVSX(Movsx_r64_rm8) [R8,mem(8i,RSP:br,SS:sr)]       encoding(6 bytes) = 4c 0f be 44 24 28
0032h movsx r9,byte ptr [rsp+20h]   ; MOVSX(Movsx_r64_rm8) [R9,mem(8i,RSP:br,SS:sr)]       encoding(6 bytes) = 4c 0f be 4c 24 20
0038h call 7FFDDBEC4E60h            ; CALL(Call_rel32_64) [FFFFFFFFFFFFE900h:jmp64]        encoding(5 bytes) = e8 c3 e8 ff ff
003dh mov rax,rsi                   ; MOV(Mov_r64_rm64) [RAX,RSI]                          encoding(3 bytes) = 48 8b c6
0040h add rsp,30h                   ; ADD(Add_rm64_imm8) [RSP,30h:imm64]                   encoding(4 bytes) = 48 83 c4 30
0044h pop rsi                       ; POP(Pop_r64) [RSI]                                   encoding(1 byte ) = 5e
0045h ret                           ; RET(Retnq)                                           encoding(1 byte ) = c3
; static ReadOnlySpan<byte> tableBytes => new byte[70]{0x56,0x48,0x83,0xEC,0x30,0x33,0xC0,0x48,0x89,0x44,0x24,0x28,0x48,0x89,0x44,0x24,0x20,0x48,0x8B,0xF1,0xC6,0x44,0x24,0x28,0x00,0xC6,0x44,0x24,0x20,0x00,0x0F,0xB6,0xCA,0xE8,0x7A,0xFC,0xFF,0xFF,0x48,0x8B,0xD0,0x48,0x8B,0xCE,0x4C,0x0F,0xBE,0x44,0x24,0x28,0x4C,0x0F,0xBE,0x4C,0x24,0x20,0xE8,0xC3,0xE8,0xFF,0xFF,0x48,0x8B,0xC6,0x48,0x83,0xC4,0x30,0x5E,0xC3};
----------------------------------------------------------------------------------------------------------------------------------------------------------------
