//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class asmd_opcodepartition
    {
        public static ReadOnlySpan<byte> Create_ᐤ32iᐤ  =>  new byte[360]{0x57,0x56,0x53,0x48,0x81,0xec,0x80,0x00,0x00,0x00,0xc5,0xf8,0x77,0x48,0x8b,0xf1,0x48,0x8d,0x7c,0x24,0x20,0xb9,0x18,0x00,0x00,0x00,0x33,0xc0,0xf3,0xab,0x48,0x8b,0xce,0x48,0x8b,0xd9,0x8b,0xf2,0x48,0x8d,0x4c,0x24,0x20,0xc5,0xf8,0x57,0xc0,0xc5,0xfa,0x7f,0x01,0xc5,0xfa,0x7f,0x41,0x10,0xc5,0xfa,0x7f,0x41,0x20,0xc5,0xfa,0x7f,0x41,0x30,0xc5,0xfa,0x7f,0x41,0x40,0xc5,0xfa,0x7f,0x41,0x50,0x48,0xb9,0xa0,0x5f,0xa9,0xad,0xf9,0x7f,0x00,0x00,0xba,0x01,0x00,0x00,0x00,0xe8,0xd0,0x06,0x13,0x5e,0x48,0x83,0xc0,0x10,0xba,0x01,0x00,0x00,0x00,0x48,0x8d,0x4c,0x24,0x70,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x63,0xd6,0x48,0xb9,0x68,0xbc,0x70,0xaf,0xf9,0x7f,0x00,0x00,0xe8,0xaa,0x06,0x13,0x5e,0x48,0x8d,0x50,0x10,0x8b,0x48,0x08,0x48,0x8d,0x44,0x24,0x20,0x48,0x89,0x10,0x89,0x48,0x08,0x48,0x63,0xd6,0x48,0xb9,0x30,0xbf,0x70,0xaf,0xf9,0x7f,0x00,0x00,0xe8,0x86,0x06,0x13,0x5e,0x48,0x8d,0x50,0x10,0x8b,0x48,0x08,0x48,0x8d,0x44,0x24,0x30,0x48,0x89,0x10,0x89,0x48,0x08,0x48,0x63,0xd6,0x48,0xb9,0xf8,0xc1,0x70,0xaf,0xf9,0x7f,0x00,0x00,0xe8,0x62,0x06,0x13,0x5e,0x48,0x8d,0x50,0x10,0x8b,0x48,0x08,0x48,0x8d,0x44,0x24,0x40,0x48,0x89,0x10,0x89,0x48,0x08,0x48,0x63,0xd6,0x48,0xb9,0xc0,0xc4,0x70,0xaf,0xf9,0x7f,0x00,0x00,0xe8,0x3e,0x06,0x13,0x5e,0x48,0x8d,0x50,0x10,0x8b,0x48,0x08,0x48,0x8d,0x44,0x24,0x50,0x48,0x89,0x10,0x89,0x48,0x08,0x48,0x63,0xd6,0x48,0xb9,0x88,0xc7,0x70,0xaf,0xf9,0x7f,0x00,0x00,0xe8,0x1a,0x06,0x13,0x5e,0x48,0x8d,0x50,0x10,0x8b,0x40,0x08,0x48,0x8d,0x4c,0x24,0x60,0x48,0x89,0x11,0x89,0x41,0x08,0x48,0x8b,0xfb,0x48,0x8d,0x74,0x24,0x20,0xe8,0xab,0xf6,0x12,0x5e,0x48,0xa5,0xe8,0xa4,0xf6,0x12,0x5e,0x48,0xa5,0xe8,0x9d,0xf6,0x12,0x5e,0x48,0xa5,0xe8,0x96,0xf6,0x12,0x5e,0x48,0xa5,0xe8,0x8f,0xf6,0x12,0x5e,0x48,0xa5,0xe8,0x88,0xf6,0x12,0x5e,0x48,0xa5,0x48,0x8b,0xc3,0x48,0x81,0xc4,0x80,0x00,0x00,0x00,0x5b,0x5e,0x5f,0xc3};

        public static ReadOnlySpan<byte> Include_ᐤOpCodePartitonerᕀinㆍInstructionExpressionᕀinᐤ  =>  new byte[63]{0xc5,0xf8,0x77,0x66,0x90,0x8b,0x02,0x48,0x8b,0x11,0x48,0x63,0xc0,0x48,0xc1,0xe0,0x06,0x48,0x03,0xc2,0xc4,0xc1,0x7a,0x6f,0x00,0xc5,0xfa,0x7f,0x00,0xc4,0xc1,0x7a,0x6f,0x40,0x10,0xc5,0xfa,0x7f,0x40,0x10,0xc4,0xc1,0x7a,0x6f,0x40,0x20,0xc5,0xfa,0x7f,0x40,0x20,0xc4,0xc1,0x7a,0x6f,0x40,0x30,0xc5,0xfa,0x7f,0x40,0x30,0xc3};

        public static ReadOnlySpan<byte> Include_ᐤOpCodePartitonerᕀinㆍOpCodeExpressionᕀinᐤ  =>  new byte[48]{0xc5,0xf8,0x77,0x66,0x90,0x8b,0x02,0x48,0x83,0xc1,0x10,0x48,0x8b,0x11,0x8b,0x49,0x08,0x48,0x63,0xc0,0x48,0xc1,0xe0,0x05,0x48,0x03,0xc2,0xc4,0xc1,0x7a,0x6f,0x00,0xc5,0xfa,0x7f,0x00,0xc4,0xc1,0x7a,0x6f,0x40,0x10,0xc5,0xfa,0x7f,0x40,0x10,0xc3};

        public static ReadOnlySpan<byte> Include_ᐤMnemonicExpressionᕀinᐤ  =>  new byte[53]{0xc5,0xf8,0x77,0x66,0x90,0x48,0x8d,0x41,0x20,0x4c,0x8b,0x00,0x8b,0x40,0x08,0x48,0x83,0xc1,0x50,0x48,0x8b,0x01,0x8b,0x49,0x08,0x8b,0x08,0x44,0x8d,0x49,0x01,0x44,0x89,0x08,0x48,0x63,0xc1,0x48,0xc1,0xe0,0x04,0x49,0x03,0xc0,0xc5,0xfa,0x6f,0x02,0xc5,0xfa,0x7f,0x00,0xc3};

        public static ReadOnlySpan<byte> Include_ᐤOpCodePartitonerㆍMnemonicExpressionᕀinᐤ  =>  new byte[168]{0xc5,0xf8,0x77,0x66,0x90,0x89,0x54,0x24,0x10,0x48,0x8d,0x41,0x50,0x48,0x8b,0x10,0x8b,0x40,0x08,0x8b,0x02,0x85,0xc0,0x7e,0x65,0x48,0x8d,0x51,0x20,0x4c,0x8b,0x0a,0x8b,0x52,0x08,0x48,0x8d,0x51,0x50,0x48,0x8b,0x12,0x8d,0x50,0xff,0x48,0x63,0xd2,0x48,0xc1,0xe2,0x04,0x49,0x03,0xd1,0xc4,0xc1,0x79,0x10,0x00,0xc5,0xf9,0x74,0x02,0xc5,0xf9,0xd7,0xd0,0x81,0xfa,0xff,0xff,0x00,0x00,0x0f,0x94,0xc2,0x0f,0xb6,0xd2,0x85,0xd2,0x75,0x53,0x48,0x8d,0x51,0x20,0x4c,0x8b,0x0a,0x8b,0x52,0x08,0x48,0x83,0xc1,0x50,0x48,0x8b,0x11,0x8d,0x48,0x01,0x89,0x0a,0x48,0x63,0xc0,0x48,0xc1,0xe0,0x04,0x49,0x03,0xc1,0xc4,0xc1,0x7a,0x6f,0x00,0xc5,0xfa,0x7f,0x00,0xc3,0x48,0x8d,0x51,0x20,0x4c,0x8b,0x0a,0x8b,0x52,0x08,0x48,0x8d,0x51,0x50,0x48,0x8b,0x12,0x8d,0x48,0x01,0x89,0x0a,0x48,0x63,0xc0,0x48,0xc1,0xe0,0x04,0x49,0x03,0xc1,0xc4,0xc1,0x7a,0x6f,0x00,0xc5,0xfa,0x7f,0x00,0xc3};

        public static ReadOnlySpan<byte> Include_ᐤOpCodePartitonerᕀinㆍCpuidExpressionᕀinᐤ  =>  new byte[37]{0xc5,0xf8,0x77,0x66,0x90,0x48,0x83,0xc1,0x30,0x48,0x8b,0x01,0x8b,0x49,0x08,0x8b,0x12,0x48,0x63,0xd2,0x48,0xc1,0xe2,0x04,0x48,0x03,0xc2,0xc4,0xc1,0x7a,0x6f,0x00,0xc5,0xfa,0x7f,0x00,0xc3};

        public static ReadOnlySpan<byte> Include_ᐤOpCodePartitonerㆍOperatingModeᕀ8uᕀinᐤ  =>  new byte[26]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0xc1,0x40,0x48,0x8b,0x01,0x8b,0x49,0x08,0x41,0x0f,0xb6,0x08,0x48,0x63,0xd2,0x88,0x0c,0x10,0xc3};

        public static ReadOnlySpan<byte> Mnemonic_ᐤ32iᐤ  =>  new byte[26]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0xc1,0x20,0x48,0x8b,0x01,0x8b,0x49,0x08,0x48,0x63,0xd2,0x48,0xc1,0xe2,0x04,0x48,0x03,0xc2,0xc3};

        public static ReadOnlySpan<byte> OpCode_ᐤ32iᐤ  =>  new byte[26]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0xc1,0x10,0x48,0x8b,0x01,0x8b,0x49,0x08,0x48,0x63,0xd2,0x48,0xc1,0xe2,0x05,0x48,0x03,0xc2,0xc3};

        public static ReadOnlySpan<byte> Mode_ᐤ32iᐤ  =>  new byte[22]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x83,0xc1,0x40,0x48,0x8b,0x01,0x8b,0x49,0x08,0x48,0x63,0xd2,0x48,0x03,0xc2,0xc3};

        public static ReadOnlySpan<byte> Instruction_ᐤ32iᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x01,0x48,0x63,0xd2,0x48,0xc1,0xe2,0x06,0x48,0x03,0xc2,0xc3};

        public static ReadOnlySpan<byte> group_ᐤMnemonicExpressionᐤ  =>  new byte[47]{0x48,0x83,0xec,0x28,0xc5,0xf8,0x77,0xc5,0xfa,0x6f,0x02,0xc5,0xfa,0x7f,0x44,0x24,0x08,0xc5,0xfa,0x6f,0x44,0x24,0x08,0xc5,0xfa,0x7f,0x44,0x24,0x18,0xc5,0xfa,0x6f,0x44,0x24,0x18,0xc5,0xfa,0x7f,0x01,0x48,0x8b,0xc1,0x48,0x83,0xc4,0x28,0xc3};

    }
}
