//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class seed_bitconvert
    {
        public static ReadOnlySpan<byte> GetBytes_gᐸ8uᐳᐤ8uᕀinᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x11,0xc7,0x41,0x08,0x01,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> GetBytes_gᐸ16uᐳᐤ16uᕀinᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x11,0xc7,0x41,0x08,0x02,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> GetBytes_gᐸ32uᐳᐤ32uᕀinᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x11,0xc7,0x41,0x08,0x04,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> GetBytes_gᐸ64uᐳᐤ64uᕀinᐤ  =>  new byte[19]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x89,0x11,0xc7,0x41,0x08,0x08,0x00,0x00,0x00,0x48,0x8b,0xc1,0xc3};

        public static ReadOnlySpan<byte> GetBytes_gᐸ8uᐳᐤuspan8uㆍ32iㆍ32iᐤ  =>  new byte[49]{0x48,0x83,0xec,0x28,0x90,0x41,0x8b,0xc0,0x45,0x8b,0xd1,0x49,0x03,0xc2,0x44,0x8b,0x52,0x08,0x49,0x3b,0xc2,0x77,0x18,0x48,0x8b,0x02,0x49,0x63,0xd0,0x48,0x03,0xc2,0x48,0x89,0x01,0x44,0x89,0x49,0x08,0x48,0x8b,0xc1,0x48,0x83,0xc4,0x28,0xc3,0xe8,0xe4};

        public static ReadOnlySpan<byte> GetBytes_gᐸ16uᐳᐤuspan16uㆍ32iㆍ32iᐤ  =>  new byte[57]{0x48,0x83,0xec,0x28,0x90,0x41,0x8b,0xc0,0x45,0x8b,0xd1,0x49,0x03,0xc2,0x44,0x8b,0x52,0x08,0x49,0x3b,0xc2,0x77,0x23,0x48,0x8b,0x02,0x49,0x63,0xd0,0x48,0x8d,0x04,0x50,0x41,0x6b,0xd1,0x02,0x70,0x0e,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8b,0xc1,0x48,0x83,0xc4,0x28,0xc3,0xe8,0x16,0x37,0xa2};

        public static ReadOnlySpan<byte> GetBytes_gᐸ32uᐳᐤuspan32uㆍ32iㆍ32iᐤ  =>  new byte[57]{0x48,0x83,0xec,0x28,0x90,0x41,0x8b,0xc0,0x45,0x8b,0xd1,0x49,0x03,0xc2,0x44,0x8b,0x52,0x08,0x49,0x3b,0xc2,0x77,0x23,0x48,0x8b,0x02,0x49,0x63,0xd0,0x48,0x8d,0x04,0x90,0x41,0x6b,0xd1,0x04,0x70,0x0e,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8b,0xc1,0x48,0x83,0xc4,0x28,0xc3,0xe8,0xb6,0x36,0xa2};

        public static ReadOnlySpan<byte> GetBytes_gᐸ64uᐳᐤuspan64uㆍ32iㆍ32iᐤ  =>  new byte[57]{0x48,0x83,0xec,0x28,0x90,0x41,0x8b,0xc0,0x45,0x8b,0xd1,0x49,0x03,0xc2,0x44,0x8b,0x52,0x08,0x49,0x3b,0xc2,0x77,0x23,0x48,0x8b,0x02,0x49,0x63,0xd0,0x48,0x8d,0x04,0xd0,0x41,0x6b,0xd1,0x08,0x70,0x0e,0x48,0x89,0x01,0x89,0x51,0x08,0x48,0x8b,0xc1,0x48,0x83,0xc4,0x28,0xc3,0xe8,0x56,0x36,0xa2};

        public static ReadOnlySpan<byte> GetBytes_gᐸ8uᐳᐤ8uᕀinㆍspan8uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x02,0x0f,0xb6,0x11,0x88,0x10,0xc3};

        public static ReadOnlySpan<byte> GetBytes_gᐸ16uᐳᐤ16uᕀinㆍspan8uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x02,0x0f,0xb7,0x11,0x66,0x89,0x10,0xc3};

        public static ReadOnlySpan<byte> GetBytes_gᐸ32uᐳᐤ32uᕀinㆍspan8uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x02,0x8b,0x11,0x89,0x10,0xc3};

        public static ReadOnlySpan<byte> GetBytes_gᐸ64uᐳᐤ64uᕀinㆍspan8uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0x02,0x48,0x8b,0x11,0x48,0x89,0x10,0xc3};

        public static ReadOnlySpan<byte> ToInt16_ᐤuspan8uㆍ32iᐤ  =>  new byte[49]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x01,0x8b,0x49,0x08,0x3b,0xd1,0x77,0x16,0x2b,0xca,0x48,0x63,0xd2,0x48,0x03,0xc2,0x83,0xf9,0x02,0x7c,0x0f,0x48,0x0f,0xbf,0x00,0x48,0x83,0xc4,0x28,0xc3,0xe8,0xfe,0x0e,0xde,0xfd,0xcc,0xb9,0x28,0x00,0x00,0x00,0xe8};

        public static ReadOnlySpan<byte> ToUInt16_ᐤuspan8uㆍ32iᐤ  =>  new byte[49]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x01,0x8b,0x49,0x08,0x3b,0xd1,0x77,0x15,0x2b,0xca,0x48,0x63,0xd2,0x48,0x03,0xc2,0x83,0xf9,0x02,0x7c,0x0e,0x0f,0xb7,0x00,0x48,0x83,0xc4,0x28,0xc3,0xe8,0xaf,0x0e,0xde,0xfd,0xcc,0xb9,0x28,0x00,0x00,0x00,0xe8,0x44};

        public static ReadOnlySpan<byte> ToInt32_ᐤuspan8uㆍ32iᐤ  =>  new byte[45]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x01,0x8b,0x49,0x08,0x3b,0xd1,0x77,0x14,0x2b,0xca,0x48,0x63,0xd2,0x48,0x03,0xc2,0x83,0xf9,0x04,0x7c,0x0d,0x8b,0x00,0x48,0x83,0xc4,0x28,0xc3,0xe8,0x60,0x0e,0xde,0xfd,0xcc,0xb9,0x28,0x00,0x00};

        public static ReadOnlySpan<byte> ToUInt32_ᐤuspan8uㆍ32iᐤ  =>  new byte[45]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x01,0x8b,0x49,0x08,0x3b,0xd1,0x77,0x14,0x2b,0xca,0x48,0x63,0xd2,0x48,0x03,0xc2,0x83,0xf9,0x04,0x7c,0x0d,0x8b,0x00,0x48,0x83,0xc4,0x28,0xc3,0xe8,0x10,0x0e,0xde,0xfd,0xcc,0xb9,0x28,0x00,0x00};

        public static ReadOnlySpan<byte> ToInt64_ᐤuspan8uㆍ32iᐤ  =>  new byte[49]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x01,0x8b,0x49,0x08,0x3b,0xd1,0x77,0x15,0x2b,0xca,0x48,0x63,0xd2,0x48,0x03,0xc2,0x83,0xf9,0x08,0x7c,0x0e,0x48,0x8b,0x00,0x48,0x83,0xc4,0x28,0xc3,0xe8,0xbf,0x0d,0xde,0xfd,0xcc,0xb9,0x28,0x00,0x00,0x00,0xe8,0x54};

        public static ReadOnlySpan<byte> ToUInt64_ᐤuspan8uㆍ32iᐤ  =>  new byte[49]{0x48,0x83,0xec,0x28,0x90,0x48,0x8b,0x01,0x8b,0x49,0x08,0x3b,0xd1,0x77,0x15,0x2b,0xca,0x48,0x63,0xd2,0x48,0x03,0xc2,0x83,0xf9,0x08,0x7c,0x0e,0x48,0x8b,0x00,0x48,0x83,0xc4,0x28,0xc3,0xe8,0x6f,0x0d,0xde,0xfd,0xcc,0xb9,0x28,0x00,0x00,0x00,0xe8,0x04};

        public static ReadOnlySpan<byte> ToSingle_ᐤ32iᐤ  =>  new byte[20]{0x50,0xc5,0xf8,0x77,0x90,0x89,0x4c,0x24,0x04,0xc5,0xfa,0x10,0x44,0x24,0x04,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> ToSingle_ᐤ32uᐤ  =>  new byte[20]{0x50,0xc5,0xf8,0x77,0x90,0x89,0x4c,0x24,0x04,0xc5,0xfa,0x10,0x44,0x24,0x04,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> ToDouble_ᐤ64iᐤ  =>  new byte[19]{0x50,0xc5,0xf8,0x77,0x90,0x48,0x89,0x0c,0x24,0xc5,0xfb,0x10,0x04,0x24,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> ToDouble_ᐤ64uᐤ  =>  new byte[19]{0x50,0xc5,0xf8,0x77,0x90,0x48,0x89,0x0c,0x24,0xc5,0xfb,0x10,0x04,0x24,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> ToInt32_ᐤ32fᐤ  =>  new byte[20]{0x50,0xc5,0xf8,0x77,0x90,0xc5,0xfa,0x11,0x44,0x24,0x04,0x8b,0x44,0x24,0x04,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> ToUInt32_ᐤ32fᐤ  =>  new byte[20]{0x50,0xc5,0xf8,0x77,0x90,0xc5,0xfa,0x11,0x44,0x24,0x04,0x8b,0x44,0x24,0x04,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> ToInt64_ᐤ64fᐤ  =>  new byte[19]{0x50,0xc5,0xf8,0x77,0x90,0xc5,0xfb,0x11,0x04,0x24,0x48,0x8b,0x04,0x24,0x48,0x83,0xc4,0x08,0xc3};

        public static ReadOnlySpan<byte> ToUInt64_ᐤ64fᐤ  =>  new byte[19]{0x50,0xc5,0xf8,0x77,0x90,0xc5,0xfb,0x11,0x04,0x24,0x48,0x8b,0x04,0x24,0x48,0x83,0xc4,0x08,0xc3};

    }
}
