//-----------------------------------------------------------------------------
// Copyright   :  (c) Chris Moore, 2020
// License     :  MIT
//-----------------------------------------------------------------------------
namespace Z0.ByteCode
{
    using System;
    using System.Runtime.CompilerServices;


    public static class seed_bitreader
    {
        public static ReadOnlySpan<byte> bit_ᐤn0ㆍ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn1ㆍ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x83,0xe0,0x02,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn2ㆍ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x83,0xe0,0x04,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn3ㆍ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x83,0xe0,0x08,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn4ㆍ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x83,0xe0,0x10,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn5ㆍ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x83,0xe0,0x20,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn6ㆍ16uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x83,0xe0,0x40,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn7ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x80,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn8ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x01,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn9ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x02,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn10ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x04,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn11ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x08,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn12ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x10,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn13ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x20,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn14ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x40,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn15ㆍ16uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb7,0xc2,0x25,0x00,0x80,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn0ㆍ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn1ㆍ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x83,0xe0,0x02,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn2ㆍ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x83,0xe0,0x04,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn3ㆍ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x83,0xe0,0x08,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn4ㆍ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x83,0xe0,0x10,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn5ㆍ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x83,0xe0,0x20,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn6ㆍ32uᐤ  =>  new byte[11]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x83,0xe0,0x40,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn7ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x80,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn8ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x01,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn9ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x02,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn10ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x04,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn11ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x08,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn12ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x10,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn13ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x20,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn14ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x40,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn15ㆍ32uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x8b,0xc2,0x25,0x00,0x80,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn0ㆍ64uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn1ㆍ64uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x83,0xe0,0x02,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn2ㆍ64uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x83,0xe0,0x04,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn3ㆍ64uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x83,0xe0,0x08,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn4ㆍ64uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x83,0xe0,0x10,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn5ㆍ64uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x83,0xe0,0x20,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn6ㆍ64uᐤ  =>  new byte[13]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x83,0xe0,0x40,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn7ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x80,0x00,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn8ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x01,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn9ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x02,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn10ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x04,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn11ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x08,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn12ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x10,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn13ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x20,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn14ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x40,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn15ㆍ64uᐤ  =>  new byte[15]{0x0f,0x1f,0x44,0x00,0x00,0x48,0x8b,0xc2,0x48,0x25,0x00,0x80,0x00,0x00,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn0ㆍ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x83,0xe0,0x01,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn1ㆍ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x83,0xe0,0x02,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn2ㆍ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x83,0xe0,0x04,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn3ㆍ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x83,0xe0,0x08,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn4ㆍ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x83,0xe0,0x10,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn5ㆍ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x83,0xe0,0x20,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn6ㆍ8uᐤ  =>  new byte[12]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x83,0xe0,0x40,0xc3};

        public static ReadOnlySpan<byte> bit_ᐤn7ㆍ8uᐤ  =>  new byte[14]{0x0f,0x1f,0x44,0x00,0x00,0x0f,0xb6,0xc2,0x25,0x80,0x00,0x00,0x00,0xc3};

    }
}
