| M:Z0.BitMask.alteven``1                           | 
            <summary>
            Defines an alternating bit pattern 10 10...10
            </summary>
            <typeparam name="T">The primal unsigned type</typeparam>
        
| M:Z0.BitMask.altodd``1                            | 
            <summary>
            Defines an alternating bit pattern 01 01...01
            </summary>
            <typeparam name="T">The primal unsigned type</typeparam>
        
| M:Z0.BitMask.central``2(Z0.N8,``0,``1)            | 
            <summary>
            Defines a central bitmask over 8-bit segments with a parametric bit density
            D:[N2 | N4 | N6]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="t">A mask type representative</param>
            <typeparam name="D">The bit density type</typeparam>
            <typeparam name="T">The primal mask type</typeparam>
        
| M:Z0.BitMask.central``1(Z0.N8,Z0.N2,``0)          | 
            <summary>
            [00011000]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.central``1(Z0.N8,Z0.N4,``0)          | 
            <summary>
            [00111100]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.central``1(Z0.N8,Z0.N6,``0)          | 
            <summary>
            [01111110]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``2(Z0.CentralMask{Z0.N8,``0,``1})| 
            <summary>
            [00011000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.cjsb``1(Z0.N8,Z0.N2,Z0.N1,``0)       | 
            <summary>
            [10011001]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="cd">The central bit density</param>
            <param name="jsbd">The jsb bit density</param>
            <param name="t">The mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>CJSB := jsb | csb (8x2x1)</remarks>
        
| M:Z0.BitMask.cjsb``1(Z0.N8,Z0.N2,Z0.N2,``0)       | 
            <summary>
            [11011011]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="cd">The central bit density</param>
            <param name="jsbd">The jsb bit density</param>
            <param name="t">The mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>CJSB := jsb | csb (8x2x2)</remarks>
        
| M:Z0.BitMask.cjsb``1(Z0.N8,Z0.N4,Z0.N1,``0)       | 
            <summary>
            [10111101]
            </summary>
            <param name="f">The frequency selector</param>
            <param name="cd">The central bit density</param>
            <param name="t">The mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>CJSB := jsb | csb (8x4x1)</remarks>
        
| M:Z0.BitMask.hi64(System.Int32)                   | 
            <summary>
            Produces a sequence of enabled hi bits
            </summary>
            <param name="n">The number of bits to enable</param>
        
| M:Z0.BitMask.hi``1(System.Int32,``0)              | 
            <summary>
            Produces a sequence of n enabled bits in the index range [bitsize[T] - n, bitsize[T] - 1]
            </summary>
            <param name="n">The number of bits to enable</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask type</typeparam>
        
| M:Z0.BitMask.hi``1(``0)                           | 
            <summary>
            Produces a sequence of N enabled hi bits
            </summary>
            <param name="n">The number of bits to enable</param>
            <typeparam name="N">The bit count type</typeparam>
        
| M:Z0.BitMask.hi``2(``0,``1)                       | 
            <summary>
            Produces a sequence of n enabled hi bits
            </summary>
            <param name="n">The number of bits to enable</param>
            <typeparam name="T">The primal type</typeparam>
        
| M:Z0.BitMask.jsb``1(Z0.N8,Z0.N1,``0)              | 
            <summary>
            [10000001]
            </summary>
            <param name="f">The frequency selector</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>JSB := msb | lsb (8x1)</remarks>
        
| M:Z0.BitMask.jsb``1(Z0.N8,Z0.N2,``0)              | 
            <summary>
            [11000011]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>JSB := msb | lsb (8x2)</remarks>
        
| M:Z0.BitMask.jsb``1(Z0.N8,Z0.N3,``0)              | 
            <summary>
            [11100111]
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>JSB := msb | lsb (8x3)</remarks>
        
| M:Z0.BitMask.mask``1(Z0.JsbMask{Z0.N8,Z0.N1,``0}) | 
            <summary>
            [10000001]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.JsbMask{Z0.N8,Z0.N2,``0}) | 
            <summary>
            [11000011]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.JsbMask{Z0.N8,Z0.N3,``0}) | 
            <summary>
            [11100111]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lo64(System.Int32)                   | 
            <summary>
            Produces a sequence of n enabled bits, starting from index 0 and extending to index n - 1
            </summary>
            <typeparam name="N">The enabled bit count type</typeparam>
        
| M:Z0.BitMask.lo``1(System.Int32,``0)              | 
            <summary>
            Produces a sequence of N enabled bits, starting from index 0 and extending to index n - 1
            </summary>
        
| M:Z0.BitMask.lo``1(``0)                           | 
            <summary>
            Produces a sequence of N enabled bits, starting from index 0 and extending to index n - 1
            </summary>
            <param name="n">The bit count type representative</param>
            <typeparam name="N">The enabled bit count type</typeparam>
        
| M:Z0.BitMask.lo``2(``0,``1)                       | 
            <summary>
            Produces a sequence of N enabled bits, starting from index 0 and extending to index n - 1
            </summary>
            <param name="n">The number of bits to enable</param>
            <param name="t">A mask type representative</param>
            <typeparam name="N">The enabled bit count type</typeparam>
            <typeparam name="T">The mask type</typeparam>
        
| M:Z0.BitMask.blsmsk``1(``0)                       | 
            <summary>
            Logically equivalent to the composite operation (src-1) ^ src that enables the 
            lower bits of the source up to and including the least set bit
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitMask.blsmsk(System.Byte)                  | 
            <summary>
            unsigned int _blsmsk_u32 (unsigned int a) BLSMSK reg, reg/m32
            Logically equivalent to the composite operation (src-1) ^ src that enables the lower bits of the source up to and including the least set bit
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitMask.blsmsk(System.UInt16)                | 
            <summary>
            unsigned int _blsmsk_u32 (unsigned int a) BLSMSK reg, reg/m32
            Logically equivalent to the composite operation (src-1) ^ src that enables the lower bits of the source up to and including the least set bit
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitMask.blsmsk(System.UInt32)                | 
            <summary>
            unsigned int _blsmsk_u32 (unsigned int a) BLSMSK reg, reg/m32
            Logically equivalent to the composite operation (src-1) ^ src that enables the lower bits of the source up to and including the least set bit
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitMask.blsmsk(System.UInt64)                | 
            <summary>
            unsigned __int64 _blsmsk_u64 (unsigned __int64 a) BLSMSK reg, reg/m6
            Logically equivalent to the composite operation (src-1) ^ src that enables the lower bits of the source up to and including the least set bit
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitMask.lsb``2(``0,Z0.N2,Z0.N1,``1)          | 
            <summary>
            [01 01 ... 01]
            Defines a width-variant LSB pattern that repeats every 2 bits with density 1
            </summary>
            <param name="w">The pattern width</param>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="N">The width type</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``2(``0,Z0.N3,Z0.N1,``1)          | 
            <summary>
            [001 001 ... 001]
            Defines a width-variant LSB pattern that repeats every 3 bits with density 1
            </summary>
            <param name="w">The pattern width</param>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="N">The width type</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N1,Z0.N1,``0)              | 
            <summary>
            [00....01]    
            The least bit, relative to the data type, is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N2,Z0.N1,``0)              | 
            <summary>
            [01]
            The least bit of each 2-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>Creates a mask where the least significant bit out of each two bits is enabled</remarks>
        
| M:Z0.BitMask.lsb``1(Z0.N4,Z0.N1,``0)              | 
            <summary>
            [0001]
            The least bit of each 4-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
            <remarks>Creates a mask where the least significant bit out of each four bits is enabled</remarks>
        
| M:Z0.BitMask.lsb``1(Z0.N8,Z0.N1,``0)              | 
            <summary>
            [00000001]
            The least bit of each 8-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N16,Z0.N1,``0)             | 
            <summary>
            [00000000 00000001]
            The least bit of each 16-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N8,Z0.N2,``0)              | 
            <summary>
            [00000011]
            The least 2 bits of each 8-bits are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N8,Z0.N3,``0)              | 
            <summary>
            [00000111]
            The least 3 bits of each 8-bits are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N8,Z0.N4,``0)              | 
            <summary>
            [00001111]
            The least 4 bits of each 8-bits are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N8,Z0.N5,``0)              | 
            <summary>
            [00011111]
            The least 5 bits of each 8-bits are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N8,Z0.N6,``0)              | 
            <summary>
            [00111111]
            The least 6 bits of each 8-bits are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb``1(Z0.N8,Z0.N7,``0)              | 
            <summary>
            [01111111]
            The least 7 bits of each 8-bits are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb64(Z0.N16,Z0.N1)                  | 
            <summary>
            [00000000 00000001]
            The least bit of each 16-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.lsb(Z0.N32,Z0.N1,System.UInt32)      | 
            <summary>
            [00000000 00000000 00000000 0000001]
            The least bit is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask data type representative</param>
        
| M:Z0.BitMask.lsb64(Z0.N32,Z0.N1,System.UInt64)    | 
            <summary>
            [00000000 00000000 00000000 0000001]
            The least bit of each 32-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask data type representative</param>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N1,Z0.N1,``0}) | 
            <summary>
            [00000001]    
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N2,Z0.N1,``0}) | 
            <summary>
            [01]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N4,Z0.N1,``0}) | 
            <summary>
            [0001]
            The least bit of each 4-bit segment is enabled
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N8,Z0.N1,``0}) | 
            <summary>
            [00000001]
            The least bit of each 8-bit segment is enabled
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N16,Z0.N1,``0})| 
            <summary>
            [00000000 00000001]
            The least bit of each 16-bit segment is enabled
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N8,Z0.N2,``0}) | 
            <summary>
            [00000011]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N8,Z0.N3,``0}) | 
            <summary>
            [000000111]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N8,Z0.N4,``0}) | 
            <summary>
            [00000111]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N8,Z0.N5,``0}) | 
            <summary>
            [00011111]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N8,Z0.N6,``0}) | 
            <summary>
            [00111111]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.LsbMask{Z0.N8,Z0.N7,``0}) | 
            <summary>
            [01111111]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N1,Z0.N1,``0)              | 
            <summary>
            [1000...0000]
            The greatest bit, relative to the data type, is enabled   
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask data type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N2,Z0.N1,``0)              | 
            <summary>
            [10]
            The greatest bit of each 2-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N4,Z0.N1,``0)              | 
            <summary>
            [1000]
            The greatest bit of each 4-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N8,Z0.N1,``0)              | 
            <summary>
            [10000000]
            The greatest bit of each 8-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N16,Z0.N1,``0)             | 
            <summary>
            [10000000 00000000]
            The greatest bit of each 16-bit segment is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N8,Z0.N2,``0)              | 
            <summary>
            [11000000]
            The greatest 2 bits of each 8-bit segment are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N8,Z0.N3,``0)              | 
            <summary>
            [11100000]
            The greatest 3 bits of each 8-bit segment are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N8,Z0.N4,``0)              | 
            <summary>
            [11110000]
            The greatest 4 bits of each 8-bit segment are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N8,Z0.N5,``0)              | 
            <summary>
            [11111000]
            The greatest 5 bits of each 8-bit segment are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N8,Z0.N6,``0)              | 
            <summary>
            [11111100]
            The greatest 6 bits of each 8-bit segment are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb``1(Z0.N8,Z0.N7,``0)              | 
            <summary>
            [11111110]
            The greatest 7 bits of each 8-bit segment are enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N2,Z0.N1,``0}) | 
            <summary>
            [10]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N4,Z0.N1,``0}) | 
            <summary>
            [10001000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N8,Z0.N1,``0}) | 
            <summary>
            [10000000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N16,Z0.N1,``0})| 
            <summary>
            [10000000 00000000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N8,Z0.N2,``0}) | 
            <summary>
            [11000000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N8,Z0.N3,``0}) | 
            <summary>
            [11100000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N8,Z0.N4,``0}) | 
            <summary>
            [11110000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N8,Z0.N5,``0}) | 
            <summary>
            [11111000]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N8,Z0.N6,``0}) | 
            <summary>
            [11111100]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.MsbMask{Z0.N8,Z0.N7,``0}) | 
            <summary>
            [11111110]
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.msb(Z0.N64,Z0.N16,Z0.N1)             | 
            <summary>
            [10000000 00000000]
            The greatest bit of each 16-bit segment over 64 bits of data is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
        
| M:Z0.BitMask.msb64(Z0.N64,Z0.N32,Z0.N1)           | 
            <summary>
            [10000000 00000000 00000000 0000000]
            The greatest bit of each 32-bit segment over 64 bits of data is enabled
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.even``1(Z0.N2,Z0.N1,``0)             | 
            <summary>
            [01010101]    
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.even``1(Z0.N2,Z0.N2,``0)             | 
            <summary>
            [00110011]    
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.odd``1(Z0.N2,Z0.N1)                  | 
            <summary>
            [10101010]    
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.odd``1(Z0.N2,Z0.N2)                  | 
            <summary>
            [11001100]    
            </summary>
            <param name="f">The repetition frequency</param>
            <param name="d">The bit density</param>
            <param name="t">A mask type representative</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.ParityMask{Z0.N2,Z0.N1,``0}@,Z0.N0)| 
            <summary>
            [01010101]    
            </summary>
        
| M:Z0.BitMask.mask``1(Z0.ParityMask{Z0.N2,Z0.N1,``0}@,Z0.N1)| 
            <summary>
            [10101010]    
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| M:Z0.BitMask.mask``1(Z0.ParityMask{Z0.N2,Z0.N2,``0}@,Z0.N0)| 
            <summary>
            [00110011]    
            </summary>
        
| M:Z0.BitMask.mask``1(Z0.ParityMask{Z0.N2,Z0.N2,``0}@,Z0.N1)| 
            <summary>
            [11001100]    
            </summary>
            <param name="spec">The mask spec</param>
            <typeparam name="T">The mask data type</typeparam>
        
| T:Z0.CentralMask`3                                | 
            <summary>
            Defines a specification for producing Central-oriented masks
            </summary>
            <typeparam name="F">The repetition frequency type</typeparam>
            <typeparam name="D">The bit density type</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
| T:Z0.IndexMask`2                                  | 
            <summary>
            Defines a specification for producing an index-oriented mask
            </summary>
            <typeparam name="N">The byte-relative bit index</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
| T:Z0.JsbMask`3                                    | 
            <summary>
            Defines a specification for producing joint lsb/msb mask compositions
            </summary>
            <typeparam name="F">The repetition frequency type</typeparam>
            <typeparam name="D">The bit density type</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
| T:Z0.LsbMask`3                                    | 
            <summary>
            Defines a specification for producing LSB-oriented masks
            </summary>
            <typeparam name="F">The repetition frequency type</typeparam>
            <typeparam name="D">The bit density type</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
| T:Z0.MaskSpec                                     | 
            <summary>
            Defines a specification for producing classified bitmasks
            </summary>
        
| T:Z0.MsbMask`3                                    | 
            <summary>
            Defines a specification for producing MSB-oriented masks
            </summary>
            <typeparam name="F">The repetition frequency type</typeparam>
            <typeparam name="D">The bit density type</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
| T:Z0.ParityMask`3                                 | 
            <summary>
            Defines a specification for producing parity masks
            </summary>
            <typeparam name="F">The repetition frequency type</typeparam>
            <typeparam name="D">The bit density type</typeparam>
            <typeparam name="T">The mask data type</typeparam>
        
