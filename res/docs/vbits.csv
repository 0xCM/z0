Method      | Z0.VBits.bfly``1(Z0.N1,System.Runtime.Intrinsics.Vector128{``0})      | Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N2,System.Runtime.Intrinsics.Vector128{``0})      | Effects a butterfly permutation on the source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N4,System.Runtime.Intrinsics.Vector128{``0})      | Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments of each 16-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N8,System.Runtime.Intrinsics.Vector128{``0})      | Effects a butterfly permutation on the bit source that swaps the interior 8-bit segments of each 32-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N16,System.Runtime.Intrinsics.Vector128{``0})     | Effects a butterfly permutation on the source that swaps the interior 16-bit segments
Method      | Z0.VBits.bfly``1(Z0.N1,System.Runtime.Intrinsics.Vector256{``0})      | Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N2,System.Runtime.Intrinsics.Vector256{``0})      | Effects a butterfly permutation on the source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N4,System.Runtime.Intrinsics.Vector256{``0})      | Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments of each 16-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N8,System.Runtime.Intrinsics.Vector256{``0})      | Effects a butterfly permutation on the bit source that swaps the interior 8-bit segments of each 32-bit segment.
Method      | Z0.VBits.bfly``1(Z0.N16,System.Runtime.Intrinsics.Vector256{``0})     | Effects a butterfly permutation on the source that swaps the interior 16-bit segments
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector128{System.Byte})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector128{System.UInt16})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector128{System.UInt32})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector128{System.UInt64})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector128{System.Byte})| Effects a butterfly permutation on the source that swaps the interior 2-bit segments
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector128{System.UInt16})| Effects a butterfly permutation on the bit source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector128{System.UInt32})| Effects a butterfly permutation on the bit source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector128{System.UInt64})| Effects a butterfly permutation on the bit source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.vbfly(Z0.N4,System.Runtime.Intrinsics.Vector128{System.UInt16})| Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments
Method      | Z0.VBits.vbfly(Z0.N4,System.Runtime.Intrinsics.Vector128{System.UInt32})| Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments of each 16-bit segment.
Method      | Z0.VBits.vbfly(Z0.N4,System.Runtime.Intrinsics.Vector128{System.UInt64})| Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments of each 16-bit segment.
Method      | Z0.VBits.vbfly(Z0.N8,System.Runtime.Intrinsics.Vector128{System.UInt32})| Effects a butterfly permutation on the bit source that swaps the interior 8-bit segments
Method      | Z0.VBits.vbfly(Z0.N8,System.Runtime.Intrinsics.Vector128{System.UInt64})| Effects a butterfly permutation on the bit source that swaps the interior 8-bit segments of each 32-bit segment.
Method      | Z0.VBits.vbfly(Z0.N16,System.Runtime.Intrinsics.Vector128{System.UInt64})| Effects a butterfly permutation on the source that swaps the interior 16-bit segments
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector256{System.Byte})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector256{System.UInt16})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector256{System.UInt32})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N1,System.Runtime.Intrinsics.Vector256{System.UInt64})| Effects a butterfly permutation on the source that swaps the interior two bits of each 4-bit segment.
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector256{System.Byte})| Effects a butterfly permutation on the source that swaps the interior 2-bit segments
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector256{System.UInt16})| Effects a butterfly permutation on the bit source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector256{System.UInt32})| Effects a butterfly permutation on the bit source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.vbfly(Z0.N2,System.Runtime.Intrinsics.Vector256{System.UInt64})| Effects a butterfly permutation on the bit source that swaps the interior 2-bit segments of each 8-bit segment.
Method      | Z0.VBits.vbfly(Z0.N4,System.Runtime.Intrinsics.Vector256{System.UInt16})| Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments
Method      | Z0.VBits.vbfly(Z0.N4,System.Runtime.Intrinsics.Vector256{System.UInt32})| Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments of each 16-bit segment.
Method      | Z0.VBits.vbfly(Z0.N4,System.Runtime.Intrinsics.Vector256{System.UInt64})| Effects a butterfly permutation on the bit source that swaps the interior 4-bit segments of each 16-bit segment.
Method      | Z0.VBits.vbfly(Z0.N8,System.Runtime.Intrinsics.Vector256{System.UInt32})| Effects a butterfly permutation on the bit source that swaps the interior 8-bit segments
Method      | Z0.VBits.vbfly(Z0.N8,System.Runtime.Intrinsics.Vector256{System.UInt64})| Effects a butterfly permutation on the bit source that swaps the interior 8-bit segments of each 32-bit segment.
Method      | Z0.VBits.vbfly(Z0.N16,System.Runtime.Intrinsics.Vector256{System.UInt64})| Effects a butterfly permutation on the source that swaps the interior 16-bit segments
Method      | Z0.VBits.vbutterfly``1(System.Runtime.Intrinsics.Vector128{``0},System.Runtime.Intrinsics.Vector128{``0},System.Byte)| Effects a butterfly permutation on the source value, predicated on a supplied mask and shift amount
Method      | Z0.VBits.vbutterfly``1(System.Runtime.Intrinsics.Vector256{``0},System.Runtime.Intrinsics.Vector256{``0},System.Byte)| Effects a butterfly permutation on the source value, predicated on a supplied mask and shift amount
Method      | Z0.VBits.bitblend``1(System.Runtime.Intrinsics.Vector128{``0},System.Runtime.Intrinsics.Vector128{``0},System.Runtime.Intrinsics.Vector128{``0})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend``1(System.Runtime.Intrinsics.Vector256{``0},System.Runtime.Intrinsics.Vector256{``0},System.Runtime.Intrinsics.Vector256{``0})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector128{System.Byte},System.Runtime.Intrinsics.Vector128{System.Byte},System.Runtime.Intrinsics.Vector128{System.Byte})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector128{System.UInt16},System.Runtime.Intrinsics.Vector128{System.UInt16},System.Runtime.Intrinsics.Vector128{System.UInt16})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector128{System.UInt32},System.Runtime.Intrinsics.Vector128{System.UInt32},System.Runtime.Intrinsics.Vector128{System.UInt32})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector128{System.UInt64},System.Runtime.Intrinsics.Vector128{System.UInt64},System.Runtime.Intrinsics.Vector128{System.UInt64})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector256{System.Byte},System.Runtime.Intrinsics.Vector256{System.Byte},System.Runtime.Intrinsics.Vector256{System.Byte})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector256{System.UInt16},System.Runtime.Intrinsics.Vector256{System.UInt16},System.Runtime.Intrinsics.Vector256{System.UInt16})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector256{System.UInt32},System.Runtime.Intrinsics.Vector256{System.UInt32},System.Runtime.Intrinsics.Vector256{System.UInt32})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitblend(System.Runtime.Intrinsics.Vector256{System.UInt64},System.Runtime.Intrinsics.Vector256{System.UInt64},System.Runtime.Intrinsics.Vector256{System.UInt64})| Blends the left and right vectors at the bit-level as specified by the mask operand.
Method      | Z0.VBits.bitclear``1(System.Runtime.Intrinsics.Vector128{``0},System.Byte,System.Byte)| Clears a sequence of bits from each component
Method      | Z0.VBits.bitclear``1(System.Runtime.Intrinsics.Vector256{``0},System.Byte,System.Byte)| Clears a sequence of bits from each component
Method      | Z0.VMask.veven``3(Z0.N128,``0,``1,``2)                                | [01010101] | [00110011]
Method      | Z0.VMask.veven``3(Z0.N256,``0,``1,``2)                                | [01010101] | [00110011]
Method      | Z0.VMask.veven``1(Z0.N128,Z0.N2,Z0.N1,``0)                            | [01010101]
Method      | Z0.VMask.veven``1(Z0.N256,Z0.N2,Z0.N1,``0)                            | [01010101]
Method      | Z0.VMask.veven``1(Z0.N128,Z0.N2,Z0.N2,``0)                            | [00110011]
Method      | Z0.VMask.veven``1(Z0.N256,Z0.N2,Z0.N2,``0)                            | [00110011]
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N1,Z0.N1,``0)                             | [000...001]                The least bit, relative to the component, is enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N2,Z0.N1,``0)                             | [01]                The least bit of each 2-bit segment is enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N4,Z0.N1,``0)                             | [0001]            The least bit of each 4-bit segment is enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,Z0.N1,``0)                             | [00000001]            The least bit of each 8-bit segment is enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N16,Z0.N1,``0)                            | [00000000 00000001]            The least bit of each 16-bit segment is enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,Z0.N2,``0)                             | [00000011]            The least 2 bits of each 8-bits are enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,Z0.N3,``0)                             | [00000111]            The least 3 bits of each 8-bits are enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,Z0.N4,``0)                             | [00001111]            The least 4 bits of each 8-bits are enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,Z0.N5,``0)                             | [00011111]            The least 5 bits of each 8-bits are enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,Z0.N6,``0)                             | [00111111]            The least 6 bits of each 8-bits are enabled
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,Z0.N7,``0)                             | [01111111]
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N1,Z0.N1,``0)                             | [00....01]                The least bit of each component is enabled
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N2,Z0.N1,``0)                             | [01]                The least bit of each 2-bit segment is enabled
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N4,Z0.N1,``0)                             | [00010001]            The least bit of each 4-bit segment is enabled
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,Z0.N1,``0)                             | [00000001]            The least bit of each 8-bit segment is enabled
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N16,Z0.N1,``0)                            | [00000000 00000001]            The least significant bit out of each 16 bits is enabled
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,Z0.N2,``0)                             | [00000011]            The least significant 2 bits of each 8-bit segment are enabled
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,Z0.N3,``0)                             | [00000111]
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,Z0.N4,``0)                             | [00001111]
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,Z0.N5,``0)                             | [00011111]
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,Z0.N6,``0)                             | [00111111]
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,Z0.N7,``0)                             | [01111111]
Method      | Z0.VMask.vlsb``1(Z0.N128,Z0.N8,System.Byte,``0)                       | The f least significant bits of each 8 bit segment are enabled
Method      | Z0.VMask.vlsb``1(Z0.N256,Z0.N8,System.Byte,``0)                       | The f least significant bits of each 8 bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,``0)                                         | [100...000 ... 100...000]                The greatest bit of each component is enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N2,Z0.N1,``0)                             | [01]                The greatest bit of each 2-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N4,Z0.N1,``0)                             | [1000]            The greatest bit of each 4-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,Z0.N1,``0)                             | [10000000]            The greatest bit of each 8-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N16,Z0.N1,``0)                            | [10000000 00000000]            The greatest bit of each 16-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,Z0.N2,``0)                             | [11000000]            The 2 greatest bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,Z0.N3,``0)                             | [11100000]            The greatest 3 bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,Z0.N4,``0)                             | [11110000]            The greatest 4 bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,Z0.N5,``0)                             | [11111000]            The greatest 5 bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,Z0.N6,``0)                             | [11111100]            The greatest 6 bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,Z0.N7,``0)                             | [11111110]            The greatest 7 bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N128,Z0.N8,System.Byte,``0)                       | The f most significant bits of each 8 bits are enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,``0)                                         | [100...00]                The greatest bit of each component is enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N2,Z0.N1,``0)                             | [01                The greatest bit of each 2-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N4,Z0.N1,``0)                             | [1000]            The greatest bit of each 4-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,Z0.N1,``0)                             | [10000000]            The greatest bit of each 8-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N16,Z0.N1,``0)                            | [10000000 00000000]            The greatest bit of each 16-bit segment is enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,Z0.N2,``0)                             | [11000000]            The 2 greatest bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,Z0.N3,``0)                             | [11100000]            The 3 greatest bits of each 8-bit segment are enabled
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,Z0.N4,``0)                             | [11110000]
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,Z0.N5,``0)                             | [11111000]
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,Z0.N6,``0)                             | [11111100]
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,Z0.N7,``0)                             | [11111110]
Method      | Z0.VMask.vmsb``1(Z0.N256,Z0.N8,System.Byte,``0)                       | Creates a mask where f most significant bits of each 8 bits are enabled
