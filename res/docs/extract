| T:Z0.ExtractEvents                                | 
            <summary>
            Defines extraction-related events
            </summary>
        
| T:Z0.ByteParser`1                                 | 
            <summary>
            Parses sequences of bytes, governed by patterns supplied upon initialization 
            </summary>
        
| T:Z0.ByteParserState                              | 
            <summary>
            Defines the potential byte parser states
            </summary>
        
| F:Z0.EncodingPatternKind.Zx7                      | 
            <summary>
            Identifies the pattern 00 00 00 00 00 00 00
            </summary>
        
| F:Z0.EncodingPatternKind.CALL32_INTR              | 
            <summary>
            Identifies the partial pattern e8 ?? ?? ?? ?? cc
            </summary>
        
| T:Z0.MemberExtractor                              | 
            <summary>
            Extracts operations from an api host
            </summary>
        
| M:Z0.MemberExtractor.Extract(Z0.ApiMember)        | 
            <summary>
            Extracts encoded content that defines executable code for a located member
            </summary>
            <param name="src">The source member</param>
        
| M:Z0.MemberExtractor.Extract(Z0.IApiHost)         | 
            <summary>
            Extracts encoded content for all operations defined by a host
            </summary>
            <param name="src">The source member</param>
        
| F:Z0.MemberExtractParser.Zx7Cut                   | 
            <summary>
            The default length of the segment removed from the tail of the parsed byte array when the term code is Zx7
            </summary>
        
| P:Z0.Asm.IBytePatternSet.FullPatternCount         | 
            <summary>
            The number of non-partial patterns in the set
            </summary>
        
| T:Z0.IExtractParser                               | 
            <summary>
            Characterizes a service that consumes raw extract bytes and emits, hopefully,
            a sequence of bytes that defines member content exactly, with no more nor less
            bits than needed
            </summary>    
        
| M:Z0.IExtractParser.Parse(Z0.ExtractedCode,System.Int32)| 
            <summary>
            Parses a single extract
            </summary>
            <param name="src"></param>
            <param name="seq"></param>
        
| M:Z0.IExtractParser.Parse(Z0.ExtractedCode[])     | 
            <summary>
            Parses an extract sequence, returning a comprehensive result set that includes
            outcomes of successful parse operations and any unfortunate failures
            </summary>
            <param name="src">The source extracts</param>
        
