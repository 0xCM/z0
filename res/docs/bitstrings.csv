Method      | Z0.BitString.bitchars``1(``0,System.Span{System.Char},System.Int32)   | Constructs a sequence of n characters {ci} := [c_n-1,..., c_0]            over the domain {'0','1'} according to whether the bit in the i'th             position of the source is respecively disabled/enabled
Method      | Z0.BitString.bitchars``1(``0@)                                        | Constructs a sequence of n characters {ci} := [c_n-1,..., c_0]            over the domain {'0','1'} according to whether the bit in the i'th             position of the source is respecively disabled/enabled
Method      | Z0.BitString.bitchars``1(System.ReadOnlySpan{``0},System.Nullable{System.Int32})| Converts a span of primal values to a span of characters, each of which represent a bit
Method      | Z0.BitString.normalize(System.String)                                 | Removes characters related to formating/presentation that do not impact the value of the bitstring literal;            leading zeroes, however, are considered part of the literal and are not removed
Method      | Z0.BitString.assemble(System.String[])                                | Assembles a bistring given parts ordered from lo to hi
Method      | Z0.BitString.replicate``1(``0,System.Int32)                           | Constructs a bitstring from a pattern replicated a specified number of times
Method      | Z0.BitString.map``1(Z0.BitString,System.Func{Z0.bit,``0},System.Span{``0})| Projects a bitstring onto a caller-allocated span via a supplied transformation
Property    | Z0.BitString.Empty                                                    | Defines the canonical emtpy bitstring of 0 length
Property    | Z0.BitString.Item(System.Int32)                                       | Queries/manipulates bit at specified index
Property    | Z0.BitString.Item(System.Int32,System.Int32)                          | Extracts a substring determined by start/end indices
Property    | Z0.BitString.Item(System.Range)                                       | Extracts a substring determined by a range
Property    | Z0.BitString.BitSeq                                                   | The (unpacked) sequence of bits represented by the bitstring
Method      | Z0.BitString.TakeScalar``1                                            | Renders a segment as a packed primal value
Method      | Z0.BitString.TakeScalar``1(System.Int32)                              | Renders a segment as a packed primal value
Method      | Z0.BitString.TakeUInt8(System.Int32)                                  | Renders a bitstring segment as a packed byte value
Method      | Z0.BitString.TakeUInt8                                                | Renders a bitstring segment as a packed byte value
Method      | Z0.BitString.TakeUInt16(System.Int32)                                 | Renders a bitstring segment as a packed ushort value
Method      | Z0.BitString.TakeUInt16                                               | Renders a bitstring segment as a packed ushort value
Method      | Z0.BitString.TakeUInt32(System.Int32)                                 | Renders a bitstring segment as a packed uint value
Method      | Z0.BitString.TakeUInt32                                               | Renders a bitstring segment as a packed uint value
Method      | Z0.BitString.TakeUInt64(System.Int32)                                 | Renders a bitstring segment as a packed ulong value
Method      | Z0.BitString.Pack                                                     | Packs a section of the represented bits into a bytespan
Method      | Z0.BitString.Nlz                                                      | Counts the number of leading zero bits
Method      | Z0.BitString.Ntz                                                      | Counts the number of trailing zero bits
Method      | Z0.BitString.Sll(System.Int32)                                        | Shifts the bits leftwards by a specifed offset in a manner that mimics the canonical scalar left-shift
Method      | Z0.BitString.PopCount                                                 | Counts the number of enabled bits
Method      | Z0.BitString.Replicate                                                | Creates a replica of the bitstring
Method      | Z0.BitString.Replicate(System.Int32)                                  | Copies n replicas to a new bitstring
Method      | Z0.BitString.Concat(Z0.BitString)                                     | Forms a new bitstring by concatenation
Method      | Z0.BitString.Concat(Z0.BitString,Z0.BitString)                        | Forms a new bitstring by concatenation
Method      | Z0.BitString.Concat(Z0.BitString,Z0.BitString,Z0.BitString)           | Forms a new bitstring by concatenation
Method      | Z0.BitString.Truncate(System.Int32)                                   | Returns a new bitstring of length no greater than a specified maximum
Method      | Z0.BitString.Pad(System.Int32)                                        | Returns a new bitstring of length no less than a specified minimum
Method      | Z0.BitString.ToBits                                                   | Renders the content as a span of bits
Method      | Z0.BitString.ToNatBits``1(``0)                                        | Renders the content as a natural block of bits
Method      | Z0.BitString.ToPackedBytes                                            | Packs the bitsequence into a bytespan
Method      | Z0.BitString.EqualsTrace(Z0.BitString,System.Action{System.String})   | Determines whether this bitstring represents the same value as another, ignoring            leading zeroes
Method      | Z0.BitString.Equals(Z0.BitString)                                     | Determines whether this bitstring represents the same value as another, ignoring            leading zeroes
Method      | Z0.BitString.Partition(System.Int32)                                  | Partitions the bitstring into blocks of a specified maximum width
Method      | Z0.BitString.Format(System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Char},System.Nullable{System.Int32})| Formats bitstring content
Method      | Z0.BitString.Format                                                   | Formats bitstring using default parameter values
Method      | Z0.BitString.Scalar``1(System.Int32,System.Nullable{System.Int32})    | Packs a section of bits into a scalar
Method      | Z0.BitString.enable(System.Byte,System.Int32)                         | Enables a specified source bit
Method      | Z0.BitString.alloc(System.Int32)                                      | Allocates a bitstring with a specified length
Method      | Z0.BitString.load(System.Byte[])                                      | Loads a bitstring from a bitseq
Method      | Z0.BitString.load(System.ReadOnlySpan{System.Byte})                   | Constructs a bitstring from bitseq
Method      | Z0.BitString.load``1(System.Runtime.Intrinsics.Vector128{``0},System.Nullable{System.Int32})| Populates a bitstring from a 128-bit cpu vector
Method      | Z0.BitString.load``1(System.Runtime.Intrinsics.Vector256{``0},System.Nullable{System.Int32})| Populates a bitstring from a 256-bit cpu vector
Method      | Z0.BitString.load``1(Z0.Vector512{``0},System.Nullable{System.Int32}) | Populates a bitstring from a 256-bit cpu vector
Method      | Z0.BitString.load(System.ReadOnlySpan{Z0.bit})                        | Constructs a bitstring from a span of bits
Method      | Z0.BitString.scalar``1(``0,System.Nullable{System.Int32})             | Constructs a bitstring from primal value
Method      | Z0.BitString.scalar``1(``0,System.Byte[],System.Nullable{System.Int32})| Constructs a bitstring from primal value, using caller-supplied storage instead of allocation
Method      | Z0.BitString.enum``1(``0,System.Nullable{System.Int32})               | Converts an enumeration value to a bitstring
Method      | Z0.BitString.scalars``1(System.ReadOnlySpan{``0},System.Nullable{System.Int32})| Constructs a bitstring from span of scalar values
Method      | Z0.BitString.scalars``1(System.Span{``0},System.Nullable{System.Int32})| Constructs a bitstring from span of scalar values
Method      | Z0.BitString.pow2(System.Int32)                                       | Constructs a bitstring from a power of 2
Method      | Z0.BitString.scalar``1(Z0.BitString,System.Int32)                     | Extracts a scalar value from a bitstring
Method      | Z0.BitString.parse(System.String)                                     | Constructs a bitstring from text
Method      | Z0.BitString.not(Z0.BitString)                                        | Computes the bitwise complement of the source operand
Method      | Z0.BitString.and(Z0.BitString,Z0.BitString)                           | Computes the bitwise and between the operands
Method      | Z0.BitString.or(Z0.BitString,Z0.BitString)                            | Computes the bitwise or between the operands
Method      | Z0.BitString.xor(Z0.BitString,Z0.BitString)                           | Computes the bitwise xor between the operands
Method      | Z0.BitString.srl(Z0.BitString,System.Int32)                           | Applies a logical right-shift to the source
Method      | Z0.BitString.sll(Z0.BitString,System.Int32)                           | Applies a logical left-shift to the source
Method      | Z0.BitString.even(Z0.BitString)                                       | Extracts the even bits from the source
Method      | Z0.BitString.odd(Z0.BitString)                                        | Extracts the odd bits from the source
Method      | Z0.BitString.transpose(Z0.BitString,System.Int32,System.Int32)        | Considers the source bitstring as a row-major encoding of an mxn matrix and computes             the transposition maxtrix of dimension nxm similary encoded as a bitstring
Method      | Z0.BitString.inject(Z0.BitString,Z0.BitString,System.Int32,System.Int32)| Overwrites selected target bits with lower bits from the source
Method      | Z0.BitString.intersperse(Z0.BitString,Z0.BitString)                   | Intersperses the source bitstring with content from another
Method      | Z0.BitString.clear(Z0.BitString,System.Int32,System.Int32)            | Clears a contiguous sequence of bits between two indices
Method      | Z0.BitString.rotl(Z0.BitString,System.Int32)                          | Rotates the bits leftwards by a specified offset
Method      | Z0.BitStringNatX.Transpose``2(Z0.BitString,``0,``1)                   | Pretends the source bitstring is an mxn matrix and computes the transposition maxtrix of dimension nxm encoded as a bitstring
Method      | Z0.BitStringX.ToBitStream``1(System.Collections.Generic.IEnumerator{``0})| Transforms an primal enumerator into a bitstream
Method      | Z0.BitStringX.ToBitStream``1(System.Collections.Generic.IEnumerable{``0})| Transforms an primal source stream into a bitstream
Method      | Z0.BitStringX.ToBitString(System.SByte,System.Nullable{System.Int32}) | Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.Byte,System.Nullable{System.Int32})  | Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.Int16,System.Nullable{System.Int32}) | Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.UInt16,System.Nullable{System.Int32})| Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.Int32,System.Nullable{System.Int32}) | Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.UInt32,System.Nullable{System.Int32})| Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.Int64,System.Nullable{System.Int32}) | Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.UInt64,System.Nullable{System.Int32})| Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.Single,System.Nullable{System.Int32})| Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.Double,System.Nullable{System.Int32})| Converts the source value to a bitstring
Method      | Z0.BitStringX.ToBitString(System.Span{Z0.bit})                        | Converts a span of bits to a to a bitstring
Method      | Z0.BitStringX.ToBitString(System.ReadOnlySpan{Z0.bit})                | Converts a readonly span of bits to a bitstring
Method      | Z0.BitStringX.ToBitString``1(System.Span{``0},System.Nullable{System.Int32})| Converts span content to a to a bitstring
Method      | Z0.BitStringX.ToBitString``1(Z0.Block64{``0},System.Nullable{System.Int32})| Converts blocked content to a bitstring
Method      | Z0.BitStringX.ToBitString``1(Z0.Block128{``0},System.Nullable{System.Int32})| Converts blocked content to a bitstring
Method      | Z0.BitStringX.ToBitString``1(Z0.Block256{``0},System.Nullable{System.Int32})| Converts datablock content to a bitstring
Method      | Z0.BitStringX.ToBitString``1(System.Runtime.Intrinsics.Vector128{``0},System.Nullable{System.Int32})| Converts an 128-bit intrinsic vector representation to a bistring
Method      | Z0.BitStringX.ToBitString``1(System.Runtime.Intrinsics.Vector256{``0},System.Nullable{System.Int32})| Converts an 256-bit vector representation to a bistring
Method      | Z0.BitStringX.ToBitString``1(Z0.Vector512{``0},System.Nullable{System.Int32})| Converts a 512-bit vector representation to a bistring
Method      | Z0.BitStringX.ToBitString``1(``0,System.Nullable{System.Int32})       | Converts an enumeration value to a bitstring
Method      | Z0.BitStringX.Reverse(Z0.BitString)                                   | Reverses the order of the source bits
Method      | Z0.BitStringX.Even(Z0.BitString)                                      | Extracts the even bits
Method      | Z0.BitStringX.Odd(Z0.BitString)                                       | Extracts the odd bits
Method      | Z0.BitStringX.RotL(Z0.BitString,System.Int32)                         | Rotates the bits leftwards by a specified offset
Method      | Z0.RandomBitStrings.BitString(Z0.IPolyrand,Z0.BitSize)                | Produces a bitstring with a specified length
Method      | Z0.RandomBitStrings.BitString(Z0.IPolyrand,System.Int32,System.Int32) | Produces a bitstring with randomized length
Method      | Z0.RandomBitStrings.BitString(Z0.IPolyrand,Z0.Interval{System.Int32}) | Produces a bitstring with randomized length
Method      | Z0.RandomBitStrings.BitString``1(Z0.IPolyrand,``0)                    | Produces a random bitstring with a specified natural length
Method      | Z0.RandomBitStrings.BitStrings(Z0.IPolyrand,System.Int32,System.Int32)| Produces a random sequence of bitstrings with randomized length
Method      | Z0.BitStore.storeseq``1(``0)                                          | Constructs a bitsequence via the bitstore and populates an allocated target with the result
Method      | Z0.BitStore.storeseq``1(``0,System.Span{System.Byte},System.Int32)    | Constructs a bitsequence via the bitstore and populates a caller-supplied target with the result
Method      | Z0.BitStore.bitchars(System.Byte)                                     | Constructs a sequence of 8 characters {ci} := [c7,...c0] over the domain {'0','1'} according to whether the            bit in the i'th position of the source is respecively disabled/enabled
Method      | Z0.BitStore.select(System.Byte)                                       | Selects an identified bit sequence
Method      | Z0.BitStore.select(System.Int32,System.Int32)                         | Selects unpacked bits from a block of 8*256 bytes, where each byte represents 1 bit
Method      | Z0.BitStore.bitseq``1(``0)                                            | Constructs a span of bytes where each byte, ordered from lo to hi,             represents a single bit in the source value
