| M:Z0.BitPack.pack(System.UInt32@,Z0.N8,Z0.W8)     | 
            <summary>
            Packs the least significant bit from 8 32-bit unsigned integers to an 8-bit target
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>                
            <param name="dst">The target width</param>
        
| M:Z0.BitPack.pack(System.UInt32@,Z0.N16,Z0.W16)   | 
            <summary>
            Packs the least significant bit from 16 32-bit unsigned integers to a 16-bit target
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>                
            <param name="dst">The target width</param>
        
| M:Z0.BitPack.pack(System.UInt32@,Z0.N32,Z0.W32)   | 
            <summary>
            Packs the least significant bit from 32 32-bit unsigned integers to a 32-bit target
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>                
            <param name="dst">The target width</param>
        
| M:Z0.BitPack.pack(System.UInt32@,Z0.N64,Z0.W64)   | 
            <summary>
            Packs the least significant bit from 64 32-bit unsigned integers to a 64-bit target
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>                
            <param name="dst">The target width</param>
        
| M:Z0.BitPack.pack(System.Span{Z0.bit},Z0.N8)      | 
            <summary>
            Packs the leading 8 source bits
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
        
| M:Z0.BitPack.pack(System.Span{Z0.bit},Z0.N16)     | 
            <summary>
            Packs the 16 leading source bits
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
        
| M:Z0.BitPack.pack(System.Span{Z0.bit},Z0.N32)     | 
            <summary>
            Packs the 32 leading source bits
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
        
| M:Z0.BitPack.pack(System.Span{Z0.bit},Z0.N64)     | 
            <summary>
            Packs the 64 leading source bits
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
        
| M:Z0.BitPack.unpack(System.Byte@,System.Int32,Z0.Block256{System.UInt32}@)| 
            <summary>
            Unpacks a specified number source bytes to a corresponding count of 256-bit blocks comprising 32-bit target values
            </summary>
            <param name="src">The bit source</param>
            <param name="blocks">The number of bytes to pack</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.Byte,Z0.Block64{System.Byte}@,System.Int32)| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The blocked target</param>
            <param name="block">The block index</param>
            <typeparam name="T">The source type</typeparam>
        
| M:Z0.BitPack.unpack(System.UInt16,Z0.Block128{System.Byte}@,System.Int32)| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The blocked target</param>
            <param name="block">The block index</param>
            <typeparam name="T">The source type</typeparam>
        
| M:Z0.BitPack.unpack(System.UInt32,Z0.Block256{System.Byte}@,System.Int32)| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The blocked target</param>
            <param name="block">The block index</param>
            <typeparam name="T">The source type</typeparam>
        
| M:Z0.BitPack.unpack(System.UInt64,Z0.Block512{System.Byte}@,System.Int32)| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The blocked target</param>
            <param name="block">The block index</param>
            <typeparam name="T">The source type</typeparam>
        
| M:Z0.BitPack.unpack(System.Byte@,System.Int32,System.UInt32@)| 
            <summary>
            Unpacks a specified number source bytes to a corresponding count of 32-bit target values
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bytes to pack</param>
            <param name="dst">The target reference, of size at least 256*count bits</param>
        
| M:Z0.BitPack.unpack(System.Byte,System.Byte@)     | 
            <summary>
            Distributes each packed source bit to the least significant bit of 8 corresponding target bytes
            </summary>
            <param name="packed">The packed source bits</param>
            <param name="unpacked">A reference to the target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt16,System.Byte@)   | 
            <summary>
            Distributes each packed source bit to the least significant bit of 16 corresponding target bytes
            </summary>
            <param name="packed">The packed source bits</param>
            <param name="unpacked">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt32,System.Byte@)   | 
            <summary>
            Distributes each packed source bit to the least significant bit of 32 corresponding target bytes
            </summary>
            <param name="packed">The packed source bits</param>
            <param name="unpacked">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt64,System.Byte@)   | 
            <summary>
            Distributes each packed source bit to the least significant bit of 64 corresponding target bytes
            </summary>
            <param name="packed">The packed source bits</param>
            <param name="unpacked">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.Byte,System.Span{System.UInt32})| 
            <summary>
            Unpacks 8 source bits over 8 32-bit target segments
            </summary>
            <param name="src">The source bits</param>
            <param name="buffer">The intermediate buffer</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt16,System.Span{System.UInt32})| 
            <summary>
            Unpacks 8 source bits over 16 32-bit target segments
            </summary>
            <param name="src">The source bits</param>
            <param name="buffer">The intermediate buffer</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt32,System.Span{System.UInt32})| 
            <summary>
            Unpacks 32 source bits over 32 32-bit target segments
            </summary>
            <param name="src">The source bits</param>
            <param name="buffer">The intermediate buffer</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt64,System.Span{System.UInt32})| 
            <summary>
            Unpacks 64 source bits over 64 32-bit target segments
            </summary>
            <param name="src">The source bits</param>
            <param name="buffer">The intermediate buffer</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.Byte,System.Span{System.Byte})| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt16,System.Span{System.Byte})| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt32,System.Span{System.Byte})| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.unpack(System.UInt64,System.Span{System.Byte})| 
            <summary>
            Distributes each packed source bit to the least significant bit of the corresponding target byte
            </summary>
            <param name="src">The packed source bits</param>
            <param name="dst">The target buffer</param>
        
| M:Z0.BitPack.pack``1(Z0.Block32{``0}@,Z0.N8,System.Int32)| 
            <summary>
            Packs 4 1-bit values taken from the least significant bit of each source byte of an index-identified block
            </summary>
            <param name="src">The bit source</param>
            <param name="mod">The bit selection modulus</param>
            <param name="block">The index of the block to pack</param>
        
| M:Z0.BitPack.pack``1(Z0.Block64{``0}@,Z0.N8,System.Int32)| 
            <summary>
            Packs 8 1-bit values taken from the least significant bit of each source byte of an index-identified block
            </summary>
            <param name="src">The bit source</param>
            <param name="mod">The bit selection modulus</param>
            <param name="block">The index of the block to pack</param>
        
| M:Z0.BitPack.pack``1(Z0.Block128{``0}@,Z0.N8,System.Int32)| 
            <summary>
            Pack 16 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The pack source</param>
        
| M:Z0.BitPack.pack``1(Z0.Block256{``0}@,Z0.N8,System.Int32)| 
            <summary>
            Packs 32 1-bit values taken from the least significant bit of each source byte
            </summary>
        
| M:Z0.BitPack.pack``1(Z0.Block512{``0}@,Z0.N8,System.Int32)| 
            <summary>
            Packs 64 1-bit values taken from the least significant bit of each source byte
            </summary>
        
| M:Z0.BitPack.pack8(System.UInt64)                 | 
            <summary>
            Packs 8 1-bit values taken from the least significant bit of each source byte
            </summary>
        
| M:Z0.BitPack.pack``1(System.ReadOnlySpan{``0},Z0.N8,Z0.N8,System.Int32)| 
            <summary>
            Packs 8 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
            <param name="mod">The selection modulus</param>
            <param name="offset">The source offset</param>
        
| M:Z0.BitPack.pack``1(System.ReadOnlySpan{``0},Z0.N16,Z0.N8,System.Int32)| 
            <summary>
            Pack 16 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
            <param name="mod">The selection modulus</param>
            <param name="offset">The source offset</param>
        
| M:Z0.BitPack.pack``1(System.ReadOnlySpan{``0},Z0.N32,Z0.N8,System.Int32)| 
            <summary>
            Packs 32 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
            <param name="mod">The selection modulus</param>
            <param name="offset">The source offset</param>
        
| M:Z0.BitPack.pack``1(System.ReadOnlySpan{``0},Z0.N64,Z0.N8,System.Int32)| 
            <summary>
            Packs 64 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
            <param name="mod">The selection modulus</param>
            <param name="offset">The source offset</param>
        
| M:Z0.BitPack.pack``2(System.ReadOnlySpan{``0},Z0.N8,System.Int32,``1)| 
            <summary>
            Packs bitsize[T] values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="mod">The bit selection modulus</param>
            <param name="offset">The source offset</param>
            <param name="t">A target type representative</param>
            <typeparam name="S">The source cell type</typeparam>
            <typeparam name="T">The target type</typeparam>
        
| M:Z0.BitPack.pack``2(System.Span{``0},Z0.N8,System.Int32,``1)| 
            <summary>
            Packs bitsize[T] values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="mod">The bit selection modulus</param>
            <param name="offset">The source offset</param>
            <param name="t">A target type representative</param>
            <typeparam name="S">The source cell type</typeparam>
            <typeparam name="T">The target type</typeparam>
        
| M:Z0.BitPack.pack``1(``0@,Z0.N8,Z0.N8)            | 
            <summary>
            Packs 8 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="mod">The bit selection modulus</param>
            <param name="block">The index of the block to pack</param>
        
| M:Z0.BitPack.pack``1(``0@,Z0.N16,Z0.N8)           | 
            <summary>
            Packs 16 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
            <param name="mod">The bit selection modulus</param>
        
| M:Z0.BitPack.pack``1(``0@,Z0.N32,Z0.N8)           | 
            <summary>
            Packs 32 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
            <param name="mod">The bit selection modulus</param>
        
| M:Z0.BitPack.pack``1(``0@,Z0.N64,Z0.N8)           | 
            <summary>
            Packs 64 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
            <param name="count">The number of bits to pack</param>
            <param name="mod">The bit selection modulus</param>
        
| M:Z0.BitPack.packlsb``1(System.Runtime.Intrinsics.Vector128{``0},Z0.N8)| 
            <summary>
            Packs 16 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitPack.packlsb``1(System.Runtime.Intrinsics.Vector256{``0},Z0.N8)| 
            <summary>
            Packs 32 1-bit values taken from the least significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitPack.packmsb``1(System.Runtime.Intrinsics.Vector128{``0},Z0.N8)| 
            <summary>
            Packs 16 1-bit values taken from the most significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitPack.packmsb``1(System.Runtime.Intrinsics.Vector256{``0},Z0.N8)| 
            <summary>
            Packs 32 1-bit values taken from the most significant bit of each source byte
            </summary>
            <param name="src">The bit source</param>
        
| M:Z0.BitPack.unpack``1(System.ReadOnlySpan{``0},Z0.Block256{System.UInt32}@)| 
            <summary>
            Unpacks each primal source bit to a 32-bit target
            </summary>
            <param name="src">The packed bit source</param>
            <param name="dst">The unpacked bit target</param>
        
| M:Z0.BitPack.unpack``1(System.ReadOnlySpan{``0},Z0.Block256{System.UInt32}@,System.Int32)| 
            <summary>
            Unpacks each primal source bit to a 32-bit blocked target
            </summary>
            <param name="src">The packed bit source</param>
            <param name="dst">The unpacked bit target</param>
            <param name="block">The target block index</param>
            <typeparam name="T">The source type</typeparam>
        
| M:Z0.BitPack.unpack``1(System.Span{``0},Z0.Block256{System.UInt32}@)| 
            <summary>
            Unpacks each primal source bit to a 32-bit target
            </summary>
            <param name="src">The packed bit source</param>
            <param name="dst">The unpacked bit target</param>
        
| M:Z0.BitPack.unpack``1(System.Span{``0},Z0.Block256{System.UInt32}@,System.Int32)| 
            <summary>
            Unpacks each primal source bit to a 32-bit blocked target
            </summary>
            <param name="src">The packed bit source</param>
            <param name="dst">The unpacked bit target</param>
            <param name="block">The target block index</param>
            <typeparam name="T">The source type</typeparam>
        
| M:Z0.BitPack.unpack``1(``0,System.Span{System.UInt32})| 
            <summary>
            Unpacks each primal source bit to a 32-bit target
            </summary>
            <param name="src">The bit source</param>
            <param name="dst">The bit target</param>
            <typeparam name="T">The source type</typeparam>
        
| M:Z0.BitPack.vpack``1(System.Runtime.Intrinsics.Vector128{``0},System.Byte)| 
            <summary>
            Packs 16 1-bit values taken from each source byte at a specified index
            </summary>
            <param name="src">The bit soure</param>
            <param name="index">The byte-relative index from which the bit will be extracted, an integer in the range [0,7]</param>
        
| M:Z0.BitPack.vpack``1(System.Runtime.Intrinsics.Vector256{``0},System.Byte)| 
            <summary>
            Packs 32 1-bit values taken from each source byte at a specified index
            </summary>
            <param name="src">The bit soure</param>
            <param name="index">The byte-relative index from which the bit will be extracted, an integer in the range [0,7]</param>
        
